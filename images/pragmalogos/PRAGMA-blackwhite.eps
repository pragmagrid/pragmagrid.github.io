%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: PRAGMA-oneColor.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Jennifer Matthews
%%CreationDate: 10/April/18
%%BoundingBox: 0 0 534 410
%%HiResBoundingBox: 0 0 533.7056 409.9083
%%CropBox: 0 0 533.7056 409.9083
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 12184 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2BFF7E7D52FFA852527DFF53A87D527DA8FD6AFFA8A87DFFFFFF%7D52A8FFFFFF52A852FF52FF52A8A827A8FFFF7D52FD62FFA8FFA8527D7D%52FFFF7D7DFFFF7DA85227A8FF52A87DA8FF52A8FFFF5252FFA827A8FD5B%FFA8FFFFA852FF27FFFF527DFF5952FFFF27A8527D27A827A827FFA852A8%FF7D7D52A85252A87E52FF7DFD57FFA8277DFF7DA87D7EFF52A8FFFF5252%537DA87DFFA87D7DA87D597DA8FFFF52A87D27A852FF52A87D5252A8FD52%FFA8A8FFA8FD0452A87D527D52FD04FFA8A8FD0EFF7DFF7D7DA852A852FF%52A8FF27FFA8FD50FF5252A8FF7DA8A85252A852A8FD19FFA87D7D7DA852%FFFF27FF5228A8FD4EFF7D52277DA827FFFFA8A8FD1DFF7EA85253A85352%7E52FF52A8FD48FF7D84FFFFFF7D7DA8527DA8FD24FF7D7D7DFF52FFFF7D%7DA87DFD45FF7D52FD04FF7D7DFFA8FD29FF7D52A8A827A8527DFD43FF7E%FF527D537DA8FF7DA8FD16FFA8A8525227522752527D7DA8A9FD09FF7D7D%52A87D7DFFFFA8A8FD40FF7D52FF7DA8527DFD0BFFA87D7E7D7D7EFD06FF%845227F827F827F827F827F827F827277D7DFD09FF7D27FFFFFF7D277DFD%3DFF7DFFFF7D7DFFA87DA8FD07FFA87E5252FD0427202727A8FFFFFFA820%272727202727272027272720272727202727A8FD07FFA852A8FF8420AFA8%FFA8FD3AFFA827275352277DA8A8FD05FF7D522727F827F827F827F827F8%2727FFFFFFA827F827F827F827F827F827F827F827F827F82727FD09FF7D%7D2EA87DFF527DFD39FFA8FFA853A8A87DA8FD04FFA87D2727F8272727F8%272727F8272727F852FFFFFFA92727F8272727F8272727F8272727F82727%52A9FFFFFFA8FD07FF7D52A8FFA852FFFFA8FD36FF5252277D7D52A8FD05%FF7D27F827F827F827F827F8275253F82727A8FD04FF7D27F827F827F827%F827F827F827F827F827F8FD04FF52277EFD06FFA87DFF7D52A8277DFD35%FF7D7DFFFF52A87DFD05FF52272027272720272752527D7DFF2752FD08FF%7D2720A8A8A852272727202727272027272752FFFFFFA827275252FD07FF%277D5252FFA8A8FD33FF52A8FFFF7D7DFD04FFA82727F827F827F827F852%A8FFFFA8F827FD09FFA8F852FD04FF2827F827F827F827F827F827277DFF%FF7D27F82727FD05FFA87DFF7D7D7D52FD32FF7DFF7D52FFA852FD04FFA8%2727F8272727F8272752FD04FF52277DFD08FF7D27A8FD06FF52272727F8%272727F8272727F852A8FFFD0527A8FD06FF277DA8FFFFA8FD2FFFA85327%A8535252A8FFFFFF7DF827F827F827F827F827277DFFFFFF2752FD08FFA8%52A9FD08FF5227F827F827F827F827F827F827537DF827F827F87DFD04FF%FD04A8527DF8A8FD2DFFA87DFFA827A8FD05FF7D20272727202727272027%27277DFFFFA827FD15FF5227202727272027272720FD072720272752FD05%FF7D7D7D527DFD2EFF5227FFFFAF27A8FFFFFF7DF827F827F827F827F827%F82727FFFFFF7DA8FD16FFF827F827F827F827F827F827F827F827F82727%7D527DFD06FFA827A8FFA8FD2BFFA97DA8277DFD05FF7DF8272727F82727%27F82727277DFD1CFF842727F8272727F8272727F8272727F82727277DFF%5252FD05FF7D7DFF7D277DFD2EFF277DFFFFFF53F827F827F827F827F827%F82727FF7DFD1CFF52F827F827F827F827F827F827F827F827F8277DA87D%FD05FF7DA852277D52A8FD28FF7D7D7DA8A8FFAFFFFF7D27272027272720%272727202727A8FF7DFFA8A8FD19FF7D2720272727202727272027272720%272727202752FD07FF527D527D53FD29FF7DFD04527DFFFF7DF827F827F8%27F827F827F827F87EFF7D277D7DFD1AFF7EF827F827F827F827F827F827%F827F827F8277D7EFD08FFA852FFFF7E7EFD28FF7D52FD04FFA82727F827%2727F8272727F82752A8FFFF27277DFD1BFFA8272727F8272727F8272727%F8272727F82727FD0AFFA87DFF525252FD25FFA87DFFA852A8FFFFFF2727%F827F827F827F827F82753FFFFFF5252A8FD1DFFF827F827F827F827F827%F827F827F827F852FD0AFFA87D27527DA87DFD24FF52A8FFFF7D7EFFFF52%27272720FD0427A87D277DFFFFFFA827A8FD1EFF52272720272727202727%272027272720277DFD0BFF7D7DFD27FFA87DFFFFA87DFFFF7D27F827F827%F827F8277DFF27A8FFFFFF7D27FD1FFFA827F827F827F827F827F827F827%F827F87DFD0CFF52A8FD27FF27A8FF7D7DFFA9272727F8272727F827277D%FF27A8FFFFA827A8FD20FF52272727F8272727F8272727F827272728FD33%FFA8A8A8272852FFFF7DF827F827F827F827F852FFA827FFFF7DF827FD22%FF5227F827F827F827F827F827F827F852FD0EFF7DFD04A8FD20FF7D5252%A8A8FFFFFFFD042720272727202753FD04FF7D2052A8FD23FF5227202727%2720272727202727277DFD0DFFA87D527D527DFD22FFA85252A8FF7D27F8%27F827F827F827F852FFFFFF52F87DFD25FFA8F827F827F827F827F827F8%2727FD11FF2752A8FD24FF7DFFFF522727F8272727F827272752FFFFFF7D%FD28FF522727F8272727F8FD0527A8FD0FFF7D52A8FD20FF527DA8FF53A8%FF7DF827F827F827F827F827F8A8FD2CFF7D272727F827F827A8A8A8FF52%52FD0EFFA852A8FF7D7DFD1FFF7D525252FFFFFD04272027272720272752%A8FD2DFF5252FD0527FD05FF27FD0FFF7DFFA85252A8FD1DFF527DFFA87D%FFA827F827F827F827F827F8272752FD2DFFA85252F827F852FD05FFA8A8%FD0EFF7DA87D7DA87DFD1CFF7D7D7DFD04FF7D2727F8272727F82727277D%A8A8FD2EFF7D7D27F82727FD15FFA85927A8FD1EFF52527D7DFFFFFF2727%F827F827F827F8527DFD31FFA8FF5227F827A8FD15FF7DA8FF5952FD1DFF%A87D7D52FFA827272720272727207DFD35FFA82027277DFFFF59A8FD11FF%7DFFA8527DA8FD1AFFA87D52FD04FF7D2752F827F8275252FD37FF52F827%F8A87D277DFD11FF53A852A87DA8FD1AFF7E7DA8A8FFFFFF52847DFD0427%7D7DFFFFFF7DFD33FFA827F8272727F8A8FD12FF527DFD1DFF7D52527D53%A8FF52A852F827F8277DFFFFFF7D52FD34FFA852F827F82759FD12FFA87D%7D527DFD1BFFAFFF847DA8FF7DFF7D272727207DFFFFFF7D52FD36FFA852%27202752FD11FF527D277D52FD1CFFA8A852FD04FFA8F827F82752FFFFFF%5252FD38FFA827F827A8FD10FF7DFFA8A87DA8FD19FFA8525252A8FD04FF%A8FD0427A8FFFFFF52F8A8FD39FF7DF8A8FD10FF7DA8FD1DFF275252FD06%FF7D52A8F827A8FFFFA852527DFD3AFF5252FFFFA8F8527DFFA8FD08FF7E%527D5259A8FD1AFFA85252A9FD04FF7DA8FF277DFFFFFF52FF27FD3BFF84%277DAF522727272052FD0AFF7D5227FD1DFF7D7DFD04FF7D7DFF7DFFFFFF%A8A8FF277DFD3BFF5227F827F827F827F852A8FD07FF27527EFD24FFA852%FD05FFA9FFA8277DFD3CFFA87D2727F8272727F852FD06FFA87D7DA8A8FD%1DFFA8A8FFFFFFA8AF27A8FD04FF27527DA87DFD3DFFA827F827F827F827%F852FD05FFAFA87D27277DFD19FFA87D7D277DFFFFFF7D52527DFFFFFF7D%277DFD41FF27272027272720272752A8FFFFFF7D7D7DA8A8FD1AFF21277D%FD05FF7D272852FFFF7D27F8A8FFFFA8FD3DFF7D27F827F827F827F827F8%277DFFFFA853FD04A8FD1AFFA87D27A8FD04FF522728FFA827F827528452%A8FD3DFF52F8272727F8272727F8272727A8FF7D7D527D52A8FD1AFFA852%52A8FD04FFA8F827FF7DF827F827277DA8FFA8FD3BFF2727F827F827F827%F827F827F8A8FF7DA87D527DA8FD19FF7D277DA8AFFD05FF5220847D2720%522752A8FFFF7D7DFFA8FD37FFA927202727272027272720272727A8FFA8%52527D7DFD1AFF7DA87D7D52FD05FF7D27F8A82727282727FFFFFF7D2727%277DFD36FFA8F827F827F827F827F827F82727FFFF847DFD20FF7D7DA8FD%05FF2752FFFF527D27277EFFFFFF5327F82752FD35FFA8272727F8272727%F8272727F827FFFF287D52527DFD1AFF7D52527D5384FD05FF7DF87DFFFF%FFA87DFD05FF7D27F8277DFD34FFA8F827F827F827F827F827F82727FF7D%7DFFFFA8A8FD1EFF847DFD06FF7D202752A8FD08FF52272727A8FD33FFA8%2727272027272720272727207DFFFFA8FD1FFFA8277D52FD08FFA87D7D27%27F8527DFD04FFA8F87D27277DFD33FF2727F827F827F827F827F82752FF%7D7DA87D2EA8FD1BFF52A8527D52FD0BFFFD047DFD08FF2752FD33FF7DF8%272727F8272727F82727A8FF84522752FD1DFF7D2752527DA8FD0FFFA8A8%FD05FFA87DFD33FF7D27F827F827F827F827F827A8FFFFFFA852A8FD1CFF%A8FD14FF7D20A8FFA852FD37FF2027272720272727202752FD05FF84A8FD%21FF7DFD0DFF7D7D272752FFA827A8FD36FF52F827F827F827F827F87DFD%25FFA8FFFF7D7DFD0CFF7DF8272752FFFF277DFD36FF5227F8272727F827%272784FD24FF7D7DFFFF7D7DFD0BFFA8F827F827F852522727FD37FF2727%F827F827F82727FD06FFA8A8FD1EFF52FFFF527DFD0BFF7D272027272720%272727A8FD36FF7D202727272027277DFD06FF7D277DFD1DFFA8275252FF%A8FD09FFA852F827F827F827F827F852FD06FFA8FD2FFF7D27F827F827F8%277DFD07FF27277DFD1EFFA87D277DFD08FF8427F8272727F8272727F827%277DFD04FFA87DA8FD2EFF7D2727F8FD0427FD09FF27277DFD1CFF535259%FD09FFA827F827F827F827F827F827F827F8A8FD04FFA8A8FD2EFF2727F8%27F827F859FD09FFA8F8277DFD0BFFA8FD0FFFA8A8FFA8FF53FD07FF5227%20272727202727272027272752FD33FFA827272720272727A8A87DFD08FF%A82027A8FF53A8FD05FF7D28FD11FF7D7D27277DA8FD06FFA8F827F827F8%27F827F827F827F8277DFD32FF7DF827F827F82752FFA827F87DA8FD04FF%A8FF7DF8527D27F8A8FFFFA852F884FD11FF7D527DFF7D52FD07FF522727%F8272727F8272727F8272752FD32FF2727F8272727F8A8FFFFFF7D272752%A8FFA8F852FF52F82727277DFF7D2720A8FD13FFA8A852527DA8FD06FF52%27F827F827F827F827F827F82727FD31FF7D27F827F852527DFD06FF7D27%F8522727F8FFFF27F827F827F82752FD15FFA952A8FFFF52A8FD06FF2727%202727272027272720272727A8FD0FFFA8FD13FFA8FD0CFF5327527DA9A8%A87DA87DA8A8FD04FF7D27272027A8FF5227272720277DFD17FFA8A8FFFF%A852FD06FF7DF827F8275227F827F827F82727FFFF7DF8272127F8272752%7DFFFFFFA852F827F827F827277DFD0AFFA852F82727FD08FFA8F87DA87D%2727F827F827F8277EFD04FF52F827F87DFF52F827F8277DFD05FFA827F8%2752FD0EFFA852FFFF7D53A8FD05FF7D2727277DFFA852F8272727F852FF%FFA8FD0427592727F8277DFFFFFF7D27F852527D27272752FD0AFF5227F8%27A8FD07FF7DA87D272727287D7D7D525227A8FD04FF7D272727F8522727%F82727A8FD06FF2727F827A8FD0EFF525252287D52A8FD04FFA827527DFD%04FF52F827F82752FFFFFF272752FFA8FF7D27F8277DFFFF84F8277DFFFF%FF2727F87DFD08FFA8272727F852FD06FFA8FF5227F852A8FD05FFA87D7E%FD04FFA8F827F827F827F827F827A8FD05FF7D272727F87DFD0FFFA87DFF%7D7DFD0EFFA82727207DFFFFFF52277DFFA87DFF7D272759FFFF7D2720A8%FFFFFFA8272752FD08FF7D27847D2727FD07FF7D27207DFD0EFFA8272727%20272727202727FD06FF5227A8522752FD11FFA8277DA87DA8FD0CFF7DF8%277DFFFFFF272752FFA8277DFFF82752FFFFA8F8277DFFFFFFA827F852FD%08FF2727A8A8F8277DFD05FFA827F852FD0FFFAFF827F827F827F827F852%FD05FFA8F852FF7DF8277EFD10FF5252527D7DFD0EFFA8A8FD04FF52F87D%FFFFF87EA827F87DFFFF7D2727A8FFFFFFA8F8277DFD07FFA82752FFFF52%F852FD05FF7DF8277DFD10FF28F8272727F827272752FD05FF7D277DFFA8%27F87DFD10FF7D7DA8A8FFFF7DA8FD0CFFA852FFFFFF272752FF7D7DFF7D%F827A8FFFF7DF8277EFFFFA8272727FD08FF52F8A8FFFF7D27F8A8FD04FF%2727F8FD11FF2827F827F827F827F87DFD04FFA827F8A9FFFF5227F8FD12%FF7D52847D27FD0DFF7D27FFFFFF52207DFF7EA87D27277DFFFFFF7D2727%A87D7D272752FD09FF2752FD04FF272752FD04FF272052FD0AFFAFFD06FF%7D20272727202727277DFD04FFA8277DFD04FF20277DFD11FF7D527E27FD%0FFF7DFFFFFF272752FF7D52F87DA8FD04FF7DF8277D28F827A8FD09FF53%27277D537D7D28F827A8FFFFFF272727FD09FFA827F827A8FFFFFF5227F8%27F827F827F87EFD04FF5227527D537D5927F852FD12FF5227FD14FF5227%7DA8A9FD08FF7D27F8FFA827F87DFD09FF52F8272727F8272727F87DFFFF%FF4C2727A8FD09FF522727FD04FF7D2727F8272727F827A8FFFFFFA827F8%272727F8272727F8A8FD11FFA8A8FD14FF272752FD0AFF7EF8277DFF5227%F87DFD07FFA8F8527DA87DA87DA8272727FFFFFF5227F87DFD09FF7DF827%A8FFFFFF5227F827F87D522727FD04FF7DF852A8A87DA87DA8F82752FD27%FF52277DFD0AFF7D2720A8FFFF272727A8FD06FF52277DFD06FF7D202784%FFFFA8272727FD09FF532727FD04FF7D277D2027A852207DFD04FF2727A8%FD06FF532027A8FD26FF272752FD0AFFA8F8277DFFFFA8F82727A8FD04FF%A82721FD07FFA827F852FFFFFF52F82752FD08FF7DF827A8FFFFFF277D7D%2727FF272784FFFFFF7D272EFD07FF7D27F87DFD26FF52F87DFD0AFF7D27%27A8FFFFFFA8F82727FD04FF7DF87DFD08FF5227F8FFFFFFA827272752FD%07FF522727FD04FF277DA8277DFF2727FD04FF52F8A8FD08FF272727FD26%FF272727FD0AFF7DF8277DFD04FF7DF82727FFFFFF27277DFD08FFA8F827%52FFFFFF8427F827F87D7DA8A8A87D52F827A8FFFFFFF8A859277EFFF852%FFFFFFA8F827A8FD08FF7DF8277DFD24FF7D272027A8FD09FF5227277DFD%05FF7D272720A8522720A8FD08FFA82720277DFD04FF7DFD042720272727%202727FFFFFFA827FF7D27FFA8277DFFFFFF272720FD09FF7D272027A8FD%23FFA87D7D7DA8FD08FFA87D7DA87DFD06FFA87D7D52FD047DFD08FFA87D%7D7D7EA8FD05FF7D7DFD05527D7DA8FFFFFF7D27FF5252FF7DF8AFFFFFFD%047D7EFD07FFA8A87D7D7DA8FD63FF527DFF5252FF5252FD78FF527DFF27%7DFF527DFD78FFA8FFFF7DA8FF27FD7EFFA87DFD7FFFA8FD95FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-04-10T16:10:51-07:00</xmp:CreateDate>
         <xmp:MetadataDate>2018-04-10T16:10:51-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-04-10T16:10:51-07:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq0&#xA;zKoqxAFQKnxJoMVSjUfM9paa5baEsUsuq3ttPdWaFSkLiClUM7DjyqRsKkDcimKsCj/Nbzk3k+Pz&#xA;1+gLSXy0GZryzt7qWTUYIIpDFNIytDHEWiZGLJXYDr3xVN/zR8zXFv5c0J9NvmsbHzBqllY3Wrxf&#xA;C8FndBnaVHP92zBQgc/Z5V64qqLYeUvKHmTR9LtdNlMvmcTWMl5LcSTofq8LT0nE8jl2cKVBp8zi&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=55 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>55.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=45 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>45.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=40 Y=30 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=85 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=5 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=5 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811822AC35967B9BEAA</stEvt:instanceID>
                  <stEvt:when>2018-04-10T16:10:51-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:0280117407206811822AC35967B9BEAA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0280117407206811822AC35967B9BEAA</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:0280117407206811822AC35967B9BEAA</xmpMM:OriginalDocumentID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -409.908 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 409.908 li
533.706 409.908 li
533.706 0 li
cp
clp
74.2852 294.512 mo
73.4761 295.138 72.5083 295.396 72.1431 295.086 cv
71.77 294.772 71.4702 295.459 71.4702 296.608 cv
71.4702 297.774 71.77 299.827 72.1431 301.2 cv
72.5083 302.557 73.1758 304.361 73.6157 305.194 cv
74.0674 306.04 75.2622 309.049 76.293 311.876 cv
77.3223 314.717 78.7725 318.155 79.5107 319.516 cv
80.2417 320.88 81.207 323.118 81.6494 324.482 cv
82.0967 325.847 82.4546 327.91 82.4546 329.061 cv
82.4546 330.221 82.7529 331.258 83.1235 331.354 cv
83.4971 331.459 84.1494 331.802 84.5986 332.111 cv
85.0386 332.429 85.9482 332.78 86.6064 332.879 cv
87.2646 332.983 88.5938 332.643 89.5562 332.111 cv
90.5103 331.59 92.2515 330.991 93.4336 330.773 cv
94.6118 330.56 95.8218 329.628 96.1143 328.685 cv
96.4092 327.732 96.6514 326.623 96.6514 326.197 cv
96.6514 325.771 97.4907 325.521 98.5288 325.624 cv
99.5581 325.724 100.277 325.128 100.136 324.293 cv
100.136 324.293 100.136 324.293 100.938 324.293 cv
101.737 324.293 101.737 324.293 101.737 324.293 cv
103.95 323.877 105.874 324.126 106.025 324.861 cv
106.174 325.598 106.894 326.197 107.626 326.197 cv
108.367 326.197 109.817 327.142 110.841 328.295 cv
111.879 329.45 113.38 331.172 114.2 332.111 cv
115.004 333.062 115.91 333.581 116.208 333.264 cv
116.497 332.954 117.282 332.86 117.947 333.074 cv
118.605 333.282 119.756 334.74 120.494 336.321 cv
121.225 337.894 122.555 339.95 123.434 340.904 cv
124.318 341.851 125.403 342.704 125.851 342.806 cv
126.285 342.907 127.01 342.732 127.45 342.429 cv
127.894 342.112 128.74 342.112 129.322 342.429 cv
129.917 342.732 130.817 343.174 131.335 343.378 cv
131.859 343.59 132.756 343.334 133.347 342.806 cv
133.938 342.283 134.294 341.252 134.147 340.522 cv
134 339.782 134.3 339.177 134.825 339.177 cv
135.331 339.177 135.7 338.666 135.619 338.032 cv
135.545 337.41 135.427 336.463 135.354 335.938 cv
135.28 335.409 135.4 334.458 135.619 333.836 cv
135.845 333.207 136.024 331.922 136.024 330.975 cv
136.024 330.029 136.146 328.226 136.289 326.962 cv
136.445 325.701 136.806 324.505 137.096 324.289 cv
137.389 324.08 137.633 321.929 137.633 319.516 cv
137.633 317.101 137.034 313.245 136.289 310.922 cv
135.555 308.617 133.445 304.154 131.604 300.999 cv
129.758 297.856 126.813 293.384 125.041 291.072 cv
123.274 288.758 121.225 285.152 120.494 283.064 cv
119.756 280.953 118.304 277.091 117.278 274.471 cv
116.244 271.853 114.734 268.321 113.924 266.644 cv
113.119 264.962 112.327 267.625 112.179 272.554 cv
112.038 277.498 111.676 281.874 111.385 282.303 cv
111.092 282.716 109.703 282.543 108.298 281.912 cv
106.903 281.282 104.974 279.474 104.017 277.908 cv
103.06 276.327 101.973 274.356 101.601 273.516 cv
101.238 272.669 101.359 271.299 101.879 270.462 cv
102.392 269.621 102.147 268.415 101.338 267.787 cv
100.527 267.16 99.0771 266.469 98.124 266.264 cv
97.1699 266.051 95.9595 266.051 95.4487 266.264 cv
94.9346 266.469 94.4478 266.899 94.3711 267.218 cv
94.3027 267.535 93.8813 268.393 93.4336 269.127 cv
92.9937 269.861 92.6304 271.057 92.6304 271.797 cv
92.6304 272.543 92.6934 273.73 92.7661 274.471 cv
92.8428 275.201 92.4194 275.798 91.832 275.798 cv
91.2432 275.798 90.5142 275.63 90.2236 275.429 cv
90.2236 275.429 90.2236 275.429 89.9565 274.282 cv
89.6846 273.136 89.6846 273.136 89.6846 273.136 cv
88.8066 272.088 87.6543 271.655 87.1416 272.173 cv
86.627 272.707 85.9556 274.422 85.667 275.995 cv
85.3794 277.567 84.7739 279.202 84.3281 279.631 cv
83.8887 280.047 83.04 280.64 82.4546 280.958 cv
81.8599 281.271 81.4458 282.565 81.5205 283.821 cv
81.5898 285.091 81.6494 286.801 81.6494 287.64 cv
81.6494 288.477 81.0513 289.422 80.3125 289.735 cv
79.5728 290.049 78.2544 291.003 77.3721 291.84 cv
76.4854 292.675 75.0942 293.882 74.2852 294.512 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
130.668 349.297 mo
130.817 348.983 131.419 348.806 132.008 348.914 cv
132.59 349.021 133.381 349.021 133.746 348.914 cv
134.113 348.806 134.538 348.294 134.686 347.775 cv
134.834 347.244 135.135 346.209 135.354 345.473 cv
135.575 344.741 135.875 345.165 136.024 346.435 cv
136.175 347.696 136.35 349.15 136.423 349.677 cv
136.496 350.201 136.734 351.659 136.956 352.929 cv
137.18 354.184 136.701 355.559 135.894 355.98 cv
135.081 356.393 134.177 356.477 133.876 356.163 cv
133.585 355.855 133.28 355.248 133.207 354.83 cv
133.138 354.401 132.655 353.379 132.137 352.536 cv
131.622 351.704 131.024 350.759 130.799 350.445 cv
130.571 350.132 130.517 349.606 130.668 349.297 cv
cp
f
111.652 259.197 mo
112.679 259.304 113.77 258.538 114.059 257.479 cv
114.353 256.427 114.771 255.477 115 255.384 cv
115.22 255.274 115.519 255.36 115.662 255.567 cv
115.662 255.567 115.662 255.567 116.468 255.95 cv
117.278 256.338 117.278 256.338 117.278 256.338 cv
117.719 256.551 118.496 257.32 119.014 258.05 cv
119.534 258.795 120.377 259.726 120.896 260.156 cv
121.404 260.573 122.192 261.685 122.628 262.632 cv
123.073 263.579 124.163 264.354 125.041 264.354 cv
125.925 264.354 126.771 264.095 126.917 263.79 cv
127.064 263.462 127.665 262.527 128.252 261.683 cv
128.85 260.846 128.419 259.036 127.318 257.675 cv
126.212 256.305 124.586 255.105 123.703 255.003 cv
122.813 254.895 121.734 254.382 121.29 253.859 cv
120.849 253.329 120.429 252.3 120.353 251.562 cv
120.283 250.827 120.037 250.655 119.816 251.177 cv
119.596 251.707 119.417 251.531 119.417 250.801 cv
119.417 250.073 118.99 248.865 118.486 248.131 cv
117.96 247.386 116.997 246.188 116.339 245.454 cv
115.673 244.722 115.188 243.69 115.267 243.161 cv
115.337 242.639 114.674 241.948 113.79 241.636 cv
112.905 241.328 111.831 241.065 111.385 241.065 cv
110.943 241.065 110.397 240.726 110.171 240.301 cv
109.957 239.88 109.046 238.939 108.175 238.196 cv
107.278 237.467 105.954 236.777 105.226 236.677 cv
104.485 236.568 103.288 236.917 102.548 237.444 cv
101.809 237.967 101.088 238.821 100.938 239.35 cv
100.788 239.872 100.25 240.301 99.7354 240.301 cv
99.2168 240.301 98.6763 240.04 98.5288 239.727 cv
98.3794 239.409 98.1396 238.465 97.9863 237.626 cv
97.8428 236.79 97.7813 235.759 97.8574 235.337 cv
97.9302 234.918 97.5088 234.413 96.9199 234.191 cv
96.3291 233.981 95.3667 233.468 94.7778 233.046 cv
94.1812 232.627 93.6426 232.971 93.5718 233.812 cv
93.4971 234.65 93.4971 235.602 93.5718 235.909 cv
93.6426 236.228 94.0679 236.999 94.5093 237.626 cv
94.9526 238.259 95.3706 239.376 95.4487 240.11 cv
95.5195 240.845 95.6431 241.703 95.7095 242.02 cv
95.79 242.333 96.0903 242.758 96.3809 242.969 cv
96.6812 243.179 97.3413 243.531 97.8574 243.733 cv
98.3755 243.947 99.0356 244.295 99.3306 244.492 cv
99.625 244.712 100.527 245.313 101.338 245.834 cv
102.147 246.356 103.115 247.044 103.475 247.362 cv
103.844 247.676 104.389 248.627 104.687 249.461 cv
104.981 250.305 105.464 251.849 105.761 252.905 cv
106.049 253.955 106.534 255.152 106.821 255.577 cv
107.123 255.995 107.912 256.941 108.576 257.675 cv
109.232 258.405 110.623 259.097 111.652 259.197 cv
cp
f
149.95 291.84 mo
149.95 291.84 150.793 293.218 151.835 294.889 cv
152.852 296.573 154.183 297.953 154.77 297.953 cv
155.361 297.953 155.965 296.913 156.112 295.658 cv
156.112 295.658 156.112 295.658 155.042 295.275 cv
153.974 294.889 153.974 294.889 153.974 294.889 cv
152.354 292.578 150.713 291.214 150.344 291.84 cv
149.982 292.473 149.688 292.981 149.688 292.981 cv
f
135.034 93.0439 mo
135.145 92.8823 135.254 92.7783 135.354 92.749 cv
135.724 92.6392 136.146 92.897 136.289 93.3203 cv
136.445 93.7378 136.734 93.0513 136.956 91.7979 cv
137.18 90.5313 137.661 88.6357 138.032 87.5923 cv
138.403 86.5425 139.124 85.083 139.639 84.3438 cv
140.154 83.6128 140.639 82.4961 140.711 81.8604 cv
140.782 81.2314 140.063 80.8896 139.107 81.1006 cv
138.144 81.3115 136.941 81.2266 136.423 80.9111 cv
135.909 80.6011 135.728 79.6528 136.024 78.8096 cv
136.319 77.9731 137.165 76.7705 137.9 76.1436 cv
138.634 75.5122 139.721 74.3931 140.312 73.6592 cv
140.897 72.9219 142.346 71.5518 143.521 70.6055 cv
144.699 69.6577 146.088 68.8833 146.602 68.8833 cv
147.117 68.8833 149.35 68.9746 151.556 69.0747 cv
153.772 69.1821 156.595 68.4072 157.855 67.3599 cv
159.104 66.3086 160.853 64.9355 161.739 64.2983 cv
162.618 63.6694 163.887 63.2432 164.552 63.3579 cv
165.212 63.4619 165.695 64.4868 165.62 65.6401 cv
165.546 66.7935 164.52 68.3447 163.336 69.0747 cv
162.167 69.8149 160.602 70.7563 159.855 71.1787 cv
159.129 71.5962 158.042 72.5405 157.445 73.2739 cv
156.861 74.0107 156.498 73.9268 156.647 73.0859 cv
156.647 73.0859 156.647 73.0859 155.57 78.0483 cv
154.503 83.0103 154.503 83.0103 154.503 83.0103 cv
154.503 83.8516 154.386 85.2246 154.237 86.0679 cv
154.091 86.9053 153.066 88.8853 151.958 90.457 cv
150.854 92.0342 151.095 92.3721 152.496 91.2173 cv
153.899 90.0645 155.521 88.5186 156.112 87.7822 cv
156.701 87.0527 157.79 85.7632 158.519 84.9214 cv
159.259 84.0854 160.105 82.625 160.398 81.6787 cv
160.687 80.7344 161.358 79.5254 161.867 79.0054 cv
162.388 78.4814 162.992 77.8799 163.21 77.6665 cv
163.428 77.4556 163.969 76.8535 164.414 76.3286 cv
164.854 75.8096 165.406 74.7729 165.62 74.042 cv
165.844 73.3066 166.084 72.3623 166.153 71.9395 cv
166.232 71.5176 166.53 70.832 166.823 70.417 cv
167.119 69.9951 167.602 69.8149 167.896 70.0322 cv
168.188 70.2412 168.732 69.9844 169.097 69.4629 cv
169.474 68.939 170.311 67.9058 170.971 67.167 cv
171.64 66.4321 172.844 65.8345 173.652 65.8345 cv
174.465 65.8345 175.913 65.8345 176.87 65.8345 cv
177.824 65.8345 179.205 65.2305 179.945 64.4922 cv
180.686 63.7573 181.643 62.9912 182.086 62.7754 cv
182.533 62.5635 183.438 62.2271 184.098 62.0093 cv
184.763 61.8071 186.025 61.5439 186.915 61.4395 cv
187.8 61.3379 188.277 60.3887 187.979 59.3335 cv
187.69 58.2959 186.959 57.0918 186.376 56.6729 cv
185.787 56.2495 184.692 52.7524 184.765 52.3325 cv
184.841 51.9165 178.115 48.4771 168.249 48.583 cv
157.919 48.6987 142.307 53.1094 139.744 53.4209 cv
137.335 53.7227 123.283 57.8691 116.375 61.2344 cv
112.761 62.9912 89.7202 80.0581 72.0962 98.8066 cv
57.1929 114.661 47.0942 132.551 46.3223 134.719 cv
44.6235 139.448 38.0913 151.682 36.7305 157.326 cv
36.6143 157.813 32.0469 172.535 30.6406 179.223 cv
30.0894 181.844 30.8618 187.02 30.8696 187.225 cv
30.9907 190.351 34.791 173.69 37.1694 172.721 cv
38.8115 172.052 40.8301 173.155 40.5112 174.586 cv
38.1548 185.215 38.8501 174.224 38.8501 183.911 cv
38.8501 185.175 38.8462 185.51 39.3589 184.995 cv
39.873 184.465 40.2891 183.84 40.8018 183.418 cv
41.3223 182.996 41.561 183.863 41.3369 185.318 cv
41.1167 186.797 40.9976 189.714 41.0781 191.821 cv
41.147 193.914 41.0889 196.321 40.936 197.161 cv
40.7866 198 40.4961 198.858 40.2744 199.064 cv
40.0464 199.28 39.8696 201.336 39.8696 203.648 cv
39.8696 205.957 40.228 207.854 40.6733 207.854 cv
41.1167 207.854 41.6577 208.965 41.8721 210.331 cv
42.1069 211.694 42.2837 214.017 42.2837 215.485 cv
42.2837 216.958 42.6343 218.756 43.0747 219.502 cv
43.5273 220.234 44.0664 221.607 44.2842 222.547 cv
44.5083 223.493 44.3828 224.872 44.0234 225.604 cv
43.6543 226.333 42.9312 225.913 42.4185 224.65 cv
41.8945 223.394 40.9976 221.497 40.4067 220.453 cv
39.8159 219.399 39.2153 218.025 39.0684 217.39 cv
38.9189 216.768 36.9575 215.169 36.3701 215.27 cv
35.7793 215.376 35.4585 218.887 36.1206 221.403 cv
36.835 224.163 38.6206 226.74 39.0684 227.897 cv
39.5024 229.05 40.8301 231.975 42.0083 234.386 cv
43.1899 236.797 44.5757 240.059 45.0879 241.636 cv
45.6045 243.217 46.5142 245.532 47.103 246.791 cv
47.6943 248.048 48.9507 248.998 49.9111 248.885 cv
50.8672 248.781 51.71 249.816 51.7847 251.177 cv
51.8608 252.546 52.5249 253.832 53.2573 254.047 cv
53.9995 254.253 55.8672 254.684 57.4097 255.003 cv
58.9565 255.313 61.1318 255.659 62.2383 255.76 cv
63.3359 255.864 64.79 256.297 65.4463 256.718 cv
66.1099 257.138 67.9204 257.561 69.4692 257.675 cv
71.0186 257.773 73.0063 258.124 73.8857 258.433 cv
74.7754 258.746 74.7754 259.697 73.8857 260.536 cv
73.0063 261.372 73.5449 262.154 75.0923 262.255 cv
76.6348 262.347 77.8442 261.666 77.7676 260.727 cv
77.6914 259.779 78.0532 258.832 78.5732 258.62 cv
79.0913 258.415 80.1729 257.902 80.9912 257.479 cv
81.7905 257.062 82.6987 256.718 82.9878 256.718 cv
83.2876 256.718 82.8589 257.915 82.0542 259.388 cv
81.2393 260.86 80.8833 262.228 81.2485 262.447 cv
81.6211 262.658 82.7661 262.134 83.791 261.299 cv
84.8262 260.462 86.0918 258.914 86.6064 257.854 cv
87.1265 256.817 86.3999 255.782 84.9976 255.577 cv
83.5977 255.36 80.5923 255.02 78.3013 254.811 cv
76.019 254.6 73.0063 254.433 71.6079 254.433 cv
70.2095 254.433 68.584 253.91 67.9912 253.284 cv
67.4116 252.652 66.4419 251.88 65.8511 251.562 cv
65.2656 251.25 63.3921 250.991 61.6934 250.991 cv
60.0024 250.991 58.1938 250.479 57.6777 249.846 cv
57.167 249.213 55.8955 248.44 54.8662 248.131 cv
53.8394 247.805 52.875 246.091 52.728 244.318 cv
52.5825 242.526 53.3057 240.897 54.3389 240.675 cv
55.3677 240.469 55.9658 239.612 55.668 238.777 cv
55.377 237.933 54.4712 237.242 53.6675 237.242 cv
52.853 237.242 52.0103 236.643 51.7847 235.909 cv
51.5669 235.177 51.0186 234.572 50.5806 234.572 cv
50.1362 234.572 49.7803 233.03 49.7803 231.14 cv
49.7803 229.254 49.3628 226.932 48.8428 225.98 cv
48.3247 225.037 47.9663 222.894 48.0425 221.217 cv
48.1138 219.538 47.814 217.213 47.3604 216.063 cv
46.9282 214.903 45.9048 212.84 45.0879 211.477 cv
44.2788 210.124 43.3745 207.961 43.0747 206.706 cv
42.7891 205.45 42.6064 203.476 42.6772 202.313 cv
42.7559 201.161 43.2944 199.101 43.8833 197.731 cv
44.4751 196.368 45.1997 194.991 45.4946 194.682 cv
45.7832 194.363 46.6353 194.449 47.3604 194.871 cv
48.1045 195.29 48.7139 195.974 48.7139 196.395 cv
48.7139 196.817 49.0142 198.192 49.3813 199.453 cv
49.7432 200.708 50.2856 202.6 50.5806 203.648 cv
50.8765 204.708 50.9365 206.074 50.7163 206.706 cv
50.4907 207.338 51.1567 207.245 52.1875 206.517 cv
53.2207 205.775 54.311 204.49 54.5996 203.648 cv
54.8984 202.81 55.4985 201.863 55.9365 201.555 cv
56.3779 201.229 57.1074 200.546 57.5488 200.025 cv
57.9873 199.503 58.9565 196.154 59.6875 192.585 cv
60.4258 189.011 60.7261 185.572 60.355 184.941 cv
59.9951 184.316 59.2715 183.193 58.7534 182.459 cv
58.2354 181.727 58.7759 181.133 59.9541 181.133 cv
59.9541 181.133 59.9541 181.133 58.6152 179.986 cv
57.2822 178.84 57.2822 178.149 57.2822 177.306 cv
57.2822 176.472 57.8213 175.269 58.4834 174.636 cv
59.1436 174.007 59.6875 172.634 59.6875 171.584 cv
59.6875 170.528 60.4165 169.753 61.2925 169.86 cv
62.1836 169.975 62.9609 170.74 63.0303 171.584 cv
63.1123 172.42 62.8643 173.277 62.5029 173.495 cv
62.1333 173.706 61.5273 174.215 61.1641 174.636 cv
60.793 175.06 60.4932 175.913 60.4932 176.547 cv
60.4932 177.18 60.8491 178.123 61.2925 178.642 cv
61.7383 179.173 62.4575 179.347 62.9038 179.026 cv
63.3398 178.712 63.7686 178.196 63.8413 177.878 cv
63.9121 177.566 64.2793 177.044 64.6504 176.733 cv
65.0122 176.423 65.4971 175.825 65.7129 175.4 cv
65.9331 174.983 65.9331 174.123 65.7129 173.495 cv
65.4971 172.86 65.3848 172 65.4463 171.584 cv
65.5229 171.166 66.4272 170.557 67.4561 170.249 cv
68.4893 169.93 69.4526 168.899 69.6035 167.956 cv
69.7456 167.014 70.3477 166.07 70.9385 165.852 cv
71.5293 165.648 72.3057 165.737 72.6763 166.051 cv
73.0469 166.361 74.1284 166.02 75.0923 165.286 cv
76.043 164.546 80.9893 161.582 79.5107 162.42 cv
79.208 162.592 83.9385 156.436 83.791 156.121 cv
83.6499 155.804 84.4365 154.346 85.5361 152.877 cv
86.6401 151.411 88.2061 148.659 89.0151 146.773 cv
89.832 144.878 90.4341 142.127 90.3535 140.661 cv
90.2808 139.188 90.1675 137.045 90.0889 135.887 cv
90.0127 134.732 89.8354 132.924 89.6846 131.876 cv
89.6846 131.876 89.6846 131.876 90.2236 130.736 cv
90.7603 129.585 90.7603 129.585 90.7603 129.585 cv
91.7891 128.534 93.5322 126.734 94.6421 125.577 cv
95.7456 124.422 96.0454 123.482 95.313 123.482 cv
94.5708 123.482 93.0664 123.567 91.9644 123.667 cv
90.8535 123.773 89.9565 123.432 89.9565 122.91 cv
89.9565 122.385 90.313 121.094 90.7603 120.048 cv
91.2036 118.992 92.1641 118.217 92.9023 118.33 cv
93.6372 118.43 94.7813 117.917 95.4487 117.178 cv
96.1089 116.448 96.9629 116.271 97.3208 116.801 cv
97.6899 117.323 97.9902 118.098 97.9902 118.52 cv
97.9902 118.932 98.4692 119.197 99.0586 119.089 cv
99.6475 118.984 100.559 118.554 101.074 118.137 cv
101.583 117.715 101.948 118.052 101.879 118.896 cv
101.803 119.731 101.444 120.852 101.074 121.38 cv
100.702 121.904 100.578 122.763 100.802 123.29 cv
101.021 123.813 101.088 125.015 100.938 125.966 cv
100.788 126.909 100.308 128.625 99.8672 129.782 cv
99.4258 130.932 98.939 132.481 98.7861 133.215 cv
98.6445 133.95 99.2485 134.21 100.136 133.788 cv
100.136 133.788 100.136 133.788 100.938 133.406 cv
101.737 133.018 101.737 133.018 101.737 133.018 cv
103.067 132.396 104.389 130.756 104.687 129.4 cv
104.981 128.031 105.155 125.367 105.084 123.482 cv
105.011 121.592 105.136 119.274 105.359 118.33 cv
105.574 117.373 106.245 116.433 106.821 116.227 cv
107.418 116.016 108.083 115.842 108.298 115.842 cv
108.523 115.842 109.068 115.412 109.508 114.894 cv
109.948 114.364 111.15 113.591 112.179 113.171 cv
112.179 113.171 112.179 113.171 112.451 112.024 cv
112.72 110.882 112.72 110.882 112.72 110.882 cv
114.2 110.246 115.876 109.988 116.468 110.308 cv
117.059 110.623 118.149 110.283 118.888 109.542 cv
119.614 108.807 120.886 107.523 121.695 106.683 cv
122.504 105.846 124.13 104.122 125.312 102.863 cv
126.492 101.604 128.356 98.9404 129.458 96.9502 cv
130.569 94.9507 132.012 91.856 132.672 90.0801 cv
133.337 88.2837 134.3 86.4868 134.825 86.0679 cv
135.331 85.6455 135.7 86.2461 135.619 87.3994 cv
135.553 88.4473 134.818 90.7065 133.914 92.6821 cv
f
135.985 96.7441 mo
135.886 96.9609 135.785 97.1743 135.683 97.3823 cv
134.648 99.4795 133.448 102.488 133.002 104.063 cv
132.561 105.642 131.662 107.954 130.996 109.211 cv
130.336 110.481 129.373 111.939 128.85 112.461 cv
128.335 112.987 127.433 114.274 126.844 115.325 cv
126.253 116.375 125.293 118.699 124.7 120.478 cv
124.115 122.266 123.267 124.326 122.825 125.063 cv
122.387 125.794 121.477 126.659 120.819 126.972 cv
120.159 127.282 118.887 128.399 118.009 129.449 cv
117.118 130.5 115.31 132.047 113.992 132.888 cv
112.664 133.728 110.735 135.1 109.698 135.938 cv
108.674 136.779 107.101 137.98 106.216 138.616 cv
105.337 139.239 104.56 140.786 104.478 142.049 cv
104.407 143.309 104.407 145.118 104.478 146.061 cv
104.56 147 104.792 146.743 105.019 145.487 cv
105.237 144.225 105.841 142.938 106.357 142.622 cv
106.872 142.311 107.777 141.967 108.363 141.856 cv
108.956 141.751 110.22 141.666 111.174 141.666 cv
112.133 141.666 113.097 141.409 113.322 141.093 cv
113.542 140.781 114.021 139.921 114.391 139.183 cv
114.76 138.448 115.419 137.771 115.861 137.66 cv
116.311 137.554 117.629 136.95 118.809 136.327 cv
119.985 135.693 121.736 134.924 122.69 134.608 cv
123.656 134.29 124.493 132.485 124.563 130.6 cv
124.641 128.709 125.306 126.814 126.041 126.392 cv
126.773 125.975 127.862 124.347 128.452 122.767 cv
129.041 121.195 129.641 119.397 129.796 118.763 cv
129.937 118.132 130.055 117.02 130.055 116.281 cv
130.055 115.542 130.614 114.769 131.259 114.563 cv
131.932 114.35 133.25 114.094 134.208 113.991 cv
135.165 113.883 136.195 113.196 136.485 112.461 cv
136.783 111.726 137.747 110.612 138.631 109.976 cv
139.514 109.352 142.225 106.946 144.656 104.636 cv
147.085 102.324 146.964 101.893 144.391 103.675 cv
141.815 105.463 139.105 106.925 138.36 106.925 cv
137.626 106.925 136.783 107.007 136.485 107.119 cv
136.195 107.22 135.673 107.572 135.323 107.9 cv
134.982 108.228 134.619 108.575 134.518 108.663 cv
134.426 108.757 134.462 108.065 134.609 107.119 cv
134.758 106.167 135.178 105.399 135.553 105.399 cv
135.919 105.399 136.156 104.542 136.074 103.489 cv
136.013 102.437 136.132 100.547 136.352 99.2915 cv
136.514 98.3745 136.813 97.5361 137.105 97.106 cv
135.985 96.7441 li
cp
f
56.7495 231.898 mo
56.7495 231.898 56.7495 231.039 56.7495 229.999 cv
56.7495 228.949 57.0474 227.745 57.4097 227.325 cv
57.7837 226.903 58.6245 226.126 59.2847 225.604 cv
59.9502 225.084 60.8491 224.218 61.2925 223.691 cv
61.7383 223.165 62.583 222.312 63.1738 221.784 cv
63.7573 221.255 64.6597 219.887 65.1836 218.725 cv
65.6978 217.577 66.4795 216.463 66.9194 216.252 cv
67.3608 216.036 67.8984 215.093 68.127 214.146 cv
68.353 213.207 68.9492 211.919 69.4692 211.282 cv
69.979 210.654 70.7617 210.738 71.209 211.477 cv
71.6475 212.217 72.4956 213.669 73.0811 214.721 cv
73.6719 215.777 73.8452 216.887 73.4761 217.199 cv
73.1162 217.52 72.4521 218.295 72.0068 218.924 cv
71.5728 219.555 71.2666 220.582 71.3379 221.217 cv
71.4141 221.845 71.5986 223.217 71.748 224.271 cv
71.8936 225.319 72.1299 226.52 72.2773 226.944 cv
72.4209 227.37 72.7861 227.79 73.0811 227.897 cv
73.3716 227.998 73.7944 227.917 74.0205 227.696 cv
74.2407 227.487 74.8335 227.325 75.3516 227.325 cv
75.875 227.325 76.6528 227.403 77.0986 227.515 cv
77.5347 227.622 76.8169 228.224 75.4897 228.851 cv
75.4897 228.851 75.4897 228.851 79.2427 228.089 cv
82.9878 227.325 82.9878 227.325 82.9878 227.325 cv
82.9878 226.271 83.2324 225.146 83.5322 224.837 cv
83.8174 224.523 84.2388 223.833 84.4639 223.312 cv
84.6841 222.783 84.7979 223.474 84.7388 224.837 cv
84.6602 226.201 84.1792 228.091 83.6592 229.033 cv
83.1465 229.989 82.3594 230.929 81.9214 231.134 cv
81.4761 231.35 80.4561 231.432 79.6416 231.332 cv
78.8286 231.23 77.4956 231.211 76.6621 231.295 cv
75.8398 231.381 74.9956 231.463 74.7939 231.486 cv
74.5854 231.509 74.7808 231.957 75.2251 232.467 cv
75.665 232.997 76.748 233.512 77.6294 233.614 cv
78.5225 233.718 79.5405 233.812 79.9102 233.812 cv
80.2788 233.812 80.6392 234.321 80.7168 234.962 cv
80.7896 235.589 80.4263 236.368 79.9102 236.677 cv
79.3975 236.994 78.5547 237.242 78.0322 237.242 cv
77.5215 237.242 77.1543 237.763 77.2349 238.396 cv
77.3032 239.021 77.6636 239.712 78.0322 239.925 cv
78.4019 240.128 79.1245 240.726 79.6416 241.259 cv
80.1616 241.777 80.5791 242.896 80.5791 243.733 cv
80.5791 244.572 80.1616 245.954 79.6416 246.791 cv
79.1245 247.632 78.1631 247.8 77.501 247.175 cv
76.8394 246.543 76.1792 246.543 76.0244 247.175 cv
75.8843 247.8 75.4614 248.569 75.0923 248.885 cv
74.7197 249.207 74.1807 248.699 73.8857 247.751 cv
73.5898 246.8 73.1704 245.426 72.9463 244.693 cv
72.7271 243.951 72.3057 243.358 72.0068 243.358 cv
71.7158 243.358 71.4702 244.037 71.4702 244.884 cv
71.4702 245.713 71.1719 246.321 70.8105 246.222 cv
70.437 246.118 70.1929 244.999 70.2656 243.733 cv
70.3477 242.475 70.4609 240.584 70.5376 239.54 cv
70.6084 238.481 70.978 237.113 71.3379 236.485 cv
71.7065 235.851 72.0068 234.65 72.0068 233.812 cv
72.0068 232.971 71.7666 232.284 71.4702 232.284 cv
71.1792 232.284 70.5791 232.971 70.1328 233.812 cv
69.6987 234.65 69.2085 236.191 69.0654 237.242 cv
68.918 238.299 68.7334 240.616 68.6587 242.396 cv
68.5898 244.186 67.8662 245.645 67.061 245.645 cv
66.2427 245.645 64.9824 245.126 64.2422 244.492 cv
63.5073 243.869 62.3018 243.179 61.5635 242.969 cv
60.8286 242.758 59.9263 241.729 59.5557 240.675 cv
59.186 239.632 58.4604 238.512 57.9443 238.196 cv
57.4316 237.887 56.9521 236.6 56.8779 235.333 cv
56.8076 234.086 56.7495 233.046 56.7495 233.046 cv
f
71.209 207.657 mo
71.498 207.556 71.8633 207.037 72.0068 206.517 cv
72.1563 205.987 72.6484 204.87 73.0811 204.031 cv
73.5244 203.193 74.1865 202.251 74.5459 201.931 cv
74.9248 201.614 75.4058 200.928 75.6235 200.406 cv
75.8491 199.884 76.3286 198.938 76.6938 198.305 cv
77.0635 197.673 77.7271 196.646 78.167 196.014 cv
78.6138 195.39 79.2178 194.787 79.5107 194.682 cv
79.8057 194.57 80.6484 195.092 81.3867 195.822 cv
82.1226 196.566 82.2979 197.505 81.7852 197.925 cv
81.269 198.346 80.4263 198.687 79.9102 198.687 cv
79.3975 198.687 79.2739 200.146 79.6416 201.931 cv
80.0122 203.716 80.0742 205.525 79.7773 205.941 cv
79.4829 206.359 79.1191 207.298 78.9741 208.043 cv
78.8247 208.776 78.1016 210.657 77.3721 212.236 cv
76.6348 213.82 75.7266 215.625 75.3516 216.252 cv
74.9956 216.882 75.4673 216.705 76.4312 215.874 cv
77.3833 215.027 78.5317 213.65 78.9741 212.816 cv
79.4175 211.971 79.9507 211.023 80.1821 210.712 cv
80.4023 210.401 80.6392 210.573 80.7168 211.094 cv
80.7896 211.618 81.1499 212.569 81.5205 213.199 cv
81.8901 213.831 82.4321 214.513 82.7217 214.721 cv
83.0195 214.929 83.5605 215.106 83.9292 215.106 cv
84.2983 215.106 84.7793 214.415 84.9976 213.578 cv
85.2158 212.734 85.4634 211.362 85.5361 210.52 cv
85.6089 209.677 85.3091 208.134 84.8594 207.086 cv
84.4233 206.041 83.8789 204.916 83.6592 204.604 cv
83.439 204.288 83.2598 203.519 83.2598 202.892 cv
83.2598 202.259 83.5605 201.229 83.9292 200.6 cv
84.2983 199.958 84.5386 198.421 84.4639 197.161 cv
84.3882 195.897 84.0879 193.841 83.791 192.585 cv
83.4985 191.32 82.7788 189.945 82.188 189.528 cv
81.5986 189.106 81.062 188.5 80.9912 188.196 cv
80.9019 187.877 81.1499 186.672 81.5205 185.515 cv
81.8901 184.36 82.2495 182.474 82.3203 181.319 cv
82.395 180.166 82.3354 178.619 82.188 177.878 cv
82.0386 177.149 81.7407 176.467 81.5205 176.356 cv
81.3003 176.247 80.6929 176.507 80.1821 176.929 cv
79.6621 177.346 78.9966 178.462 78.7017 179.406 cv
78.4092 180.351 78.0532 181.899 77.9023 182.84 cv
77.7529 183.791 77.6294 185.766 77.6294 187.235 cv
77.6294 188.704 77.4526 190.855 77.2349 192.005 cv
77.0146 193.167 75.8105 195.911 74.5459 198.114 cv
73.2969 200.322 71.7959 202.979 71.209 204.031 cv
70.6177 205.084 70.2563 206.371 70.4038 206.893 cv
70.5547 207.42 70.9092 207.768 71.209 207.657 cv
cp
f
404.893 260.014 mo
403.109 259.592 402.586 259.689 401.31 260.634 cv
402.579 255.281 li
403.044 256.473 403.532 256.754 405.84 257.302 cv
410.275 258.353 li
419.094 255.398 li
420.845 254.789 421.293 254.534 422.25 253.542 cv
421.689 256.374 li
421.608 256.715 li
421.41 257.555 421.338 257.621 419.899 258.083 cv
412.088 260.639 li
416.561 265.384 li
417.025 265.882 417.381 266.133 417.775 266.226 cv
418.274 266.344 418.951 266.061 419.402 265.559 cv
418.264 270.359 li
409.616 261.134 li
404.893 260.014 li
cp
f
407.144 243.619 mo
406.75 244.838 406.42 246.15 406.22 247.347 cv
405.881 249.368 406.098 250.688 407.093 252.742 cv
403.62 250.63 li
405.539 239.168 li
405.923 240.299 406.526 240.618 408.919 241.019 cv
420.221 242.911 li
422.615 243.312 423.289 243.205 424.021 242.262 cv
423.13 247.58 li
422.746 246.45 422.143 246.13 419.75 245.729 cv
407.144 243.619 li
cp
f
417.914 227.466 mo
417.816 227.972 417.795 228.214 417.768 228.536 cv
417.539 231.223 418.567 233.124 420.367 233.277 cv
422.06 233.421 423.285 232.065 423.47 229.889 cv
423.516 229.352 423.531 228.866 423.474 227.94 cv
417.914 227.466 li
cp
409.021 226.708 mo
408.719 227.71 408.615 228.297 408.539 229.183 cv
408.283 232.192 409.425 234.021 411.655 234.212 cv
412.864 234.315 413.897 233.943 414.642 233.141 cv
415.445 232.289 415.803 231.264 415.957 229.464 cv
416.021 228.712 416.04 228.172 416.005 227.304 cv
409.021 226.708 li
cp
425.26 230.475 mo
425.095 232.409 424.845 233.443 424.254 234.339 cv
423.378 235.726 422.015 236.476 420.565 236.352 cv
419.356 236.249 418.28 235.535 417.696 234.457 cv
417.508 234.116 417.395 233.862 417.154 233.192 cv
416.798 234.19 416.569 234.658 416.167 235.246 cv
415.145 236.755 413.507 237.563 411.76 237.414 cv
409.638 237.233 407.794 235.695 406.961 233.405 cv
406.502 232.122 406.419 230.87 406.594 228.503 cv
406.764 226.515 li
407.108 222.485 li
407.583 223.581 408.209 223.851 410.627 224.058 cv
422.044 225.031 li
424.462 225.238 425.125 225.078 425.779 224.078 cv
425.435 228.108 li
425.424 228.242 425.375 228.807 425.336 229.588 cv
425.26 230.475 li
cp
f
423.953 212.513 mo
425.288 213.019 425.288 213.019 426.015 213 cv
426.141 217.933 li
425.829 217.32 425.255 217.065 424.339 217.089 cv
424.016 217.097 423.667 217.133 423.317 217.196 cv
410.801 219.268 li
408.839 219.534 408.306 219.79 407.47 220.863 cv
407.331 215.365 li
407.729 216.218 408.358 216.525 409.517 216.496 cv
409.867 216.487 410.136 216.453 411.104 216.32 cv
423.249 214.5 li
406.778 208.528 li
407.875 207.151 408.325 206.79 409.845 206.103 cv
422.883 200.188 li
410.28 198.837 li
409.604 198.773 409.037 198.733 408.794 198.74 cv
407.931 198.762 407.507 199.042 406.936 199.92 cv
406.817 195.257 li
407.73 196.151 408.71 196.503 410.603 196.698 cv
422.613 198.037 li
423.776 198.169 423.776 198.169 424.073 198.161 cv
424.719 198.145 425.09 197.893 425.61 197.124 cv
425.738 202.111 li
425.414 202.119 425.333 202.148 424.747 202.406 cv
412.03 208.205 li
423.953 212.513 li
cp
f
407.693 185.544 mo
407.65 186.883 407.685 187.775 407.853 189.059 cv
408.174 191.519 408.829 192.983 410.177 194.356 cv
406.317 193.529 li
404.778 181.765 li
405.476 182.734 406.145 182.864 408.579 182.546 cv
419.915 181.063 li
422.321 180.749 422.958 180.421 423.36 179.335 cv
424.586 188.719 li
424.657 189.254 424.705 189.411 424.887 189.768 cv
421.599 190.198 li
422.362 189.173 422.508 188.42 422.27 186.602 cv
422.092 185.238 421.944 184.523 421.702 183.712 cv
416.435 184.401 li
416.928 188.171 li
416.984 188.599 417.036 188.782 417.242 189.109 cv
414.247 189.5 li
414.776 188.969 414.893 188.41 414.732 187.18 cv
414.403 184.667 li
407.693 185.544 li
cp
f
419.133 174.939 mo
420.046 173.508 420.375 171.787 420.033 170.151 cv
419.575 167.96 418.21 166.703 416.653 167.029 cv
415.281 167.316 414.76 168.251 413.925 171.896 cv
413.329 174.445 413.042 175.442 412.532 176.43 cv
411.97 177.566 410.999 178.32 409.811 178.569 cv
408.439 178.855 406.96 178.504 405.679 177.643 cv
404.008 176.504 402.914 174.695 402.401 172.241 cv
402.031 170.473 401.976 169.024 402.245 167.15 cv
405.526 165.583 li
404.44 167.765 404.115 169.899 404.589 172.168 cv
405.085 174.544 406.702 176.079 408.311 175.742 cv
409.05 175.588 409.712 175.063 410.097 174.405 cv
410.519 173.655 410.746 172.892 411.305 170.434 cv
411.824 168.039 412.143 167.063 412.716 166.117 cv
413.321 165.054 414.418 164.246 415.632 163.992 cv
418.641 163.363 421.136 165.678 422.019 169.901 cv
422.323 171.352 422.409 172.684 422.3 174.276 cv
419.133 174.939 li
cp
f
415.525 158.869 mo
416.323 157.372 416.516 155.63 416.047 154.025 cv
415.419 151.877 413.96 150.731 412.433 151.177 cv
411.087 151.571 410.642 152.544 410.094 156.243 cv
409.699 158.831 409.491 159.847 409.059 160.872 cv
408.589 162.049 407.679 162.876 406.515 163.217 cv
405.169 163.61 403.667 163.375 402.323 162.617 cv
400.568 161.613 399.335 159.895 398.632 157.488 cv
398.125 155.754 397.957 154.314 398.079 152.425 cv
401.227 150.605 li
400.315 152.866 400.158 155.019 400.808 157.245 cv
401.489 159.574 403.219 160.978 404.798 160.517 cv
405.523 160.305 406.141 159.73 406.474 159.043 cv
406.836 158.263 407.001 157.484 407.368 154.99 cv
407.698 152.562 407.94 151.564 408.437 150.576 cv
408.957 149.469 409.988 148.578 411.178 148.229 cv
414.128 147.367 416.796 149.48 418.007 153.621 cv
418.423 155.044 418.613 156.365 418.63 157.961 cv
415.525 158.869 li
cp
f
408.686 135.158 mo
400.695 135.178 li
402.822 140.571 li
408.686 135.158 li
cp
398.743 135.224 mo
394.111 135.311 li
393.504 135.318 392.963 135.416 392.637 135.544 cv
392.136 135.742 391.934 136.111 391.834 136.962 cv
389.916 132.096 li
391.178 133.018 391.818 133.172 394.447 133.149 cv
407.924 133.226 li
408.531 133.219 408.921 133.181 409.248 133.052 cv
409.699 132.875 409.896 132.565 409.959 131.844 cv
411.621 136.058 li
399.946 147.096 li
398.19 148.744 397.62 149.578 397.392 151.059 cv
395.226 145.565 li
396.02 146.18 396.229 146.271 396.656 146.103 cv
396.907 146.004 397.087 145.875 397.958 145.068 cv
401.383 141.921 li
398.743 135.224 li
cp
f
384.56 116.781 mo
385.004 118.043 385.361 118.863 385.982 119.999 cv
387.172 122.174 388.312 123.303 390.067 124.095 cv
386.168 124.721 li
380.475 114.313 li
381.476 114.964 382.148 114.843 384.3 113.666 cv
394.33 108.179 li
396.458 107.015 396.933 106.479 396.915 105.321 cv
401.457 113.623 li
401.715 114.096 401.816 114.226 402.116 114.492 cv
399.207 116.083 li
399.547 114.852 399.411 114.097 398.531 112.488 cv
397.871 111.282 397.474 110.669 396.955 110.001 cv
392.294 112.55 li
394.12 115.885 li
394.327 116.264 394.441 116.416 394.75 116.646 cv
392.101 118.095 li
392.402 117.408 392.309 116.845 391.713 115.757 cv
390.498 113.533 li
384.56 116.781 li
cp
f
376.739 101.736 mo
374.71 103.068 374.289 103.604 374.392 104.793 cv
371.431 100.287 li
372.482 100.854 373.141 100.68 375.169 99.3472 cv
384.747 93.0547 li
386.775 91.7227 387.198 91.187 387.093 89.9971 cv
389.359 93.4448 li
389.492 93.6479 389.744 94.0308 390.107 94.5342 cv
390.396 94.9253 390.618 95.2632 390.795 95.5337 cv
391.817 97.0884 392.25 98.3853 392.181 99.6563 cv
392.096 101.099 391.325 102.477 390.175 103.232 cv
388.35 104.432 385.608 103.942 383.565 102.059 cv
381.126 108.758 380.417 111.804 380.669 114.349 cv
379.595 112.958 379.41 112.725 379.098 112.251 cv
378.21 110.899 378.187 109.882 379.051 107.023 cv
379.779 104.546 380.897 101.682 382.239 98.9609 cv
384.452 101.347 386.422 101.891 388.248 100.691 cv
389.802 99.6699 390.115 97.7876 388.99 96.0747 cv
388.649 95.5566 388.323 95.1582 387.713 94.5259 cv
376.739 101.736 li
cp
f
377.021 80.8403 mo
369.396 83.2319 li
373.028 87.7505 li
377.021 80.8403 li
cp
367.544 83.855 mo
363.148 85.313 li
362.572 85.4995 362.083 85.7534 361.81 85.9727 cv
361.39 86.3105 361.306 86.7236 361.464 87.5654 cv
358.188 83.4878 li
359.667 83.9941 360.324 83.9507 362.828 83.1494 cv
375.72 79.2222 li
376.297 79.0356 376.659 78.8828 376.932 78.6636 cv
377.31 78.3594 377.407 78.0059 377.253 77.2983 cv
380.09 80.8296 li
372.217 94.835 li
371.031 96.9302 370.734 97.895 370.956 99.377 cv
367.257 94.7744 li
368.197 95.126 368.424 95.1504 368.782 94.8633 cv
368.992 94.6943 369.126 94.5176 369.717 93.4888 cv
372.054 89.4663 li
367.544 83.855 li
cp
f
346.61 73.0137 mo
346.532 72.48 346.455 71.9468 346.319 71.4321 cv
345.971 69.6411 346.045 69.2598 346.994 67.3887 cv
352.32 56.9438 li
353.609 54.4233 353.797 53.7363 353.622 52.4214 cv
356.567 55.3486 li
356.433 55.4448 356.338 55.502 356.282 55.5596 cv
356.091 55.7505 355.864 56.1328 355.542 56.7246 cv
348.983 69.5942 li
359.471 64.0532 li
360.29 63.6123 361.166 63.0376 361.507 62.6934 cv
362.001 62.1963 362.114 61.5859 361.92 60.6714 cv
364.712 63.4463 li
364.503 63.5806 364.389 63.6572 364.275 63.772 cv
363.895 64.1543 363.572 64.6318 363.174 65.4531 cv
357.033 77.4824 li
367.198 72.1519 li
368.606 71.3853 368.968 71.1743 369.348 70.792 cv
369.975 70.1611 370.068 69.2266 369.626 68.3315 cv
372.667 71.354 li
354.622 80.9785 li
354.564 80.5781 354.467 80.1782 354.389 79.7588 cv
353.964 77.7012 354.02 77.415 355.025 75.3721 cv
359.877 65.9395 li
346.61 73.0137 li
cp
f
334.915 58.6694 mo
335.808 59.666 336.451 60.2871 337.459 61.0986 cv
339.391 62.6543 340.876 63.2607 342.8 63.3218 cv
339.438 65.3916 li
330.196 57.9521 li
331.371 58.1704 331.944 57.8018 333.483 55.8901 cv
340.652 46.9849 li
342.173 45.0942 342.408 44.417 341.948 43.3545 cv
349.32 49.2891 li
349.74 49.6274 349.882 49.708 350.261 49.8394 cv
348.181 52.4229 li
348.025 51.1548 347.611 50.5093 346.182 49.3599 cv
345.111 48.4976 344.51 48.083 343.774 47.6636 cv
340.444 51.8013 li
343.405 54.1855 li
343.741 54.4561 343.905 54.5532 344.28 54.647 cv
342.386 56.9995 li
342.401 56.25 342.099 55.7646 341.133 54.9873 cv
339.159 53.3975 li
334.915 58.6694 li
cp
f
322.992 50.0469 mo
323.927 50.9224 324.975 51.7773 325.974 52.4668 cv
327.66 53.6309 328.948 53.9961 331.229 53.9668 cv
327.841 56.2144 li
318.28 49.6104 li
319.467 49.7422 320.012 49.332 321.391 47.3354 cv
327.904 37.9072 li
329.283 35.9106 329.473 35.2554 328.929 34.1919 cv
333.366 37.2563 li
332.179 37.125 331.634 37.5347 330.255 39.5313 cv
322.992 50.0469 li
cp
f
306.059 39.7402 mo
306.729 40.3076 307.068 40.5313 307.794 40.9443 cv
309.951 42.1704 311.58 42.6323 313.185 42.4282 cv
315.445 42.1626 317.225 40.9419 318.452 38.7856 cv
319.478 36.9805 319.832 34.8862 319.42 33.1011 cv
318.988 31.2427 317.604 29.5864 315.518 28.4004 cv
314.721 27.9468 314.166 27.7241 313.097 27.3652 cv
306.059 39.7402 li
cp
301.327 39.7168 mo
302.463 39.4634 302.5 39.4531 302.844 39.1216 cv
303.275 38.7461 303.655 38.1865 304.294 37.0615 cv
309.893 27.2178 li
311.093 25.1084 311.225 24.439 310.591 23.4268 cv
313.076 24.8398 li
313.474 25.0664 314.037 25.3867 314.73 25.7495 cv
315.493 26.1528 316.219 26.5659 316.688 26.8325 cv
319.477 28.4189 321.077 30.1348 321.951 32.5244 cv
322.906 34.9902 322.677 37.6831 321.317 40.0737 cv
319.464 43.332 315.933 45.2319 312.317 44.8813 cv
310.634 44.731 308.803 43.9688 305.311 41.9829 cv
301.327 39.7168 li
cp
f
288.19 31.248 mo
288.914 31.7446 289.272 31.9326 290.037 32.2705 cv
292.306 33.2725 293.974 33.5674 295.549 33.2026 cv
297.772 32.7104 299.419 31.3159 300.421 29.0469 cv
301.26 27.1479 301.401 25.0288 300.811 23.2944 cv
300.194 21.4893 298.649 19.9814 296.455 19.0117 cv
295.616 18.6411 295.041 18.4756 293.942 18.2261 cv
288.19 31.248 li
cp
283.479 31.7017 mo
284.584 31.3354 284.62 31.3213 284.928 30.9565 cv
285.319 30.5396 285.641 29.9448 286.164 28.7612 cv
290.74 18.4028 li
291.72 16.1836 291.785 15.5044 291.051 14.5615 cv
293.666 15.7163 li
294.085 15.9014 294.677 16.1631 295.403 16.4546 cv
296.203 16.7783 296.967 17.1162 297.46 17.334 cv
300.396 18.6309 302.16 20.1763 303.27 22.4648 cv
304.469 24.8223 304.513 27.5239 303.402 30.0396 cv
301.888 33.4678 298.567 35.7144 294.934 35.7305 cv
293.245 35.751 291.346 35.1777 287.671 33.5542 cv
283.479 31.7017 li
cp
f
282.327 15.3784 mo
283.147 13.0947 283.162 12.4126 282.364 11.5244 cv
287.439 13.3457 li
286.258 13.5234 285.836 14.0596 285.017 16.3438 cv
281.147 27.1289 li
280.328 29.4126 280.312 30.0947 281.111 30.9824 cv
276.036 29.1616 li
277.216 28.9839 277.638 28.4473 278.458 26.1636 cv
282.327 15.3784 li
cp
f
271.052 10.0688 mo
271.907 8.92676 271.907 8.92676 272.091 8.22217 cv
276.865 9.46777 li
276.19 9.59814 275.786 10.0781 275.555 10.9648 cv
275.473 11.2783 275.411 11.624 275.375 11.9766 cv
273.899 24.5767 li
273.611 26.5352 273.71 27.1182 274.509 28.2188 cv
269.188 26.8306 li
270.118 26.6831 270.587 26.1646 270.88 25.043 cv
270.968 24.7036 271.01 24.436 271.151 23.4697 cv
272.766 11.2964 li
262.465 25.4673 li
261.447 24.0313 261.224 23.499 260.985 21.8486 cv
258.913 7.68262 li
254.124 19.418 li
253.875 20.0498 253.68 20.584 253.619 20.8188 cv
253.401 21.6538 253.553 22.1392 254.239 22.9312 cv
249.725 21.7539 li
250.837 21.124 251.447 20.2803 252.158 18.5151 cv
256.771 7.34717 li
257.22 6.26611 257.22 6.26611 257.295 5.979 cv
257.458 5.35303 257.319 4.92627 256.725 4.21387 cv
261.551 5.47314 li
261.469 5.78613 261.475 5.87109 261.56 6.50635 cv
263.61 20.332 li
271.052 10.0688 li
cp
f
228.561 16.9536 mo
229.403 17.2017 229.802 17.269 230.634 17.3535 cv
233.102 17.603 234.779 17.3662 236.164 16.5313 cv
238.124 15.3745 239.258 13.5381 239.508 11.0703 cv
239.717 9.00488 239.194 6.94629 238.096 5.47998 cv
236.949 3.95508 235.014 3 232.626 2.75879 cv
231.714 2.66602 231.116 2.68701 229.994 2.79004 cv
228.561 16.9536 li
cp
224.223 18.8452 mo
225.16 18.1543 225.189 18.1299 225.37 17.6875 cv
225.612 17.1704 225.733 16.5049 225.864 15.2173 cv
227.004 3.95117 li
227.249 1.53662 227.099 .871094 226.11 .202148 cv
228.954 .489746 li
229.41 .536133 230.053 .601074 230.834 .65332 cv
231.695 .713379 232.526 .797363 233.063 .851563 cv
236.255 1.1748 238.411 2.09766 240.177 3.9292 cv
242.047 5.79883 242.927 8.354 242.65 11.0898 cv
242.272 14.8188 239.811 17.9839 236.362 19.1255 cv
234.763 19.668 232.78 19.7114 228.783 19.3066 cv
224.223 18.8452 li
cp
f
218.078 3.67627 mo
218.151 1.25098 217.955 .597656 216.92 0 cv
222.311 .162109 li
221.243 .696289 221.008 1.33691 220.935 3.7627 cv
220.59 15.2168 li
220.517 17.6426 220.713 18.2959 221.747 18.8936 cv
216.356 18.731 li
217.425 18.1968 217.66 17.5566 217.733 15.1309 cv
218.078 3.67627 li
cp
f
203.588 15.2939 mo
203.669 17.7197 203.906 18.3589 204.976 18.8901 cv
199.586 19.0693 li
200.619 18.4688 200.813 17.8145 200.732 15.3892 cv
200.35 3.93604 li
200.27 1.51074 200.032 .871094 198.962 .339844 cv
203.085 .202637 li
203.328 .194824 203.786 .179199 204.405 .131836 cv
204.889 .0888672 205.293 .0751953 205.617 .0644531 cv
207.477 .00244141 208.809 .308594 209.858 1.0293 cv
211.045 1.85303 211.82 3.22998 211.865 4.60449 cv
211.938 6.78711 210.092 8.87207 207.419 9.63574 cv
211.868 15.207 214.099 17.3989 216.402 18.5093 cv
214.655 18.7021 214.36 18.7393 213.794 18.7578 cv
212.177 18.812 211.296 18.3018 209.307 16.0747 cv
207.57 14.1631 205.708 11.7163 204.085 9.15332 cv
207.274 8.50732 208.765 7.10889 208.693 4.92578 cv
208.631 3.06641 207.186 1.81982 205.138 1.8877 cv
204.518 1.90869 204.008 1.97949 203.151 2.16992 cv
203.588 15.2939 li
cp
f
192.608 4.1792 mo
191.168 3.14307 189.605 2.83008 187.359 3.12207 cv
182.761 3.72021 179.879 7.27637 180.446 11.6343 cv
181.02 16.0459 185.149 19.1519 189.694 18.5605 cv
191.031 18.3867 192.657 17.9302 193.498 17.4946 cv
193.011 13.7515 li
192.698 11.3457 192.4 10.7314 191.285 10.3057 cv
195.536 9.75293 li
195.474 10.1143 195.49 10.6558 195.591 11.4312 cv
196.37 17.4199 li
196.485 18.3022 196.532 18.4595 196.718 18.8428 cv
196.347 18.9185 196.267 18.9287 195.75 19.1318 cv
193.223 19.9775 191.907 20.3115 190.062 20.5518 cv
186.987 20.9517 184.498 20.623 182.345 19.5435 cv
179.522 18.1167 177.69 15.5273 177.287 12.4258 cv
176.869 9.21777 178.055 6.2085 180.595 4.00195 cv
182.423 2.37793 184.719 1.42676 187.66 1.04395 cv
189.21 .842285 190.267 .813477 192.188 .944336 cv
192.608 4.1792 li
cp
f
156.532 24.6543 mo
157.407 24.5815 157.804 24.5005 158.61 24.2788 cv
161.002 23.6216 162.481 22.7959 163.472 21.5166 cv
164.883 19.731 165.278 17.6089 164.621 15.2168 cv
164.071 13.2148 162.84 11.4839 161.287 10.5127 cv
159.667 9.50342 157.517 9.31152 155.203 9.94727 cv
154.319 10.1904 153.769 10.4253 152.76 10.9263 cv
156.532 24.6543 li
cp
153.169 27.9834 mo
153.793 27.001 153.813 26.9678 153.821 26.4897 cv
153.86 25.9199 153.733 25.2559 153.391 24.0078 cv
150.39 13.0879 li
149.747 10.748 149.367 10.1812 148.203 9.91357 cv
150.959 9.15625 li
151.401 9.03467 152.025 8.86328 152.772 8.62988 cv
153.597 8.37549 154.403 8.15381 154.923 8.01123 cv
158.017 7.16064 160.36 7.24365 162.668 8.31543 cv
165.087 9.38428 166.83 11.4502 167.558 14.1021 cv
168.551 17.7163 167.397 21.5566 164.593 23.8652 cv
163.296 24.9487 161.463 25.7041 157.589 26.7686 cv
153.169 27.9834 li
cp
f
135.696 31.042 mo
136.372 32.7754 136.938 33.3359 138.292 33.6182 cv
133.569 35.459 li
134.416 34.29 134.447 33.5542 133.762 31.7959 cv
129.384 20.5669 li
128.708 18.8335 128.143 18.2729 126.789 17.9902 cv
130.657 16.4824 li
130.855 16.6943 130.9 16.7349 131.667 17.2173 cv
146.366 25.8984 li
142.322 15.5234 li
141.636 13.7651 141.09 13.2549 139.701 12.957 cv
144.448 11.1064 li
143.602 12.2754 143.57 13.0112 144.256 14.7695 cv
150.18 29.9678 li
148.538 30.0581 147.099 29.6353 145.451 28.5991 cv
131.563 20.4409 li
135.696 31.042 li
cp
f
115.902 26.104 mo
116.734 34.0518 li
121.883 31.3896 li
115.902 26.104 li
cp
116.977 35.9902 mo
117.534 40.5894 li
117.603 41.1914 117.754 41.7197 117.915 42.0313 cv
118.163 42.5103 118.551 42.6738 119.407 42.6865 cv
114.761 45.0889 li
115.551 43.7393 115.638 43.0869 115.35 40.4741 cv
114.059 27.0576 li
113.99 26.4556 113.912 26.0708 113.751 25.7593 cv
113.528 25.3281 113.201 25.1641 112.477 25.1738 cv
116.501 23.0933 li
128.666 33.5889 li
130.484 35.168 131.371 35.6504 132.868 35.7266 cv
127.623 38.4385 li
128.154 37.5874 128.223 37.3691 128.012 36.9619 cv
127.889 36.7227 127.742 36.5557 126.851 35.772 cv
123.372 32.6836 li
116.977 35.9902 li
cp
f
98.1563 37.5713 mo
96.4834 37.2852 94.7695 37.6504 93.394 38.6006 cv
91.5532 39.873 90.9238 41.6187 91.8281 42.9272 cv
92.6255 44.0806 93.6895 44.1973 97.373 43.5527 cv
99.9536 43.1133 100.984 42.9912 102.092 43.0776 cv
103.357 43.1538 104.43 43.7568 105.119 44.7549 cv
105.917 45.9082 106.166 47.4077 105.869 48.9233 cv
105.469 50.9043 104.226 52.6152 102.163 54.041 cv
100.677 55.0679 99.3628 55.6807 97.5313 56.1602 cv
94.8135 53.7446 li
97.2466 53.8984 99.3394 53.3701 101.247 52.0518 cv
103.244 50.6724 104.031 48.5874 103.096 47.2344 cv
102.667 46.6133 101.927 46.2065 101.17 46.1069 cv
100.316 46.0093 99.5249 46.0972 97.0415 46.5352 cv
94.6333 46.9863 93.6099 47.0708 92.5156 46.9097 cv
91.3013 46.7651 90.1304 46.0669 89.4253 45.0464 cv
87.6782 42.5176 88.8438 39.3198 92.3931 36.8672 cv
93.6128 36.0239 94.8071 35.4282 96.3169 34.9097 cv
98.1563 37.5713 li
cp
f
81.7222 65.2153 mo
82.918 66.6406 83.6338 66.9902 85.0073 66.8232 cv
81.124 70.0815 li
81.5513 68.7026 81.3452 67.9956 80.1318 66.5498 cv
72.3848 57.3164 li
71.189 55.8916 70.4731 55.5415 69.0996 55.7085 cv
72.2808 53.0396 li
72.5366 53.1768 72.5918 53.2007 73.4727 53.4116 cv
90.1802 56.9219 li
83.0225 48.3911 li
81.8091 46.9453 81.1279 46.6367 79.7168 46.8003 cv
83.6206 43.5244 li
83.1938 44.9033 83.3999 45.6104 84.6128 47.0566 cv
95.0986 59.5532 li
93.5713 60.166 92.0728 60.2261 90.1797 59.7734 cv
74.4087 56.4985 li
81.7222 65.2153 li
cp
f
58.043 72.2437 mo
58.1235 73.9961 59.0669 75.9375 60.5508 77.3506 cv
62.1323 78.8569 64.3291 79.7949 66.5049 79.8564 cv
68.4321 79.9053 70.0557 79.2173 71.4873 77.7139 cv
74.4253 74.6289 74.2275 70.4194 71.0259 67.3696 cv
69.4834 65.9004 67.5356 65.0137 65.5869 64.8701 cv
63.4097 64.7324 61.6338 65.4238 60.0903 67.0444 cv
58.77 68.4307 57.9795 70.4331 58.043 72.2437 cv
cp
65.9185 62.0205 mo
68.395 61.9219 71.0708 62.9438 72.9253 64.7104 cv
76.9473 68.5415 76.9312 74.9307 72.8774 79.1865 cv
68.8789 83.3843 62.6138 83.7466 58.6699 79.9902 cv
54.5698 76.085 54.6641 69.77 58.8857 65.3384 cv
60.7451 63.3857 63.4033 62.1201 65.9185 62.0205 cv
cp
f
49.9077 81.8354 mo
48.0259 80.3037 47.3877 80.0625 46.2847 80.5205 cv
49.6885 76.3384 li
49.4639 77.5112 49.8296 78.0869 51.7119 79.6187 cv
60.5991 86.8516 li
62.4814 88.3833 63.1196 88.6245 64.2222 88.166 cv
60.8184 92.3486 li
61.043 91.1758 60.6772 90.6001 58.7954 89.0684 cv
49.9077 81.8354 li
cp
f
46.959 84.731 mo
46.0293 84.5903 45.4849 84.9287 44.5205 86.2607 cv
44.1567 86.7632 44.1567 86.7632 43.4165 87.9248 cv
43.1475 88.2959 li
53.8281 96.0259 li
55.3574 97.1328 56.0552 97.2715 57.4219 96.7632 cv
54.1182 101.328 li
54.2822 100.182 53.8564 99.5742 51.9126 98.1675 cv
41.4717 90.6113 li
41.0962 91.0381 40.458 91.8745 40.0625 92.4204 cv
39.0034 93.8838 38.7456 94.5625 38.7705 96.0449 cv
36.6353 93.2012 li
36.9121 93.0024 37.3257 92.5693 37.6416 92.1328 cv
43.9175 83.4614 li
44.2432 82.9648 44.4429 82.6436 44.522 82.5342 cv
44.6108 82.3652 44.6582 82.2998 44.7446 81.9966 cv
46.959 84.731 li
cp
f
32.7568 104.217 mo
37.6094 110.565 li
40.6157 105.609 li
32.7568 104.217 li
cp
38.8271 112.093 mo
41.6997 115.727 li
42.0723 116.205 42.4771 116.577 42.7769 116.759 cv
43.2378 117.039 43.6543 116.976 44.3916 116.54 cv
41.6792 121.012 li
41.6494 119.449 41.3843 118.847 39.7759 116.768 cv
31.6802 105.992 li
31.3081 105.514 31.041 105.226 30.7412 105.044 cv
30.3267 104.792 29.9609 104.823 29.3486 105.208 cv
31.6978 101.335 li
47.5503 103.95 li
49.9248 104.35 50.9331 104.299 52.25 103.584 cv
49.188 108.633 li
49.1973 107.629 49.1426 107.407 48.751 107.17 cv
48.5205 107.03 48.3081 106.964 47.1392 106.76 cv
42.5605 105.938 li
38.8271 112.093 li
cp
f
27.3291 115.902 mo
25.54 117.137 24.4258 118.337 23.6787 119.893 cv
21.9517 123.49 23.3389 127.267 27.0093 129.028 cv
31.0439 130.965 35.5693 129.639 37.3081 126.017 cv
38.1597 124.243 38.4438 122.405 38.3267 119.597 cv
40.6978 122.321 li
40.5918 123.975 40.2842 125.113 39.5376 126.668 cv
36.7251 132.526 31.3696 134.711 26.0464 132.155 cv
20.918 129.693 18.9941 124.044 21.5146 118.794 cv
22.1216 117.53 23.0869 116.079 24.3882 114.49 cv
27.3291 115.902 li
cp
f
18.1934 136.461 mo
15.9409 135.558 15.2598 135.518 14.3433 136.283 cv
16.3491 131.277 li
16.4834 132.464 17.0039 132.905 19.2568 133.808 cv
29.894 138.071 li
32.1465 138.973 32.8276 139.014 33.7441 138.249 cv
31.7383 143.254 li
31.604 142.067 31.0835 141.626 28.8311 140.724 cv
18.1934 136.461 li
cp
f
26.0513 152.41 mo
26.6318 151.268 27.1616 150.023 27.5459 148.873 cv
28.1958 146.929 28.188 145.59 27.5249 143.407 cv
30.6265 146.036 li
26.9424 157.057 li
26.7388 155.88 26.1934 155.471 23.8921 154.701 cv
13.0244 151.069 li
10.7231 150.3 10.041 150.299 9.17041 151.117 cv
10.8799 146.002 li
11.0835 147.179 11.6289 147.589 13.9302 148.358 cv
26.0513 152.41 li
cp
f
20.9038 166.959 mo
22.7085 167.412 23.5195 167.282 24.5073 166.334 cv
23.144 171.774 li
22.8506 170.616 22.2754 170.25 19.9214 169.66 cv
8.80615 166.874 li
6.45264 166.284 5.77246 166.336 4.96729 167.218 cv
5.62939 164.577 li
5.83936 163.74 5.83936 163.74 6.37695 161.484 cv
6.59326 160.621 li
6.97998 159.078 7.46436 158.032 8.18408 157.156 cv
9.44727 155.666 11.3179 154.967 13.0439 155.4 cv
15.8945 156.115 17.5342 159.444 16.6948 162.792 cv
16.4785 163.655 16.3018 164.027 15.8306 164.688 cv
16.0542 162.909 15.9238 161.875 15.3882 160.796 cv
14.7939 159.619 13.9443 158.906 12.7671 158.611 cv
10.6489 158.08 8.96094 159.269 8.33838 161.753 cv
8.15479 162.486 8.0957 162.943 8.08887 163.748 cv
20.9038 166.959 li
cp
f
17.9146 182.115 mo
19.7495 182.424 20.5474 182.23 21.458 181.208 cv
20.5259 186.739 li
20.1426 185.607 19.54 185.287 17.1475 184.884 cv
5.84766 182.979 li
3.45459 182.576 2.78076 182.681 2.04785 183.624 cv
2.50049 180.939 li
2.64355 180.088 2.64355 180.088 3.00244 177.797 cv
3.15039 176.919 li
3.41455 175.351 3.81543 174.27 4.46436 173.34 cv
5.60645 171.756 7.4165 170.913 9.17139 171.208 cv
12.0693 171.697 13.9653 174.887 13.3916 178.29 cv
13.2437 179.167 13.0967 179.553 12.6787 180.248 cv
12.7617 178.458 12.5508 177.438 11.9321 176.404 cv
11.2471 175.277 10.3442 174.632 9.14795 174.431 cv
6.99414 174.067 5.40479 175.386 4.979 177.912 cv
4.85352 178.656 4.83057 179.117 4.88672 179.919 cv
17.9146 182.115 li
cp
f
3.12598 197.135 mo
10.3257 200.601 li
10.7642 194.82 li
3.12598 197.135 li
cp
12.103 201.411 mo
16.3091 203.353 li
16.8574 203.61 17.3867 203.759 17.7363 203.785 cv
18.2739 203.826 18.6172 203.582 19.0771 202.859 cv
18.6821 208.075 li
17.9482 206.694 17.4395 206.277 15.064 205.151 cv
2.96924 199.205 li
2.4209 198.947 2.05273 198.811 1.70313 198.784 cv
1.21924 198.748 .907227 198.94 .535645 199.561 cv
.87793 195.044 li
16.1973 190.203 li
18.4961 189.485 19.3726 188.984 20.2231 187.75 cv
19.7764 193.638 li
19.3311 192.739 19.1816 192.565 18.7246 192.531 cv
18.4561 192.511 18.2368 192.548 17.1021 192.895 cv
12.6475 194.233 li
12.103 201.411 li
cp
f
2.47607 224.624 mo
1.11621 224.19 1.11621 224.19 .390625 224.248 cv
0 219.329 li
.344727 219.924 .930664 220.148 1.84473 220.076 cv
2.16699 220.05 2.51465 219.996 2.85938 219.914 cv
15.2466 217.173 li
17.1914 216.802 17.71 216.518 18.4868 215.401 cv
18.9219 220.884 li
18.4775 220.054 17.8335 219.781 16.6777 219.873 cv
16.3281 219.9 16.0615 219.948 15.1025 220.133 cv
3.07275 222.602 li
19.8398 227.682 li
18.8179 229.115 18.3882 229.501 16.9077 230.268 cv
4.20508 236.875 li
16.8628 237.547 li
17.5415 237.574 18.1099 237.583 18.3521 237.564 cv
19.2119 237.496 19.6211 237.193 20.144 236.286 cv
20.5127 240.936 li
19.5532 240.093 18.5557 239.793 16.6553 239.7 cv
4.59082 239.008 li
3.42236 238.938 3.42236 238.938 3.12695 238.961 cv
2.48145 239.013 2.12451 239.284 1.64648 240.08 cv
1.25195 235.107 li
1.57471 235.082 1.65332 235.048 2.2251 234.759 cv
14.6133 228.286 li
2.47607 224.624 li
cp
f
6.95752 249.125 mo
4.56445 249.529 3.9624 249.85 3.5791 250.98 cv
2.68164 245.663 li
3.41504 246.605 4.08887 246.711 6.48193 246.307 cv
17.7813 244.4 li
20.1743 243.996 20.7764 243.676 21.1602 242.545 cv
22.0571 247.862 li
21.3237 246.92 20.6499 246.814 18.2568 247.219 cv
6.95752 249.125 li
cp
f
21.1885 261.058 mo
23.5508 260.504 24.1318 260.146 24.4429 258.993 cv
25.6738 264.243 li
24.8828 263.349 24.2036 263.286 21.8408 263.841 cv
10.6846 266.457 li
8.32178 267.011 7.74121 267.368 7.43018 268.521 cv
6.48828 264.505 li
6.43262 264.269 6.32813 263.822 6.16016 263.225 cv
6.02344 262.759 5.93115 262.365 5.85693 262.05 cv
5.43213 260.238 5.47217 258.872 5.97314 257.702 cv
6.54834 256.377 7.74707 255.348 9.08594 255.034 cv
11.2124 254.535 13.6182 255.938 14.8901 258.408 cv
19.4824 252.956 21.1948 250.339 21.833 247.863 cv
22.3643 249.538 22.4585 249.821 22.5874 250.372 cv
22.957 251.947 22.6289 252.91 20.8345 255.298 cv
19.2998 257.374 17.2651 259.68 15.0693 261.772 cv
13.812 258.772 12.1484 257.584 10.0225 258.082 cv
8.21094 258.507 7.271 260.167 7.73877 262.162 cv
7.88037 262.767 8.0498 263.253 8.4043 264.056 cv
21.1885 261.058 li
cp
f
14.1777 278.759 mo
13.8198 280.903 13.9063 282.538 14.5039 284.157 cv
15.8862 287.9 19.564 289.531 23.3833 288.121 cv
27.582 286.571 29.7773 282.397 28.3857 278.629 cv
27.7041 276.782 26.5815 275.3 24.4829 273.431 cv
28.0894 273.622 li
29.2031 274.849 29.8071 275.862 30.4048 277.48 cv
32.6558 283.576 30.4985 288.943 24.9595 290.988 cv
19.6226 292.959 14.2266 290.41 12.209 284.947 cv
11.7231 283.632 11.353 281.929 11.1172 279.889 cv
14.1777 278.759 li
cp
f
22.5815 299.618 mo
20.3657 300.607 19.8623 301.068 19.7739 302.259 cv
17.5767 297.335 li
18.522 298.064 19.2007 297.997 21.417 297.009 cv
31.8813 292.339 li
34.0972 291.351 34.6001 290.89 34.689 289.698 cv
36.8862 294.623 li
35.9404 293.894 35.2617 293.96 33.0459 294.949 cv
22.5815 299.618 li
cp
f
37.2974 303.705 mo
39.4585 302.602 39.9365 302.115 39.9624 300.921 cv
42.4155 305.724 li
41.4331 305.044 40.7583 305.146 38.5977 306.251 cv
28.3936 311.463 li
26.2324 312.567 25.7544 313.054 25.7285 314.247 cv
21.4233 305.82 li
21.1904 305.364 21.0806 305.208 20.7886 304.934 cv
23.7183 303.437 li
23.3667 304.646 23.4819 305.404 24.3037 307.013 cv
24.9414 308.262 25.3081 308.861 25.8208 309.568 cv
30.5508 307.152 li
28.8213 303.767 li
28.625 303.383 28.5151 303.227 28.2119 302.988 cv
30.9009 301.614 li
30.5688 302.269 30.6582 302.858 31.2227 303.963 cv
32.3755 306.22 li
37.2974 303.705 li
cp
f
32.6924 319.079 mo
30.5928 320.295 30.1406 320.807 30.1777 322 cv
27.4751 317.334 li
28.4922 317.96 29.1602 317.822 31.2598 316.606 cv
41.1753 310.863 li
43.2749 309.646 43.7271 309.136 43.6899 307.942 cv
46.3926 312.608 li
45.3755 311.982 44.7075 312.12 42.6079 313.336 cv
32.6924 319.079 li
cp
f
35.1641 323.607 mo
35.3213 325.775 35.79 327.344 36.7524 328.776 cv
38.9775 332.089 42.936 332.808 46.3154 330.538 cv
50.0308 328.042 51.1812 323.469 48.9414 320.135 cv
47.8438 318.501 46.4038 317.324 43.9238 316.002 cv
47.4736 315.339 li
48.8452 316.269 49.6709 317.11 50.6333 318.543 cv
54.2563 323.937 53.4238 329.66 48.5225 332.953 cv
43.7998 336.125 37.9556 334.919 34.708 330.085 cv
33.9263 328.921 33.1655 327.354 32.4556 325.427 cv
35.1641 323.607 li
cp
f
49.8394 345.867 mo
57.4502 343.432 li
53.793 338.934 li
49.8394 345.867 li
cp
59.2979 342.798 mo
63.687 341.314 li
64.2622 341.124 64.7485 340.867 65.0205 340.646 cv
65.439 340.307 65.52 339.893 65.3574 339.052 cv
68.6572 343.11 li
67.1753 342.612 66.519 342.66 64.02 343.476 cv
51.1489 347.478 li
50.5737 347.667 50.2124 347.822 49.9404 348.043 cv
49.564 348.35 49.4702 348.704 49.6274 349.41 cv
46.7695 345.896 li
54.562 331.845 li
55.7368 329.742 56.0283 328.775 55.7974 327.295 cv
59.5229 331.877 li
58.5811 331.53 58.3535 331.507 57.9976 331.796 cv
57.7886 331.966 57.6553 332.144 57.0698 333.176 cv
54.7563 337.212 li
59.2979 342.798 li
cp
f
71.6377 350.794 mo
72.9824 349.509 73.3047 348.753 73.0303 347.412 cv
76.9048 351.467 li
75.769 351.098 75.1523 351.389 73.3975 353.065 cv
65.1128 360.982 li
63.3584 362.659 63.0396 363.262 63.3569 364.413 cv
61.4751 362.444 li
60.8794 361.82 60.8794 361.82 59.2578 360.163 cv
58.6431 359.52 li
57.5439 358.369 56.9175 357.401 56.5605 356.325 cv
55.9731 354.463 56.3799 352.508 57.6665 351.278 cv
59.7915 349.247 63.4824 349.637 65.8667 352.132 cv
66.4814 352.775 66.7026 353.123 67.0098 353.874 cv
65.624 352.736 64.6807 352.296 63.4819 352.173 cv
62.1689 352.048 61.1123 352.386 60.2354 353.225 cv
58.6563 354.733 58.7622 356.795 60.5317 358.647 cv
61.0532 359.193 61.4087 359.487 62.0854 359.922 cv
71.6377 350.794 li
cp
f
161.031 376.955 mo
161.031 383.688 162.208 386.422 166.424 389.057 cv
146.029 389.057 li
149.853 387.007 150.637 384.665 150.637 375.881 cv
150.637 334.403 li
150.637 325.62 149.853 323.277 146.029 321.228 cv
155.932 321.228 li
159.07 321.228 159.07 321.228 167.502 321.13 cv
170.738 321.13 li
176.523 321.13 180.642 321.911 184.368 323.668 cv
190.741 326.791 194.859 332.744 194.859 339.186 cv
194.859 349.823 184.564 358.51 172.013 358.51 cv
168.777 358.51 167.307 358.217 164.561 357.143 cv
171.032 356.362 174.563 354.996 177.896 352.166 cv
181.524 349.043 183.289 345.432 183.289 341.04 cv
183.289 333.135 177.602 328.255 168.287 328.255 cv
165.542 328.255 163.875 328.45 161.031 329.133 cv
161.031 376.955 li
cp
f
217.604 375.881 mo
217.604 384.665 218.388 387.007 222.212 389.057 cv
202.601 389.057 li
206.425 387.007 207.21 384.665 207.21 375.881 cv
207.21 334.403 li
207.21 325.62 206.425 323.277 202.601 321.228 cv
217.604 321.228 li
218.486 321.228 220.153 321.228 222.408 321.13 cv
224.173 321.033 225.644 321.033 226.82 321.033 cv
233.586 321.033 238.391 322.302 242.117 325.034 cv
246.333 328.157 248.98 333.232 248.98 338.21 cv
248.98 346.114 242.019 353.435 232.213 355.874 cv
247.706 376.564 255.55 384.763 263.786 389.057 cv
257.413 389.545 256.334 389.643 254.275 389.643 cv
248.392 389.643 245.254 387.69 238.292 379.395 cv
232.213 372.271 225.742 363.194 220.153 353.728 cv
231.821 351.775 237.41 346.896 237.41 338.99 cv
237.41 332.256 232.312 327.571 224.859 327.571 cv
222.604 327.571 220.741 327.767 217.604 328.353 cv
217.604 375.881 li
cp
f
295.845 329.914 mo
285.255 356.851 li
306.336 356.851 li
295.845 329.914 li
cp
282.804 363.486 mo
276.92 379.199 li
276.136 381.249 275.744 383.201 275.744 384.47 cv
275.744 386.422 276.725 387.593 279.47 389.057 cv
260.448 389.057 li
265.252 386.031 266.625 384.079 270.057 375.198 cv
288.295 329.914 li
289.08 327.864 289.471 326.498 289.471 325.229 cv
289.471 323.473 288.687 322.399 286.333 321.228 cv
302.807 321.228 li
324.575 375.198 li
327.81 383.299 329.87 386.324 334.576 389.057 cv
313.102 389.057 li
316.24 387.202 316.829 386.617 316.829 384.958 cv
316.829 383.981 316.632 383.201 315.063 379.199 cv
308.984 363.486 li
282.804 363.486 li
cp
f
392.815 333.135 mo
388.108 328.743 382.617 326.889 374.38 326.889 cv
357.515 326.889 345.455 338.308 345.455 354.215 cv
345.455 370.318 358.888 383.396 375.557 383.396 cv
380.459 383.396 386.54 382.518 389.775 381.347 cv
389.775 367.684 li
389.775 358.899 388.991 356.558 385.167 354.508 cv
400.756 354.508 li
400.365 355.776 400.168 357.729 400.168 360.559 cv
400.168 382.42 li
400.168 385.641 400.266 386.227 400.756 387.69 cv
399.384 387.788 399.09 387.788 397.128 388.276 cv
387.618 390.13 382.715 390.716 375.95 390.716 cv
364.673 390.716 355.848 388.373 348.592 383.494 cv
339.082 377.053 333.689 366.902 333.689 355.581 cv
333.689 343.87 339.375 333.622 349.573 326.889 cv
356.927 321.911 365.654 319.569 376.44 319.569 cv
382.126 319.569 385.951 319.959 392.815 321.325 cv
392.815 333.135 li
cp
f
494.974 329.914 mo
484.384 356.851 li
505.466 356.851 li
494.974 329.914 li
cp
481.933 363.486 mo
476.05 379.199 li
475.265 381.249 474.874 383.201 474.874 384.47 cv
474.874 386.422 475.854 387.593 478.599 389.057 cv
459.577 389.057 li
464.381 386.031 465.754 384.079 469.186 375.198 cv
487.424 329.914 li
488.208 327.864 488.601 326.498 488.601 325.229 cv
488.601 323.473 487.816 322.399 485.463 321.228 cv
501.936 321.228 li
523.704 375.198 li
526.94 383.299 528.999 386.324 533.706 389.057 cv
512.232 389.057 li
515.37 387.202 515.958 386.617 515.958 384.958 cv
515.958 383.981 515.761 383.201 514.193 379.199 cv
508.114 363.486 li
481.933 363.486 li
cp
f
455.703 357.065 mo
454.569 359.148 446.425 390.388 445.086 393.82 cv
442.279 401.002 li
440.932 404.437 439.511 407.904 439.106 408.711 cv
438.707 409.512 438.218 410.037 438.032 409.881 cv
437.846 409.722 437.603 409.28 437.487 408.896 cv
437.365 408.514 437.819 405.234 438.49 401.61 cv
439.945 393.79 li
440.62 390.162 441.484 384.943 441.862 382.184 cv
442.246 379.433 442.533 375.217 442.491 372.813 cv
442.461 370.42 442.487 366.77 442.547 364.712 cv
442.61 362.649 442.574 360.563 442.468 360.078 cv
442.365 359.59 442.155 359.07 441.999 358.929 cv
441.842 358.783 441.488 359.162 441.216 359.765 cv
440.932 360.376 439.835 363.757 438.77 367.288 cv
435.674 377.508 li
434.609 381.04 433.147 386.387 432.439 389.388 cv
431.719 392.397 431.002 395.788 430.851 396.927 cv
430.691 398.063 430.485 399.502 430.388 400.111 cv
430.284 400.73 429.889 401.713 429.511 402.311 cv
429.127 402.908 428.554 403.573 428.229 403.79 cv
427.909 404.01 427.439 404.126 427.184 404.042 cv
426.924 403.963 426.607 403.605 426.472 403.252 cv
426.345 402.897 426.253 401.865 426.264 400.954 cv
426.279 400.049 426.48 396.33 426.719 392.703 cv
426.95 389.072 427.275 384.181 427.431 381.837 cv
427.591 379.488 427.68 375.96 427.625 373.992 cv
427.577 372.033 427.439 369.45 427.327 368.262 cv
427.208 367.072 427.047 365.738 426.954 365.293 cv
426.869 364.846 426.622 364.65 426.428 364.852 cv
426.216 365.048 425.232 368.112 424.225 371.665 cv
423.333 374.804 li
422.33 378.355 421.163 382.895 420.76 384.91 cv
420.355 386.92 419.772 389.951 419.47 391.644 cv
419.171 393.339 418.665 395.626 418.344 396.723 cv
418.024 397.825 417.337 399.52 416.823 400.49 cv
416.301 401.461 415.519 401.914 415.093 401.5 cv
414.664 401.078 414.415 398.866 414.542 396.58 cv
414.671 394.302 415.287 389.962 415.891 386.945 cv
416.513 383.922 417.278 379.835 417.595 377.859 cv
417.919 375.883 418.292 372.638 418.441 370.651 cv
418.58 368.66 418.814 366.044 418.967 364.83 cv
419.12 363.618 419.153 360.994 419.039 358.999 cv
418.926 357.008 418.725 353.797 418.58 351.863 cv
418.445 349.924 418.028 346.923 417.654 345.169 cv
417.278 343.425 416.931 340.927 416.869 339.613 cv
416.808 338.308 416.763 335.913 416.767 334.308 cv
416.775 332.695 416.465 330.095 416.084 328.533 cv
415.702 326.963 415.03 325.093 414.589 324.379 cv
414.146 323.659 413.158 322.224 412.386 321.174 cv
411.629 320.124 410.324 318.719 409.5 318.048 cv
408.668 317.377 407.058 315.653 405.268 314.916 cv
403.486 314.166 398.854 312.692 395.622 310.958 cv
392.389 309.216 389.007 307.308 388.109 306.713 cv
387.207 306.112 386.184 305.139 385.837 304.535 cv
385.487 303.939 385.584 303.081 386.051 302.636 cv
386.505 302.189 389.656 302.998 393.057 304.449 cv
405.141 309.585 li
408.528 311.031 411.782 312.521 412.382 312.91 cv
412.975 313.29 413.985 313.84 414.624 314.133 cv
415.25 314.42 416.283 314.864 416.906 315.112 cv
417.52 315.358 418.229 315.386 418.478 315.165 cv
418.725 314.949 419.079 313.913 419.269 312.865 cv
419.452 311.812 419.985 310.405 420.436 309.734 cv
420.887 309.063 421.705 308.329 422.249 308.1 cv
422.796 307.873 424 307.798 424.929 307.932 cv
425.858 308.061 426.983 308.487 427.423 308.876 cv
427.872 309.26 428.528 310.251 428.882 311.071 cv
429.236 311.892 429.699 313.188 429.904 313.939 cv
430.105 314.693 430.083 316.118 429.846 317.111 cv
429.612 318.104 429.527 319.414 429.646 320.023 cv
429.769 320.628 430.523 321.87 431.316 322.786 cv
432.099 323.693 433.934 325.337 435.374 326.44 cv
436.801 327.539 437.57 329.002 438.118 327.563 cv
438.658 326.128 439.877 322.067 439.75 320.656 cv
439.627 319.241 440.28 315.565 438.762 314.804 cv
437.297 314.065 435.429 311.327 434.032 309.432 cv
432.625 307.548 430.492 304.861 429.295 303.471 cv
428.098 302.078 426.293 299.96 425.265 298.756 cv
424.24 297.556 422.204 294.999 420.739 293.085 cv
419.277 291.168 417.446 288.802 416.686 287.829 cv
415.917 286.851 415.027 285.603 414.695 285.045 cv
414.363 284.494 414.321 283.722 414.612 283.344 cv
414.892 282.959 415.519 282.379 415.995 282.048 cv
416.48 281.723 417.789 282.135 418.904 282.979 cv
420.022 283.822 422.398 285.896 424.187 287.6 cv
425.973 289.296 429.459 292.922 431.932 295.651 cv
438.864 303.288 li
441.338 306.018 443.602 308.536 443.875 308.887 cv
444.154 309.234 444.553 309.023 444.754 308.424 cv
444.956 307.819 445.086 306.947 445.045 306.487 cv
444.993 306.025 445.507 304.852 446.178 303.873 cv
446.842 302.895 447.738 301.988 448.166 301.854 cv
448.591 301.724 449.36 301.686 449.875 301.766 cv
450.381 301.857 451.1 302.126 451.465 302.367 cv
451.82 302.607 452.685 303.297 453.361 303.901 cv
454.036 304.501 454.885 305.522 455.25 306.172 cv
455.612 306.813 455.911 307.815 455.896 308.396 cv
455.888 308.976 455.888 310.026 455.896 310.729 cv
455.903 311.427 455.881 312.257 455.85 312.574 cv
455.813 312.885 456.097 313.662 456.563 313.768 cv
457.034 313.873 458.868 313.533 460.277 312.939 cv
461.691 312.339 464.083 311.164 466.089 310.138 cv
468.099 309.116 471.462 307.22 472.954 306.219 cv
474.434 305.215 477.25 303.241 478.883 302.007 cv
480.509 300.77 481.821 299.638 482.541 299.825 cv
483.271 300.007 483.574 301.104 483.223 302.266 cv
482.884 303.428 481.851 305.143 480.945 306.084 cv
480.039 307.025 478.417 308.405 477.338 309.158 cv
476.258 309.912 474.532 311.192 473.501 311.998 cv
472.469 312.809 470.434 314.368 468.975 315.462 cv
467.53 316.554 465.065 318.21 463.495 319.144 cv
460.433 320.967 461.116 319.54 459.587 322.882 cv
455.703 357.065 li
cp
f
86.8589 154.411 mo
86.8589 154.411 86.5962 154.954 86.2754 155.618 cv
85.9546 156.282 85.3628 157.152 84.9604 157.553 cv
84.5576 157.953 84.4756 158.559 84.7778 158.899 cv
85.0801 159.24 85.5947 159.758 85.9214 160.052 cv
86.2485 160.345 86.8267 160.651 87.2065 160.731 cv
87.5859 160.811 87.9351 160.478 87.9819 159.99 cv
88.0283 159.502 88.4761 158.687 88.9761 158.178 cv
89.4761 157.669 89.9463 156.718 90.0205 156.064 cv
90.0947 155.411 90.376 154.614 90.6455 154.294 cv
90.915 153.975 90.9722 153.602 90.7729 153.466 cv
90.5732 153.331 89.9517 153.232 89.3911 153.248 cv
88.8311 153.263 88.0552 153.502 87.6675 153.779 cv
87.2798 154.057 86.9624 154.283 86.9624 154.283 cv
f
164.548 361.513 mo
164.548 362.26 li
164.709 362.33 164.855 362.402 164.949 362.474 cv
165.24 362.675 165.967 362.759 166.553 362.659 cv
166.81 362.61 167.079 362.433 167.321 362.184 cv
166.392 362.034 165.504 361.82 164.548 361.513 cv
cp
f
168.568 333.264 mo
169.084 334.206 169.929 335.844 170.438 336.888 cv
170.95 337.939 171.37 339.654 171.37 340.705 cv
171.37 341.766 171.37 342.616 171.37 342.616 cv
171.11 344.137 li
171.11 344.137 171.11 344.393 171.11 344.71 cv
171.11 345.025 171.411 345.541 171.78 345.854 cv
172.146 346.172 172.505 347.38 172.58 348.536 cv
172.637 349.343 172.804 350.047 173.001 350.395 cv
173.292 350.215 173.579 350.03 173.857 349.828 cv
174.229 349.13 174.696 348.045 175.128 346.817 cv
175.128 346.817 175.128 346.817 176.467 344.137 cv
177.802 341.464 177.802 341.464 177.802 341.464 cv
176.924 341.049 175.837 340.277 175.4 339.742 cv
174.947 339.225 174.23 338.28 173.79 337.645 cv
173.338 337.025 171.901 335.139 170.578 333.454 cv
170.234 333.022 169.9 332.63 169.59 332.286 cv
169.108 332.246 168.612 332.221 168.095 332.214 cv
168.214 332.548 168.375 332.912 168.568 333.264 cv
cp
f
170.04 349.297 mo
169.593 348.983 169.051 348.459 168.833 348.148 cv
168.61 347.839 168.254 347.839 168.034 348.148 cv
167.807 348.459 167.512 349.405 167.363 350.249 cv
167.213 351.083 166.974 351.952 166.823 352.16 cv
166.752 352.263 166.646 352.455 166.532 352.682 cv
168.492 352.32 170.069 351.854 171.442 351.226 cv
171.417 351.153 171.402 351.076 171.37 351.008 cv
171.081 350.389 170.482 349.606 170.04 349.297 cv
cp
f
382.295 215.294 mo
381.344 213.72 379.717 211.402 378.686 210.145 cv
377.649 208.883 376.381 207.505 375.87 207.086 cv
375.368 206.668 373.981 205.807 372.797 205.177 cv
371.612 204.544 370.411 203.001 370.11 201.738 cv
369.823 200.488 369.278 199.453 368.909 199.453 cv
368.54 199.453 367.944 199.701 367.563 200.025 cv
367.198 200.337 366.418 200.514 365.829 200.406 cv
365.247 200.306 364.159 200.045 363.42 199.834 cv
362.682 199.622 361.842 199.622 361.545 199.834 cv
361.25 200.045 360.829 199.699 360.606 199.064 cv
360.381 198.439 359.602 197.843 358.868 197.731 cv
358.129 197.625 357.231 197.893 356.858 198.305 cv
356.489 198.729 355.946 198.557 355.657 197.925 cv
355.356 197.292 354.696 196.175 354.176 195.446 cv
353.667 194.711 353.122 194.533 352.965 195.063 cv
352.825 195.588 351.739 196.703 350.563 197.548 cv
349.389 198.38 348.36 199.582 348.286 200.214 cv
348.219 200.842 347.913 201.964 347.624 202.695 cv
347.321 203.433 346.723 203.947 346.276 203.845 cv
345.84 203.734 344.629 203.648 343.6 203.648 cv
342.555 203.648 341.178 203.648 340.518 203.648 cv
339.852 203.648 338.711 202.881 337.977 201.931 cv
337.237 200.988 336.215 199.184 335.698 197.925 cv
335.18 196.663 334.694 194.605 334.624 193.343 cv
334.553 192.082 334.495 190.201 334.495 189.146 cv
334.495 188.094 333.893 186.722 333.155 186.094 cv
332.417 185.459 331.038 184.602 330.075 184.182 cv
329.118 183.761 327.852 183.248 327.26 183.037 cv
326.678 182.826 326.127 181.191 326.059 179.406 cv
325.981 177.629 326.047 174.27 326.186 171.967 cv
326.338 169.654 325.313 167.769 323.915 167.769 cv
322.518 167.769 321.01 169.312 320.575 171.201 cv
320.124 173.087 319.333 174.806 318.823 175.02 cv
318.303 175.225 317.167 175.491 316.276 175.584 cv
315.395 175.697 314.188 175.094 313.606 174.255 cv
313.006 173.421 311.563 170.664 310.391 168.146 cv
309.209 165.626 308.122 162.62 307.971 161.469 cv
307.831 160.311 307.711 156.964 307.711 154.023 cv
307.711 151.087 308.004 148.07 308.374 147.342 cv
308.747 146.604 309.53 145.921 310.12 145.807 cv
310.708 145.712 311.67 145.712 312.256 145.807 cv
312.848 145.921 313.819 146.432 314.403 146.961 cv
314.997 147.484 316.073 147.914 316.813 147.914 cv
317.553 147.914 318.094 146.97 318.028 145.807 cv
317.954 144.657 319.213 144.138 320.838 144.667 cv
322.461 145.19 324.139 145.367 324.583 145.048 cv
325.018 144.732 326.952 147.397 328.868 150.971 cv
330.784 154.536 332.772 157.202 333.286 156.883 cv
333.803 156.569 334.167 155.71 334.098 154.974 cv
334.012 154.24 333.774 152.953 333.553 152.107 cv
333.331 151.273 332.856 149.986 332.481 149.247 cv
332.116 148.508 331.038 146.627 330.075 145.048 cv
329.118 143.472 328.454 141.33 328.602 140.278 cv
328.741 139.229 329.528 137.168 330.34 135.699 cv
331.145 134.226 332.174 132.159 332.618 131.114 cv
333.051 130.062 333.006 128.011 332.481 126.538 cv
331.965 125.061 331.174 122.742 330.743 121.38 cv
330.299 120.013 330.418 117.958 331.014 116.801 cv
331.592 115.642 332.618 114.353 333.286 113.937 cv
333.958 113.518 334.247 112.389 333.958 111.457 cv
333.667 110.51 333.178 109.306 332.883 108.781 cv
332.592 108.256 332.838 107.138 333.415 106.301 cv
334.012 105.459 335.094 104.254 335.833 103.631 cv
336.571 102.994 336.928 103.51 336.637 104.774 cv
336.342 106.037 336.518 107.062 337.032 107.062 cv
337.555 107.062 338.278 106.806 338.651 106.493 cv
339.008 106.176 339.852 105.576 340.518 105.149 cv
341.178 104.739 341.661 103.618 341.588 102.676 cv
341.518 101.728 340.739 100.693 339.852 100.386 cv
338.961 100.069 337.756 99.981 337.17 100.195 cv
336.581 100.406 335.25 99.5381 334.217 98.2822 cv
333.192 97.022 332.417 95.5669 332.481 95.0361 cv
332.555 94.5117 332.137 94.0864 331.543 94.0864 cv
330.956 94.0864 329.862 93.8213 329.135 93.5166 cv
328.397 93.189 327.856 92.5103 327.926 91.9849 cv
327.999 91.4619 328.602 90.6826 329.266 90.2729 cv
329.938 89.8535 330.836 89.5898 331.276 89.6914 cv
331.715 89.7979 332.745 90.0542 333.553 90.2729 cv
334.364 90.4741 335.27 90.3901 335.567 90.0801 cv
335.862 89.7573 336.215 89.248 336.366 88.9307 cv
336.514 88.6187 337.063 88.3613 337.569 88.3613 cv
338.081 88.3613 338.573 89.2183 338.651 90.2729 cv
338.711 91.3115 339.02 92.6943 339.323 93.3203 cv
339.61 93.9531 340.086 95.2402 340.389 96.1831 cv
340.68 97.1328 341.34 97.8989 341.858 97.8989 cv
342.368 97.8989 343.215 97.8086 343.725 97.707 cv
344.25 97.6094 345.147 96.4897 345.735 95.2295 cv
345.735 95.2295 345.735 95.2295 343.327 93.3203 cv
340.918 91.4106 340.247 90.4668 339.45 89.3101 cv
338.639 88.1572 337.133 86.4336 336.096 85.4912 cv
335.071 84.5459 331.7 81.9702 328.602 79.7676 cv
325.5 77.5635 322.192 75.0718 321.235 74.2305 cv
320.284 73.3872 318.532 71.6738 317.352 70.417 cv
316.174 69.1582 314.366 67.4326 313.331 66.5962 cv
312.297 65.7627 311.51 65.9277 311.596 66.9795 cv
311.659 68.0298 311.19 68.8833 310.522 68.8833 cv
309.854 68.8833 309.071 68.1973 308.774 67.3599 cv
308.483 66.5186 307.516 65.4873 306.641 65.0688 cv
305.752 64.6509 303.454 64.1348 301.549 63.9214 cv
299.637 63.7168 297.469 63.0313 296.727 62.3955 cv
295.987 61.7651 296.284 63.1406 297.393 65.4478 cv
298.5 67.7549 300.127 69.3105 301.008 68.8833 cv
301.008 68.8833 301.008 68.8833 302.084 71.5596 cv
303.155 74.2354 303.155 74.2354 303.155 74.2354 cv
303.299 74.8608 303.907 76.4014 304.493 77.6665 cv
305.081 78.9287 306.055 80.9019 306.641 82.0605 cv
307.225 83.2139 308.004 84.5869 308.374 85.1089 cv
308.747 85.6343 308.45 85.8965 307.711 85.6851 cv
306.973 85.4702 305.463 84.271 304.364 83.0103 cv
303.256 81.7534 301.504 80.2896 300.473 79.7676 cv
299.442 79.2476 296.852 77.6963 294.713 76.3286 cv
292.581 74.9668 289.749 73.4204 288.426 72.8916 cv
287.096 72.3716 285.165 71.4268 284.139 70.792 cv
283.102 70.1685 281.241 67.9287 279.989 65.8345 cv
278.731 63.7329 278.01 60.9795 278.379 59.7207 cv
278.747 58.4639 279.17 57.2598 279.319 57.0513 cv
279.469 56.8384 280.129 56.9268 280.797 57.2412 cv
281.454 57.5571 282.36 58.1621 282.795 58.5781 cv
283.237 59.0049 284.206 59.3477 284.944 59.3477 cv
285.676 59.3477 286.526 58.7407 286.815 58.0024 cv
287.116 57.2734 287.274 54.5405 286.247 53.917 cv
285.217 53.2832 281.926 49.1577 278.981 49.2607 cv
276.033 49.3672 256.23 42.4912 237.669 42.2778 cv
219.106 42.0693 205.243 49.9253 203.63 49.9253 cv
202.002 49.9253 201.186 54.6875 203.244 55.5264 cv
205.308 56.3628 206.758 57.478 206.464 58.0024 cv
206.167 58.5327 205.383 59.3003 204.725 59.7207 cv
204.064 60.1484 203.214 60.9175 202.851 61.4395 cv
202.475 61.9673 202.475 62.9131 202.851 63.54 cv
203.214 64.1743 203.818 64.6909 204.186 64.6909 cv
204.559 64.6909 205.04 65.6304 205.259 66.7935 cv
205.478 67.9438 206.568 69.0527 207.668 69.271 cv
208.778 69.478 209.923 69.9951 210.216 70.417 cv
210.507 70.832 209.728 72.2041 208.479 73.4707 cv
207.215 74.7275 204.449 76.874 202.31 78.2417 cv
200.172 79.6055 198.013 81.2314 197.493 81.8604 cv
196.975 82.4961 197.644 82.6636 198.962 82.2515 cv
200.29 81.8267 202.161 81.1387 203.119 80.7217 cv
204.076 80.3022 205.519 79.4434 206.328 78.8096 cv
207.137 78.1885 208.52 77.4092 209.416 77.0986 cv
210.293 76.7808 211.318 75.8398 211.692 74.9912 cv
212.055 74.1499 212.725 73.5493 213.165 73.6592 cv
213.597 73.7715 214.333 73.8486 214.77 73.8486 cv
215.213 73.8486 215.933 73.5845 216.382 73.2739 cv
216.816 72.9619 217.061 72.0146 216.91 71.1787 cv
216.761 70.3418 216.521 69.3105 216.382 68.8833 cv
216.223 68.4688 216.821 67.9478 217.711 67.7378 cv
218.599 67.5293 221.787 67.6196 224.814 67.9287 cv
227.834 68.25 230.972 69.0254 231.773 69.6455 cv
232.585 70.2817 233.672 71.4814 234.188 72.3223 cv
234.697 73.1592 235.609 74.1963 236.198 74.6157 cv
236.784 75.0371 237.926 75.8955 238.745 76.522 cv
239.552 77.1543 240.694 77.917 241.289 78.2417 cv
241.875 78.5542 242.835 79.499 243.428 80.3418 cv
244.017 81.1782 245.29 82.813 246.244 83.9678 cv
247.197 85.1191 248.28 86.5825 248.653 87.2109 cv
249.016 87.8389 249.505 88.7026 249.725 89.1206 cv
249.947 89.5396 250.549 90.5732 251.063 91.4106 cv
251.577 92.2529 252.539 93.3677 253.199 93.8926 cv
253.877 94.4165 254.768 95.877 255.21 97.1436 cv
255.657 98.3999 256.26 100.803 256.551 102.481 cv
256.846 104.161 257.506 108.285 258.029 111.645 cv
258.543 115.003 259.323 118.268 259.765 118.896 cv
260.214 119.529 260.869 120.652 261.241 121.38 cv
261.614 122.114 262.152 122.804 262.452 122.91 cv
262.74 123.009 263.162 123.618 263.382 124.24 cv
263.6 124.874 264.024 125.904 264.308 126.538 cv
264.616 127.166 265.688 128.972 266.72 130.546 cv
267.758 132.119 269.206 132.381 269.946 131.114 cv
269.946 131.114 269.946 131.114 271.275 133.406 cv
272.625 135.699 273.104 136.207 273.695 136.84 cv
274.284 137.474 274.644 138.583 274.491 139.324 cv
274.348 140.052 274.463 140.74 274.769 140.854 cv
275.06 140.951 275.366 141.555 275.436 142.185 cv
275.505 142.818 275.931 143.591 276.37 143.898 cv
276.813 144.22 277.243 145.166 277.303 146.005 cv
277.381 146.846 277.678 147.965 277.981 148.485 cv
278.278 149.007 278.7 149.434 278.922 149.434 cv
279.137 149.434 279.561 150.047 279.848 150.775 cv
280.147 151.511 280.76 152.629 281.194 153.261 cv
281.625 153.888 282.227 154.656 282.53 154.974 cv
282.831 155.292 283.305 156.149 283.606 156.883 cv
283.903 157.618 284.254 158.653 284.407 159.176 cv
284.553 159.698 284.917 160.218 285.208 160.318 cv
285.506 160.43 285.864 161.026 286.008 161.661 cv
286.165 162.281 286.526 162.975 286.815 163.183 cv
287.116 163.396 287.532 163.566 287.766 163.566 cv
287.975 163.566 288.274 163.737 288.426 163.942 cv
288.575 164.155 288.875 163.896 289.096 163.379 cv
289.313 162.847 289.375 162.078 289.229 161.661 cv
289.083 161.239 288.659 160.297 288.288 159.555 cv
287.918 158.819 287.383 157.967 287.09 157.648 cv
286.795 157.333 286.188 155.96 285.745 154.592 cv
285.301 153.229 284.637 151.682 284.272 151.158 cv
283.903 150.631 283.426 150.032 283.198 149.826 cv
282.981 149.609 282.688 149.095 282.53 148.679 cv
282.383 148.252 282.077 147.569 281.858 147.148 cv
281.639 146.732 281.159 146.124 280.797 145.807 cv
280.424 145.496 279.879 144.727 279.59 144.09 cv
279.292 143.468 278.872 142.611 278.651 142.185 cv
278.43 141.761 278.485 141.34 278.79 141.233 cv
279.075 141.128 279.741 141.299 280.258 141.615 cv
280.772 141.929 281.252 142.791 281.329 143.522 cv
281.395 144.255 282.547 146.408 283.872 148.293 cv
285.194 150.185 288.336 154.908 290.838 158.788 cv
293.342 162.682 295.504 167.406 295.659 169.292 cv
295.809 171.183 297.135 174.188 298.608 175.973 cv
300.079 177.758 302.854 180.25 304.76 181.511 cv
306.67 182.766 309.147 184.139 310.256 184.56 cv
311.362 184.981 313.11 185.416 314.139 185.515 cv
315.178 185.624 316.729 186.221 317.618 186.854 cv
318.504 187.481 320.008 188.778 320.963 189.714 cv
321.92 190.66 323.729 191.86 324.979 192.389 cv
326.239 192.91 327.868 194.028 328.602 194.871 cv
329.336 195.712 330.534 197.425 331.276 198.687 cv
332.014 199.939 332.805 201.926 333.014 203.082 cv
333.237 204.238 334.024 205.689 334.758 206.327 cv
335.497 206.948 336.342 207.641 336.637 207.854 cv
336.928 208.062 337.715 208.583 338.375 208.999 cv
339.042 209.412 340.18 209.675 340.918 209.567 cv
341.661 209.461 342.495 208.862 342.797 208.234 cv
343.088 207.603 343.629 207.772 343.999 208.613 cv
344.368 209.457 345.028 211.081 345.467 212.236 cv
345.915 213.393 346.34 215.976 346.417 217.965 cv
346.481 219.964 346.127 221.941 345.61 222.362 cv
345.098 222.779 344.43 223.987 344.135 225.026 cv
343.838 226.076 343.36 227.626 343.061 228.459 cv
342.768 229.307 342.292 232.488 341.989 235.524 cv
341.694 238.575 341.518 243.303 341.588 246.034 cv
341.661 248.756 341.838 251.767 341.989 252.702 cv
342.137 253.657 343.108 257.773 344.135 261.871 cv
345.168 265.969 346.43 271.118 346.94 273.325 cv
347.469 275.527 348.249 278.096 348.684 279.046 cv
349.129 280.002 349.86 280.932 350.295 281.153 cv
350.731 281.356 351.581 282.388 352.167 283.441 cv
352.752 284.487 352.825 288.188 352.301 291.648 cv
351.788 295.116 349.446 303.191 347.077 309.591 cv
344.77 315.871 340.836 325.408 338.263 331.023 cv
340.687 328.227 343.561 325.696 346.885 323.502 cv
354.284 318.494 363.058 315.887 373.64 315.559 cv
374.454 314.403 375.123 313.192 375.471 311.947 cv
376.803 307.226 382.336 298.099 383.733 292.323 cv
385.129 286.548 389.827 275.104 391.004 268.385 cv
392.184 261.656 395.483 251.652 395.635 245.771 cv
395.778 239.893 396.624 232.438 396.624 227.819 cv
396.624 223.195 383.258 216.873 382.295 215.294 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.4%%For: (Jennifer Matthews) ()%%Title: (PRAGMA-oneColor.eps)%%CreationDate: 10/April/18 4:15 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l]PM`OXBi+nIGAmetfQ^m_KpB*F#koaGc_IB")<F<'=f0@koNlOuQp6ALnTSR\sM?rj`-oS;:]]f;sH96R"$CE,Yf4_f'L<%I.l7\]5QSUp%n&_DVtDrc`b3+jaFd63F1a.%\J1Chd6?NeMk)ef=?QbG1Rli[5[OR;/5Dm`+pH!J*QIX_mb]1hL>7eqf`RS^A6pd%m`iB<hgBlqqr["Xh[Z:7r,__pl1LNIVg%SO?[fM*rd"Ulq*3_bqteQ=s7Yj?T3f52r$jW1E;61jreGDuroM\n=7Y5KQTtK@@u%^A%p#/7[=ms#tn_*G>^\jGk4$UK#qYAZkr9i*B?@VS*rQ>_ThnAt1^Xf"6^\dltjnlgOnc$YU?^9dLg[AK4If8EjLK?P$I%@E,9DEl5%\$kXEO]JVk`T8SWGZ@AsD\Eef5/)L=pWp&BgT-ZJ]m<I"gq<[Viq<?>ZZ7cQ$if?B^\d`LX7q*gqt^CBG4X%>=SUKl?bLdWq3<&J%TAI6YMiPMq0`Pa;hnOR=QWG:*$GLlY/a!$-<OFc-/3eX[O&oF!`u"[9lW8"Ss6^74jYQ@/T1HP6IB"p^HKADW=$B:W_>>`!icqMn%J$X3<KoYL/V6A-^qeH)lrTh52If&q]mCZXaRd<8KT`=Z`oiH2tMnc:i9."ad=9!44Iu_/diPUFPDfmCtNfO.NU5S.0?XN:+^]/'s%Xg]rjG76Oiqs?AHI:TgX1>^m$r9t>,=(>U4s)iJ]Nt8G.3IJ:-59\tRSFLf=q"o:mBF+Al"T0/>ILUkCSkaO!:Z[O93TF>hBU(AW%ja9*lT<4e]CM;2n+$A?t>.')cpb2Q)<lZFg*KPI9Gf28U,MJY_q"8aO),Hl"q#,<o1E8-ibOP(]r"W#]mi`Z7_r#-]3T4n`_OPG>%r!bI!he7W[iGZrp0YqBV-iAsBQkB<e:W*on`f0CGk)Fik`LQEm@[$7N/'JBNUWr$+R&plg:)jq*`"N(3PFOX'c`qP-Hojf8CLf$l%#H][Er/I;XJt+]Jj,2f&[)2`WKo$O.Mtu=MI)G<\rqMs-#6]OO($::d\Vd0qig&uQ)iY%UEha^\1QIMu7k<TDnA:T7oGBU/`V6ZN%>;*Fh5A5]&).d9#Gabu$YF$F27OunGk!ts2=o=7;R,-^WUMS[H`#RZ"l8BP==tsd0a@RhV"ksj%VSkPd8$)<q`#D0`.q3S[f[7ju%cJJ@ZJ*.o6S3)qabV^bcfY^;[OFHA1k;.n>Cq%]\AU'ZN:[0jLTCdo:-Ona(T;ud1T'Ln=)(+nG`.j9%`bY$S^O4J?7K24PE^cmU%]]Us>?iGU1_k6`Xru=3qM3.Nds-1Cho3_KrQ/?AbG?=`aF2MAI^\i/"bO>%0r],@LG=TaPQ[eGlq0i7c5KighIZChRhcs63[r;2R%cd0XA9W't%HTIGhEgQ^gFAnB!^>,8S.GRn<b2#cTh;oUR#)GF%htf"s#QKLUq1#dCKtg3_G?K6(n)^_-iSFEsrS\d=o,0YDmlXbQ%(_N@)hs\uFW.MeRXhM$)N4Q9,ZipU4o)ENS;t2^$b;%2pmdWu#qCWMs#<cK(^"rX1*.?n!^RunL&M,f"fLF2rgGcjCp[1%^@cDL=%7/NNW>,)"B\(o/O:@-lB$`r;icDC9EE(keUS]uq.F3R1q54EGRgG(9uM>(6sba00PpH-%b?M`teO92"#QIpDG2qH(#[l9CHHmD*\%6WY/T+um4#oQH\0ALi&+&T4s#X*GK``ds6[NWQK0pUJGp@a;^Ws.le-D8#threWM-1sRa,3f9,\]XPXUI,3!0mlNpZKGr84WF#Qg%E$nH)gPA5r(SG&(\Dp3,\T7>#X<DOT>kFU'oO^1bA"iK*5jXi8rgg`b&o.'^c&$P&hnfh:]&P0j>0A_D<r^Ulq!Kl&-g/7`L#E'u%mI.SYLu$D^#70B8g]>?LNIh,`]I/ASeD%D`r6i?chT\Mbg_d6+d@LIoRCe5)8@i+?\\mP)@5mZr2YMRBrq&Y7YdM,:l&*"0HV#_2%)/#CcKW?A6ZrqIFFR3Y6T1Y-&hgo'Rdn;MR0NkM"@L+q@Vm8Gel"Z_aBft*jgY%->(dAdl:]^RMp::4Am_QL_-KXJKn\_d!U[c>9%9hO)`PYsFs@)$`)M'$bL@c+D2RFYn$I2'"NGE#I[VrS.dDfWlI$2`JKS1"-9XVXGZPUbQS`FH^Xk'($dNj\kiE\CQMIqO!^=iigU%M/R@i`Y3oGGEL>C0.:@/hV9D^)iVhplO;.pBl^K%f\eBM][F=cpZ"!X49Q%;b`qDp%c/VWD!u<GC[Nn.)K"8,39GF*'r+aa1!+U=%EI)##Xtogke+:",pV+A^S1-O2^!kJrN+_s$CS@39O?i+hgr^7%d37mWG!.Eiek[7*T[j1DCsndkNCgaa/D8=Jg`,AY'/u$D:X+@3%;cPTVG^5Y-pP+CD'l<!W\V';"5lnIGrd;t-`E'Y9`qC5t!UoVom^gLFk0rM*flUiVe*\herr-W"gPs<JC0O#MEPn^Cg%S`+C);9?%kgT<Z]-"\)Zf^iN$=`iDf?4u"nbdS_$0TAYTdD]054]d5Kfq$V4IX9HG8f9EY1ocfP?fs#BX@?SRc@cSf8IR'rESR&kj&9\1OE[*%qjmK2;a7[VAI\*FYLqJUG9KTf;eq@hG?l%(a.aCWCOWs(0r+/*AV0;MN74l@Rqh84^-bUj!/H`8dZEm0s49DWk8`U<Zi\mt-%&qs%jD2K$[p)G^e'R#p/_*#nB$FU&QaAse?9!Dm$?MQdMV-ccNc_R,d;bb[#A,)^O%<Q?$=:+Vq=eD^G.lAH+-iH_\IZbmrHNWW4c'k&%dboRVWQGV(ES+Sb5J8>aPh&6;U%RJb:ARb'bo]X2I#>,,L@;)"gCB>.<F2Y1/f;C9<N@'dG@Hl,0^TsG\p.D)F4>6TO!(YGU[L5'%.93o2TpVXpa9O)WrkuN.O+U%KPGG#2)Mq1'*ejn;B:(2?r(8'fC`[e5<!4XA*Ed7T'n8?:9QGic;U%\gfGgg/p92OfLl?#un>($>%hn$kP*fW8&)E<b<)?ac/(5'`SM*:QD>#2)<^,"/KC(Z?<Ae_<><9/@p%%9:I/.?8&FnTCYA6:1HqceBIPHV$J8o._dUU2u(T-,'P%4[q%ScmGm9fU>YFr@(*PUGqEig]G6tM/H);Q80=O]@g50m^=mPIEm33/j5fL#/sL!N(&ea[UQi"g[IbiL#XIpR<Y1W..hcZbaEXP%nm8_E>%9)M+l&W0+mbB.CW7<Ip4c@W9=q(oOe8ssFQ=3aXuWn@3F8eGG:LAPC0=,9h-287h!^i?dIl=kO^Krq%B[`++=k$tB'aQu%kMa^r`?jAT14jVUVCM8aXnU17178:pDn%**T$m>Va#1Q6VP+C3:;\TdJ-Sn8VuLODXn,7U25MZWqjV#L.ZYq^]Ghi:XMq.gYGRg,%qA_@'TqqUnL1&>hQW!#*bRU7B??2maQc)P6r>5_d19'aLrESD^*V?:O1&bD;Zj95JPebaG*'@@anYbM9Ni[S#-)F4kCc8cN6_2r/%q,M=te%S!2F_](1&p<V*l>(,<lWE=&`>eOC[H?_<A$R?IjZU("Qh4"]e9K2YUA,8;h7:SE.#FNnPOk$W7`!8^V72i2UjZPjl/Z-]%c]0>FSEdr.UF1/4M8kO,CF$$-Vn2Vnkrlt@=UOd-Sr\W?>h+C$KBF>SJ&+l#CaU('2[g:6TKtdf`TZK.95X;nMB"+41bR0.o:#74%mP-fJ?a/C(L3o!.MJA(6/N9OiRJ^r,h.10IjQRQ:Y,?8pV5u69HfN.9@IV';ije%53'HI(Id4>j.lb,f4)@C]jI4G!q_%pAjOr*G%qjo]CC=Aq<D;d?PX6(AF1En&nK'1iog?ZJ!\u*2HlG$rm$kB+;YgKWAXW?Rf\)ro-rSCQnG3m?n:H]H[aGm+Y`Ti)-3<I?NjVYs]%gtlPH[V(2aHthff.nO3!A86.#.6M_-74:?e`]CV&2P8#;Gd^^&P<)E1)!+]^;7_q(]YbG#UGbmMmEI*aT9c`S-T6#<CBW2*)Rpuj%H^r=hgMKd'b+C=d?D`0!?>+75R3TEkJX'TQ\Lo5LcM+frqT\q,p0'>!6b?k^BuE4P-QapaCS#:hp1@.dg&b?(E_Z(6rT>#^l^[<p%$ToPkPG+t4c;gGtDn.UZN-CcbXjW:JY3+Eg'C#1)'Vc88o/-uE?*rCVGECP"j=jhYd<adj.qWKiH*ksh7!"gs9co_DV5:?fU(oW<%H.pB+C(L&$2g@s0fje@GEAC=^g;(:/CQ2nq[Z%O3R8"XtH_Iq2FL!8gX22!>aVJ(km<AN#ZTU4mEp+)ol]sT\3+G'G]k-TM0]#m\%s#R:'Xe1h;m4265SF!gC8s[#X`%o(M+fEmYb2k7o:2u3>ar7J4:-#;O#\1f0]^7,bn'mN?R#4`Zf48aCl$Mmo?=3H>HEH^Y--9*Q%M0[6Of(sEW4*T]7/7IrZCTheCXlrcmj4!45/Wl%%W+YXp<bD6o<-dV!RYTe=49qZ5e+nA/Zmp0%mT9,L`i:b!>HuVrfj,Th[/V1r%!O9nTT#G%,`l;`;bHo459qpKSUn-(3duQ2&8ns_5M/2AAfXD;f`D6,GC:O+_o]=-hlrMH(>]GJV_99s2cmLe).>j]Lo]Mr_4X9f4%E3Q<MkQiioes!;Vj5?qSpk5:/APUsgOe6>(aq)^2=A&[d3)M`!T?l>7WobJ`s0]l^Snp;i"Zu`jqfkSH`E4]][g^QX>(sV9SlFUK%1nCm\;odR)lO3J7\\i/P2<krm]WnSXa^rhjoIHF\b7ff*QK0Whef=4WY,%ZSMU3[sf@c`8XEj`0%N1[%XQ&[d9@U`4:FVs7%saa7%(ku"=T@W%k\2MI-r8=s%On/+LV([aY.X*@J#7!.;hD"<&8RPnA4K$`42Oe[R\LFFJ/VYLVHVVJ&VnVL4Y4-o,3T6JQNm%8;^<SG7%DgQ'Kmj$@FVK?0%:1UV9"@L@E-C^20PJF5IV`])m;PVq,1h*1q,lQt84q-O__l'3:cgYG-]2$#dhZEafC+,=^(@sEJa*bb>#uAI<%ETu.r0or`%,)6ank\58!mA1_cI*M$D;Pt>hL=(6dlH0tYY0:0EjCk1A^\nK_qu!YX]14,LHt1"j^O?.Mc+Ca[\+/AHbDTFD^AXKl%$M+.Vs7WV)If1&(!f)8h?g8__qrZZ4dm(Nqp[-T4r:\J*%_oUNlJ8(=?%)8.iPW;%YQ+?tYHE?GVuPGbr;,\[P([lKqtD`cH3aEG%BQO.Cp"-tXA9Xq10AjOUifF%0q.fqYpX=>irqu3_j*[BDqmRYS]m9AFWnRQ"q=^kiIt.:nlgO9<[r5TeIJNk7i1oJuY<V_f??T#e%^*i8oFSb;$2d^dia<T,DpOZ0t=T.kT?M*g+?a"A)]R'J*2kt;?h%#sZn*]Y`"-Q=6?erHrp7&g'rVkWb2l#-p:SW+;$P`".F1gPB%o"a#;]Hr0ThkU_TDn:5oiBQ.&HL%Kdd!tu>h#$X'Rl@PNo)@b&Isq97klhlP+)g.W5D69?nbB#+DdIqb39b,\q<cB"+'q1EH1g/=%hgB\Apq7L<lMdj9S]O%"NBc+Y`SY$OGkgUrf7/,Ho)7lUTA4isJ3Uetqc0Qm(Z2t+n7j02h;d*X8A'9=f9]jZP%f==lUb9o(`fJ<%G1OE?ma%JQK'UIXgUF5Us69L*Y?lEuo(gh>,\?NG]__B;@K_JRf;n#U?ep0RplE=B4`mCIA`2ft]'[L0l^C[2j\n4Z;`OT:4*C/d%rr2obrcip>IrjN8l[?=ipZXluLO4O>m^j'RGCOg\GJ(Q$]=D^$p!@8`^.W\?0&67a#CGrbJ%RiaO130!@lr7O3Tag4`a_")UH:*;%Vq_+']A)B5mHr/8]</R(2W(CdGT1Q!Xh.jK2lE/BS%G0Mc0`abHt,+s-JtVgGS=umNP"FI7D!J^mFZ=29l$l>dW.u4[a9DCXfDj&%^>@CM^$S/#eU"0jk*g%dU&+%hQi@]XI4VkhVR05o.Cl5e9B^\[.pWD%p\?E`o524`/_=6Jc7-dRZHk-VLNH/_kq4"*D7W:jePoFA%.7Nbf]@7RnGTZD61#Bp>fO?d)@u`"X(o!'D0&[N4_d,6VgMdg0W/"29%Oo=-Je'IbroEPHSNlsTJ)d"<\`KuX6m')9c7eVHmbOEq%\m'C=R]EU$m#m8Z3:EAA%SL0MV6@jY]6&]XIEkJlqS8ERpO^VVs6$UkIJ1_9pRNXu)O[eW,)M$pqVq"t+*Z)dD[pYO7]R!"\%00k%1i9UFR9Yf&IK/^IKW>''UfNZBdYY?+.gsL_TT+GQI_:&uIMRAn8l(%>IdZ9<eBdNUA,961I3TTlVs:2$-gN/ELMsL`?9V+Kb98G3%oQ<4:>4H[3T;-dOolHn#-D.:[\d#Hhd_XB=`7aD@/46Bi3Bdg8II[-DQd;4ONq0a2ccr.^`f3eb'+3]rkU4P$l,Sn-g$.6JCMMg@%3J"&&6<EnJ>PoK6F"<k%rA=IPq%Wd<q'>pWK.S*@BsY,^$Bb>)YC>G3b-1g1@?CE`F1;#dGG!Wrc]*@]>@`3Jfr+1#H2#^GF;R)S%m]#U1RNI%Qg&L=.5.G0QFT8I-pUec-mW705%_>O#k@XI&B:ld4PkF2np@\9GG+Z;AKX6_VIt-,@JJCE-T2#`RU8sL&[4`QdSMm(6%r?"]/LSnhcLQh^`_#O)CjAc*1XGI%sNa[pW1fP.a[OARh[p2d7?s@l=K9F>AU?9;WLNI5%BlogT6IA9e[KF#qD!Q$bfbUor`so#r%Be62EaQr2RM)G^PU`YeQH2sib8kbG@-;T[-&[*Nt:&'So*X$'ON,Q$ePj'OR:#_Ll-ig+SR!M#/iDr1m,jt;7HA6)RK<>ZOrZJO'%KuO$fSIsCApmD\FQ\A5@crCkT<n?eIf$2;t@<Jk,7MFi)"kc/G'9#Ds?o\M8J>f7$jWo*?12kCFaQ.5L175pML?rK)(g#t_htf7@%mG$U&Di<)<;kZS,>9A(Sqkj#ae+u8>mJH.Nn#KBb:Y1pboGOL>mn2JeXma0^/rT//9KI=-FaZPCQW:$.XE*OAX*#S/gP$O9/5Mh4%?!ljCKjEt1YLM8Pi(]Pka"@tml`$)ZlSK0aZqOb?Q7b=)Q_LrpRbi1dH91[]i&Yk2/oFT(]/Z<raK+agpo]P:;r8Rt'2@]]3d%u=%])6GONo,#*Ib3]XWG`^,W@;q7T=Wf2LTUWaXpEg+L#B*a"unM]S]jE%(fFETb$FC<`(ei1N_%1(48"$a3r+K4EMTa_PcfSEY)1qW%NT@6X-Dpr(+=ORs/0/.H329\ZAbrI>>'#0S)(@+h,>;u/q7r9uaNbkHIr>(efak-SDS'0J[r1WEXll"ARsAg\DIIA@\UEY\h/:oV%=_4(_4hBI?\gn<&/a&FaXZ1L`FpH=K\(u24gUPoHA#J!4/+TZ+eP.G2Zjl:a$AF,P4-ehNLaIkh&:>l$KC%28PRlJ$6N>[=9m-R2%!Hu=WFp%F?4t#"uMeWH&G"82cF$MrnW2%FG_00OuA[#ldVke9DT)GA`s.TK("^$M(P[WFk;#)8W=8<R/4Dd?ebiaW3c_%G5D_IL'%QOIN[1P_OWlo0+ZdjFZ4K3<m-iM+#U/f;bJ9]\p%nmQ/JCb:1F[_LA[[n?Qj@6a,.o1S69-0+ble+g/rOtW6BSR.7Rr5[MEe,0Bi%9F'F'""t1LA^mZiG$_1Vafh\G4?cQKfKC>.^FkkEhmM*_O(,^Tb1QEigne%H>@!"]dd,+%FoL,+nP&oLjm0C*HM@/@+3&e)hpa=7%p_RhLgt8_f+Y;!4Y.no*pVTeYhm_nJiMZ#1>P7sae+NI;qL85(qYO<A5Q#X%IB1((0'_nP9)(T"pAU%IHk)eHg&LQfi?J'P.J(5;%LX"Ga\*$8/%N@pZ:]5Aj5@!\UrQrlYj6Mo$?bG"*Ll9etRk]_+gciK_I>6BnP:i/.\A^,V@]`nHGs:]*p<;Z`rk`S_+mn31AK[QD%Uc-c_9ABH32g3`jhhTaj!lnSs_"K-ZP?Y9K"WhK0Osf$#]YT0rnb1h+YMQp;p\1`gj6ASl?bZK^X/k.N?XCJ2k2-h:oXFT5WA*,9%`m2%%IF$=p1\DJe5?olI^+X!2aP%/s1'oS=p?uDWLJJimT475c'(O<Hk&\$.**8cee`UQ;C%aOmVjsBbqW-0SXZg`P_Wmo!WIt+)%S4B(?f(G-fT=`Y:3'OhF3=*C.:Kr84l;P\Mcd,d9plGBVnQ2kVZ"rDJp"H4[,32NROJa"EC(L9)O>X!icX:BTg`]eerTf6R+\GK.%'p_aFs.9_`7fNDUJ+*Db]4,b#oFLcos7ZKjT,m_$X*F<@=9%eTQE.4a`:"BNO7I5Xn9P$El.>oMOoJPUhm`16^VSfH)-tjiIpN$?%#PRe&q=!2I^\]DGn*^>$of=_-85K1=qtd1>-2Os[p.H@>o@rm,F,JSJ,&G$Kf@_;/lRkK/26a9j6"nkqWR2X:f2Vq1a4,UD#5WI#%n>Qq59L6G<T3^ho8n/5%Fk*-pF\/>1qmm\3+&\[Tj>ZrR.-h:bK?4/[kjiVc;pa"YVX8nJ>O,?%dGh%jJF2'"c>M*/+hMobRTn4;%jacaPg)O##DOmJ=k1*P<eEG6@[;Kb6CV-4j\uigBD)mMs91&@>C_#cs#2?Vp3V7N=h0h@<TriK%YBAS#e$f.!XkO?<Xt=:kDQ/_'%4.F.!jacaPg)SJ'hlR].5$V3nF^'K$g\ne9D%3plb?:oN'!cFgF',n.fY6a?_npQOX;B9iT@UU<==uMfcYD9XXOahZ:1;[L(MhcA%N.9AsXOXanheK<Z@,T'?BGldp\(s#H2_r`re;5<TSCWZ.1`NuGh>4Q^2_ra[-iUXDM#Y!oo\(.!L">;(9]KlF2Ulm(!Sb#i&[0q!%fWM=cI,/t]pAK"5Rr/t:/b_'-4gglLdHK8pXP+S/hf`CVe^e.*[^H1:V@'Vpqp?<p>E@>p`I>2[[UTNR[YFBrgHf5Z[Pj%dgG.H2%^\k\-<[ZY1)q\b2Z=lBWCuc/RB=;\nY^K`F`O`1fp2+X^la@!Zl^,NHFA%_'gs<(3l__87Qu$DIjT:"8RZ=rHRbA`^9ug4W9l16<%VIQM#?9*^^V`IUjph'9s%F$A=:YpTbs8TiOhLE%^rI>9??G?H[e`RtFJ+s!;s0\n7rVGfos81cHl8Z'YWJk1`c]@POrYa<#+["Z]%o.!'am^cPNB?Br;P47T&P?%<Va,fqZI8ehE(BIrlO5$j:X*7Wpq>%XpWrB;$ofL@?=1L7jmU#Bbp@@%jZX(2D3^t=^adWL2?44;G%P9M[+A_T`s9R4?%?AB"]f5=#=V$l%YjCVJ=IUDct+,j&<PX^(m=#'*_PcmEBDaR$g^N)E3c>^[;'@=#1gC[k7cEA2[H+:'r;P/?P%7:$X#Gs8W^?'ag4f#-)-UE_EoWafqWgUO49;?&#TobKp$2Ymd=)At'gl>.75&i>C:?*Y[q[HeI;V9h6C9(=FF44eVcl]R_HXnf-0%?PhV^fK*O+2O_D++`M6d<q*[PD9^K)aF"jMl\!+YqE3eQ!aR*J$SK<.?4o=m:1q:18&CA!P':1=#M&p`O!/[3T$pB(\TB`W*LtE\%>l-]X0X<^\:c]Ab*/9W4ZbCcQQO;>!bSPGC"RG=eltO22Eh-H:'[(W8F8WbQEt')4S+>_SIF=a*Za3C;0W4bTUC)q_41K2UYemra%9#uF<NFVEl$&!P9PI!hfh's(3,oA`2enXY%PrY^:DOlnC6K7jMN,?,]b<][.;6t)J\fl;G["VRb5I+/bY1:s-er_^ok%.K&9r!_<%&M7luBhcSr7O-SJX&cnI)>AHX@U7Q%P!"u`k&j8Z0rN\S$,CCSOC^J$#M@D0+D!L3i`;RgeS703O"K-aDN3`SNq%C'Z',h])s)Bp%Sh/?M6$X@EDJ;/9VKH7[l!2e,GJJNnm*Q^6h5rFlf&X1Yd&A^9HNHXH[\j8C*BI;.gS1@Ia*!S@#CXpa8I+H<DD@7Cr]$m[o8Ps!%\Eh4uX4s;\aK(E3NUhsd5P"II`%BZ)O2j+tp;ua6.\!sP:n]tGEHFBYT_C5CK1,eC.8P6W\ON&HA>bUq@U&q74ZT1S?5M^GEP$0e%,[$b6S*rG&2,Q'c=%WZNi7!/5TTc`(3<37m!$q$NQ([W/HYe'OF95_@Pojen32F,kh`>i\?+P?Z,WIn(=1\s`$sR%'U0j%?CFd28%D`Zopg(R<22M4UgX`NEKfj]r8J<[W_'gpUBH]Kmc]*b`@B2pHghW[)K-0eHgVP_PLiFT]p.YdAS.'C/&oHABmKOc.KqGXe0I;6sV%$pk!#Vl\a46$V)+FhBS$/u2jr^VE8V*-C-`Ke5LRfM8GGAC/RjOcboFZQj.GDS+V5WF;PZjo')BKhC'4K0AGsQ7qqH$"BSHZ9#84%)PmnOI,Z'TJLrPep_&o&[`F@R^B1a=Ike'/OePnCYu;=F`eMF1&5C/6cL1Xs)jTa%Q8XtYgK?j>p8&DQn]:1)ae7m9;4@D$V,]XN%CW*i`_JP)7.(Q"gNN/'pj.U!n'5[>SO_cOZh-hQOgbk;[4[`.?l;Z%IY4)m+U%4\(G87%ElD1FpQbZGW,'Bt%&p!HEPFO(K_5=l/%P^"dY>FSK5]!b&>&DT[c#cb+?\9VlFp^=N)gmL)"P%Cu=<BRa+o%%9,k6=T9RNh0O,nd[FL-'&FWpFs$CT$QdE_5*UmC)k?Dmi^A%<CQA)lu_l;m];[q<PQ/f]$nE@Ik(\-($j^mX',0tCXnkG1BtSERenVeC:!-&CY#1o^r?TFjQ4<!kj:@PaYr`0fqhm^HU;:F_BD6Q%kW2QaHn\5lM-0@G2It/D3V4r4h]l9`I*_+QbVj@n,d(>KS8OPRY?l[*p!)$nX4,6NDm"P;fE6A@2oJ:s/A!cu]5J3EkD:Ru'K=#!%2&k2sVk=Dm5eXi0D\kH[I'St)I_#5JY%uC*lG%?+9.FsVG$EJ.eW&;p@Do_-[oWN4]R10nn#J,:OADkK79i_L#.nJJQI>00&3:A-%a-SD0([RqB[g#G@p'*B+_A,Bgjf/tJma"B"gsB3)II?qsEY**>DLkLK>BpPEm2)CJ-=cIj(+Mr-#J0<d'2CDih_C\h/hQ#c9?n,V%)f@(Mf*F'np1T#PbNk$Il+qEqnid)0f>/$cgU1Mq[!s?&:?YR)Pp/B"$se2D36&sp3PuJQMs#UOW.?UEj=d&GLu+Pm6.DXoD3XXF%/gW7pLj]JUY[&?;AW-&[\q'8"0*-Y,d8OG7^3%r"0BkgDK8CAqGu#M_^nGZGSoPNpG3<"*Qu')&FP?"bVK^L0PbG!?"Y7\oHM=tV%NrD2=jS29U?Eb=X/d^GL4<$ZPX=hC8d!phXlccO'7%Jh*Q;ZgXUr4h\D!eaQ,JHCj;=$oRnf93MY+_qXdq.jG/uRo]-pDkGK$PY5%J,@TT\Ar6T&!SK[#@@g?iuDU.i+;[(4pkDk(qL>]Lc#8]^VR!q:/61'jP^4sW^O?L;<c83SJ"SWZVK:pn"<"p1@T>Jdg7&_A:5^L%%UZ(6$S<o]H0H+%II^Vo)d9/.K'XL/BO;5@>Iir<M+tEf?i0NU"R(//RU?YLefJ#P@k`^Chcq5c&]O:P:<#X8@RIcAp.[)mMVgHT%-3OeMn#c<8oPMtO)X1J;!5k*F@<IR2,p?YtYahGZbKlGX*ZQAGI0[:M'F?CE*Sa/9%D$%17qGC)-6.O'@qR=oCiA5*"([YfZMH1]%o7I2Q1P.Ih#m^%jC91oG?/R8&M*Hh'Rpt=0FI79#_fhE/T0u%g*P+mFn#IMN@G"kdn<p*'L[;T9iGn]Hb\l[+U;bPc]i)Fo3/6F3%'GY>%Q$nPE&q\VC=<0&&D&!2a*Yl&o8l/gOUip.(U6,h$A#XKtfLO.cJas(Z>9=5R-*p5MJ+2dL:R<AF*\\.qJ.#V-_J2+58^r0J%O`T+J&uNSPN.s+sOMk-5k2F-Q;dP,\>>Y#kTX)W@@!4`mTGlT<OBAeJAV>euWmXj"boN=D<R7`Cm_Z_eR'e0FdqS((Fik16'O3DF%ruqfIEAlO#7sg05\ec^FfsKp%?/PHkLsS>.lZdE#J=;HQA-/>:.f0E;lFYW"T65CZ1+<In3g)m0,R_R\`kPmg:2JpIIg_dcnp6ir%B,i,43\3=#73Z(-2@rAco*&@%O)0V'Qm8;F"2HORmucEZU@L22"SB?;SP7G.?'3?gqA>^/JQaO.1WereY$>tE3u0`=D"4\$l0Gp2%'o("H$V^%t6`Wiq64=6W?PY$_\L\_bcWF]c7S#mlVNG5.D&sH(j@%T3d'R?)Ra.EHMu2q!0W`993cF=6oFc`eC;nm!_@;Rf/5F,[%E(46^cf_aDYD$e=cYnaQFlA#[:bY](X_P^"Gg=-%(Kf"3TYO(tNip*h#^=D6@J]!Af#NqQ@EG(s@-$:8>.dS:PN+q>0`"ba&A`%Q%A+q!07hYHK`#\.m537p02Mol1Om8c3k8tmC(:nL57*nIHMcYb-W*"UB6V$FZ_G:_q0YLrWhX7,dJ\pN2^7]lXd0<Isi_W0P'YW3<%V)\!3BkhF(F^Y2K%\s;^8V+EBklY$!T0sDA].a\B7)V@k"'`_/NP:Tus5"[>++!Z@\:Dl!:\6M6k<YBe'WI=O8m]uKe-u>,[k,[&%'/V4-%:j4L]oNeGK&=,kid'Z=^T/7tcX7PG&_`r"_+m?g+M%Pg9V':UCVq'jb5"*"s!2HUPLHU8J23WUd64aV9afi'PgQ707Ys=(%&GpXkiDO0=<e.o=5-UB+.^8I^bd:E>opo!"k#@gtO1m-p@]-+q5roqfp&cZ,6m&F"5FA"'dB-(366Qee.ZYDTMHZ1:jbUSt1WKNf%W!m!Z*fi:;&#iEg<4Er:pJ!X:l1j_:;5B!+=epE-:ef`$&K;=2XP.rj/U&:jaO!3SdY.52Z$d:@SZ!a-$e5OUOmEl=Sm1BUTIXIK%*i^$B(WTO3.YHAlfkAjd9&EksrC.<nFbYS*e@16i1%a^)]OEfYR:+.r4%`JgA0W@n@^!e0mS$+-7*9[$j5()C47:#:Sdu]gl>md#%e>^1?pIEs0@^O8&kd9A#XgYBWK.hVga(Vk@%?5AEK&L?qCBI2"Q`lsU<JM#?gu'Xbh.&O^EeA@p.N]8Oc'*M?1Ldu48q8#jW\j@W%G3ul`rW!!DFN7QYN>M1\]\jph8eq`*4p26?Kae"l>@TR4!@AfQ-8<Y1'2G'p;%*K1iSo_,"I69#Z3@kNdY^EM8ZZAZMA_2UpLm42%d#RF/1*"MY?I4O3(j1rQMCAe-g*t_!1,7n+79pQG92)l%mFfUdU6otl`'c9+pP:7'1/"uo`KX#1d_Q'@.0l:[8pM.M/n#W]*$L+e%f;[NJF<""8p_(DoeLVA4Y4%/MMObnQ+kU]FdL[Ie?lOf.qhciS3DHSDcAj'+^hBt.+ZEfOTaNP8>u/jPi2@CF-h6*TA^/!m@EJ2)%Va^7g3?#_?m%[?_]Ek6/A#,rXmng*nrYcZbP+#Kni%38'HMT^tKdRY)99Am-8VL`RQ4.2@0gp"/6>M5sE?]&7OMb:T.fNkM'&6!C%+uuhDEfaU:001"lZ;bBt,DI2(1J=p:$f4U'm`cM*$f`bHG_3refi[/&@`Q=b*5LDTm5XpEb!TeT@`LoZn)P?pb+7tscHj@P@)kQC%#g$BtFrV"TKWGq-Eq!OrJFbVYn@R<F#MTN+>qZr_J*N#E%g?0Sc](uV>]Oe4Wg?)6AVCr_`qPl^h7r-Ul^L%-K;h\-335Oj'-nu,%$jJNcU(U+n*$/E!BF5rMOr/-M/3*Ck)&N`1dK%<>:mu+F"m@^$5R2T/=h+H(ru,*o1$)fMADfU^[Eim&,c/gfiEc#1oZL&6]`_YL%>HC>K%?h(7`kfCR/1RD]7t71ibEt[pkb9`0FV?%;>=6am]0m>>%#Lq2CA!+.9_Y3d"c),7900AF.T3Z_8pim?6eb%dW\^TgFDB!0%pCOT+1"@[h?M6lVoEQ3fUg`.hOAo%LKmU2$m(ZDNp@d>=L.fc!gZiPYPo(,>5q:Ncb562@*Rc//.QVu*BpfP0?Sc\TGeo:&/]<j+%Po%0]iF#/B/_in7H\443M1BO^0a,J5,k6dq-n<)/1nL@0*=*AN(10X'>\Ki_-E)--_+<Pcr+@mV;$RU8ZrS9fK^ga-E23I8JVbU4%Wh\+<Q4qra$;L?a<Jue+*PMt&`je!%a&9Pid.F.N9@Uj6JMtlC@!9Da`YiJ>Ad'cZILm.iW>M%FdD'<IG$CS^!Z@9]Cg[if'"s.3%4^95.jFo)h<=),12Oq+q1cYudn6gR!Yn'j0\7B.X25^k`X3A[N7eJYoi\c<ooNH4(,E#_"h=M(K-G$H:m44Q%'^sA&l0M,*D""AR%PF6M*@cP<Zkp2Xmn!g^Zf*@9S36\6e`*%W-U,H9m$B6!o/jgr+Ib8b5`sL>AVT[,?f1'%aP=/DIX0+F^"_Q=#OIL!:B%Idm_4rfu%%S'T[AtIXt,uQ<sgNC2(2o=@SlZs@r>'2g)m"j:rF_K0"@n%K5*HUqlW[eAsKWq`H$5C29LK.C_>q'C9+f<ZBKr4(/9r(K1Fr_'U%EZ&I0?IP6UA(DApps#ljn1cP5QutZ&-fp=jf3tM%5O:GhBGbmj-)iJ)A(26M!:dt,/+Dp?5HHo!;$J&.=`joF5/^m[Fcn</q-hh4%N#6lZg8`>UR_N!J)%84>@FZ5)XfXXSk-biGWWUqni.b6emp/b,XL_0@WNVU*Fe.H#l6A*c/q_gpb1*En$j<4m?%s#aXC$pt$q&]D%j&lQjcdX_P\dTge`*q1>5,-_GB[n7C9]iBV?155&"`\_E@0jf2<JL[q1lXOegQL>Gl6%_.,Y^#Yo"t4'9o%qm:6NMl6]WCl9fbtO%P29Wq!F\V,C=47R+ffa#-67[[.en^dF;\=D\Z7k81B-oe*eD'#nG`+4YJ0i*@Jj2nWmD,8pP3)n-ALlgrpB3=O$;0$5MC>K>n.l6%mor*;$F'EQj%uUnK#>Z[rWRW@Fd>;]^0RC8n:c9taVR)86@VBgaqt^/(gu/*L\T&ulGWbh7Slcj$i.71)&0].OTF$m\r^+g+l>21%D7_t?Y\jRU0O)W-bqSI$_?O+$l>12s@09W,T0S,q3$Gj'(V-0VqYA[V^&%W9'ZBtH!88.0r:]'ODSA;N8FnTF$<]PC?#dTuOYa(r%a7]2PH(X,DIH#T*r#XGHht@(%*5HJ&8878sOu5dX6"^:jA+f;U6FDHW-kSPNlT=Ck>eR(lV#^=8_W,Xn*W3OrTMsCi!-G_Ig[2mr%</K0^_>11RmF,[!etIM!Y#_<9nh&(PldKG>[&B1Z_;k?o^N>3g0gkTkga6#<2'm)8l5Q2;Ra^Elefi7OI.)GDnk!gOA`+,63RE7V%h3Gtn[iN&]]/\/k^^!;p\179>8-Nd'#[;D9*WF6LE(siZ[Au[!+9\'1TDG!s[M-Xd@@#*+TFc+s^tp9qK^1%5>Du;*0,3NUPc.;r%J>-^>Djhsa,."6gR-9LSRpt9m`?@sp8#B4pcu_Ngj8g]RMM'BN&da`g7W`p!$Zs43cOk8QZEXM:7?94XhU]fWW#9jd?7-LEJ_HD\%BELBOVKKWgTiGGJDO4J,/\9jqm)C/b&T4Q*Y'YLj,0U@sck+dL&[e,;U<mU'`"`k"K"#kY'IP5Zh.FGcG)qDC+!BI&^#V3jF.J53%c(^-)eOCF0W#MRodl'gt4<<`Q-qIRN1A8hJT9i3appmrbMk@qa?MrS`lG_)mV)HsJ>Y;8n_n\GaVQpe0Nn1mL7fL`Mo3V@M4R^8J%%gQ#Er]p;9'nVEes'A$Afgu&`+Rgm?M+[XFQ]EBPq%eSBhNEhc`JY:QMGjI5#6\?oNL80`>\&o5JIQfP=/.Na#OX,a?RQG?1T1Cq%nC+r1QV+0P\O:BDMs;EUDed.R?q9:slY\1)lK^3q_8;J1:m[uI9T"5uW;Zitgg\dL(PAa$1?T4S[-]qC:A-&s9GDIsI6[l-APm=M%X$)6L!YZ6<SL)!&_rW;Q_kBYtN2uol\s[UOCL;6;q!DM;@TJ(ap^Z5]RnI5&d('Q9igA1P)1V3>H0[_FN=',UIcT`?"\UrrqaCO"%Fs'YA(LIB\%*Tt$e?ESqE$#g"&R`COhuJE-2"`;4-QPWD!VS8g"k"/dV68H:Wa>R.9(5mu?\VG%]nGB1).l\]CeB4u#ZT/2m,BR]%CH.rp#XVq,2Gs\EG:ZF+l^=jPV2A9>"JYs0gE[Uo@Oe44$4dPqV8(dLlQf*l$^FB@"r=1=k[,S=LW*7Ka,3]/&g4QE=t!iVbt8:=%7CrS[!'<D=$AS1tY,kV#RhMk958Z'A+uUnOAd"iQo$iDum#+sj!Re3^7U6@SD?JF;#Q7@#1l:g2F9L8)]qdt*):9L!(`Si-Q\5\l%9o>sl$CIbf4WJY'X)3XMi3$C'?`lXX$]RQag:AlK8%$SO=5VWuS`&$8B8<P@SB^ujn0^Xr+BQ?R8"RDfA>r4.J[mM%-p1:1;Tg*e%pRBcs9dh!>9=ro$RWoIQ*In2#/NK]8CRZcR[_5GoH2nVi)XHa326/MA(i%tAP^O"#]4O!(R9(,%_;)SZ%uii2_V"q$;ULgVkg1Zd%nka,NCXMa<bm4_k\.N*![V`I`Xa?VSbm4Mu4ke<LH<t5D:uib.^b(]87h3^:KVDT)$;@,=`DLSRQhJ3ICr!=t%XYF5-u=2uSdjZq%2Bsp6K<eNthJV','hP?4ea!E!8$E'@dEZ(Mo/ad?+U=,=jGR<GP6<h873uRU4FCNY/iIG/jcEQoh'EL&0tMoS<EjIa!;X5=b.5em%EO[CbLLsBm[>F(3!gQ;\C8>U=6K\m/NtL=b!ls@6QYt-YZ?VBoWNqD_1fYZ[o]Bu'[ds`1^/Zn^F+CSY2:]?YU6LB*$r!3>EM%?!%:!4TDkVRcKCr)6H'AH9%BU\PCFoVk[#9%WfD<h`i'6_&ai+<**49mr0?-VXC"%kE>:qNMaQWU\.:8MifYJ=*t3m7's/kat%E@MT$%^oY<WMi$P1gFIld>.N@I5_4Y/3KW(*`As+FA*[GKE&3(P?B'.%\sh4g%OQ3A(.n:_`;Z,j(KsB\0NFc>C#"7PE3K?Y`#RO'>(I90%+7dsZ=/;LC)QktC0]4(D(A;Sc"!4na:>f^e"2#]Bk]K%l1E76P@.]?lR7<#PJu`s,"b%eIVWb\`inWf?\01h$ju1"7c%gp[djq.n%_>rj,%*/nc")#)[1ZI-^]aitD";AEdmHA[UY;7.8Egg-6aNd0NRN\T9)@4Wg+(QW?[;(Z(<^i$:SLTCO"U4j&UB6lt/&KX`79'Z[%[-P+l@aHb^J-U-&.K)3&[LcQ-T^NLtPX(kHNbUk6,Bb1qooV%dL!IYh:aZlYUncil$@nVRYs1qtnW9sA\LsM+#V@=lVPLM6JmisL%No81@6l(hgs!CoU:s8W2>ou]S\e4rH'tO[_UF!@6W9c03$1J/=l/@_Q6;,DM;(HL,+I*ho@9<po*U#P@c!Hm@Y(8$O7EHn'&XX?*%/dkK3U8YR^/ih@RF#>1#G81J#KgmV9b2PjZ6O$V0eq)s/FDr9o#*TIX2$cS51`9#e<<aR2I2k^RZ^,?h!Z8SY*:@L9QAQU_M0Qk;%gD3B[9/U[&VW)aq$Bmo_.*f'3<:)UsYnB1#E5^XQD>hrrccl0Z)+Dqe>B>7gBL!54La6Na1.(1Ofo6356E7$l64"72^mW0-'aK\?%-FC<q9pMWl%&M7(5]K144;5J(UT;mp-DHg]lF*h!Ag)f"n\#'K295"_C,Cur2r0tEHHDb;b-4`J?"]Fm$Jl3>)mH(Eq6%)M`>.Ym%4M0ZU0NX?(%Bp)3$KA_P</4f^p*:R]H3fNufA^he)jj?/W@M3Z`r,?,,N"148r<j-(N#Y:+1`)%4/5N>R*c,FV1FsKMJhn@M?,k!%/[Ci:@X(TU>aFal8lbu>Q#5?4&thL_Wdr0@9]MX06:V="ju7JI[:MT[!#_]8MdHL]"0h^?/KYh^_[b0^Mid.%`sIdE@`\`u#']Z$%3#T)#H<pZTGQI+5&Ak_4`JQ(0Cl3H?f@Xq4e4`LnAdAf3qWuqUKjgX%Q`$b03qu$S-3A=MN&!hIGLS>.03$H.L%\U2ij%#S`fM:M%(s,b+lO\cP`[LsZPbG,#iX9$slPH/aBKikl\WE647nQ9C[MK@DP)Yb8AgI>lp8:_9$UZ0C.+(>NJfo`d*bm_UF_9o>Pb;f0*/N99%R261:7?d(GRKGa5"0t@-#%u/S&j%hfYQJ=Z3os6f'\?k_K8HOhJ3j<?2FGWGeGI*&q:%^HT4&lEL`fn?S=mme7b^JO$mFDkD@L-9%e!C?+l"nn.aZq99c;'G+A'5)F[1OHT,\e[Y40&6"27Za.XVf*5)J,OsHr\2oe<3'+WCo^/=$XtS2C(V25\`f;=0/eJ\>[SS.dPJj%j9>\jOQrGL72ln=fdn1[*dl'#1p.DokO[=Q,*,,`_IXL?0B\63iXNV1[V]RGU-%$W@tCDB*ZTu%>DJ+,$aQVe`HRQm<AcVrj(RQH%m=#m9'esT+?NXQdb?GQp9=u@-Q3nCAN#ofCG+'Oa/R\/hU7rcs$`dD7qa'Rad=0'M=6:)1o`PQS$s@o#M@e*+a1Ead,bkWXI2MoD%=*85OmC^a19%DrQd<%k4jOD[8DhRUKVlK1#[UYVYc>:i9@bu_5r;o+uf_V_K7j]AYiCi9(i[kk)+=\fDN\3<N/f/.AD=s%L0IT=(%"&KL83PrpI"u/sH4JYF=^7OT4<)CScH.%4k"bri@IZ`@Er.YC\`o*D5YgbmnoH(ELqeXb2&-#VMW[Hf!MCM6J,YWAXrEtmc?!rJN%?F3djP;GE[P:%Mh-E'_odqTVjA;NJ`Q+1nP6>k\D8SpK.Vid@$T"%\A,@_4u1q/V^>(DFr`*1ZCV8<dI20Paoq^)a;d"(0GAK]A(%ei)9/l37;JPn!uR.(W9kTO)GM#5bqSo-I2!6=C]4=[hoH(l$[LMA]riR[NC>5rZ6BnCe75_`_N\WS\5#7<7IBZOfZM4,agd67bRg%aKEmUb+V3K%*Qb\jQRX_nsqb&W'3P41h\f33'8kp-U">`F)U*ob1Vof6tZm[QPaM@SA_qcQ'I>TqWgP0M;YVE5"o'Q@kBHEF&TOc%P\k:]A9HFsP"VkjBc<'d^uNHlUaIproOKJR$qRaB6,=2jY'?aK!81BC^fYDAAP@:4<L*JVVt(6.VI/W4;CU=PCUt/+Q3TDf$^Dt#%4t`k<&A:$PA/ln-Nm!B]-s7n>1AnA5T`'s!&[GNOm<Ce"_g[X2*e/bN'T8Hs_3l5_LrQQUBGesb7#G<+<(70*l8De?Rl@)oOiJbT%W3rNq=+r6#k;?g=,:N$ho*=Ct#aSkfkGetPl6-?Yo2d0>^`7Ae2eAMDasaQ@>$@/>!M#&)7Hrcm798*FWLa[U1e\IY*Z#cHC6"+*%?^`(&%85!BE>Ii>OMNm\*='cD`B\19S\qM,2_aKm/FkW>(9mO!E)K7o'S&Lr*IK:el?SOTFkq-cX7')`!c0NI&>J[%1BT$=-G@B_%1S1s5Vu4==G&YGhQWPUZ'L9!UM5="UW)+Uo2<L1'8[cMB-4$>U@gQ0+"KAtE$kUIN?Q*^&62QpN5lg$Zh?83cgZ6ICk.k.FH.!*6%JSG;;bh@6#TphVtnskbj\N.2"=i+VFcOp]I)Tua:BUB+rNbS!`BUCTs2B%>/Y;j72%!RP%`NgThWSt,J"r;ul7+TpYc#&TL,05at%k,C`o6o>F-&2sJ*E#uIpFfa=MFq1bAomFCfmG[g_[D#Zu(.op6e(l-4e82''#6$JZ9JNbA-B`?;UfJaUhq"_qTXe4VYQ]_>b_9tC%Pkjk0H+I_.58NYUBK&h[!dKFq0b]J+4K=P3e>IgX85YM0"@OWL)J>SZQ3)aFWR-rHF7*%,>f!n-0$i4oC_VF=53#Y:b8<[D,*nl6%+-rXWB.K$96Zh"[^*C7#7X-cd?iY"\9+)*5TE1[nm9h(@KDB1QlY_qJr6Bdkc,Vjt\aK3Pe06c%#.pYV%&8AKIh!6>n_F!7-DVrG%fX/c!4o=$_%_*jK%64/k>$P(MRB5q+)Fio5+Q#e&IM.Jck2:)qNB^L-16'IU,!8rmU7uh(kW:(E$qr4"U3$u[_8Wl$R_;9l:`gYq%<.DSMrLf&0GTYG&/.Pkq)a%f[<U4k)+:r.\Ya7,^A1#B`kGC=jSW+jMZ]18"U+GIeW%mKOZup4Gl#]s*&=DH11D^(pK6&7-iRUu3%htcRb4uBE6Wl53)nF.2hd8;MBEg4.E;#cBC&:k1E3QYX1P@D-"VC0WH=)9j^3`%R]kJ.PK))s=6e`a4T+U?O'LA)TS+3Z5V28<Ff%Ajp?oQDdu`e&Xcbj3_<g7\!*#6q/f,+.A42c-47<nHsFb#h;,nlT<t98IY,+5@\Yc*l=SY<>_t`_\Xd$ck-Yk7.jc1^J'++'^3u$%,b2_CJ:f(D[pQV`CfB'\)H_l656;f/"DsVb1-:I/H-@dAUe]'=H#d_U!YelM@NUG^F>4k)oMnV2MttGP\Tsqa6QG8-RO\@CJoW8q%5rq#hQG#)"AZ)Q%>'Lr*Dk*n&gO/r<)@9H7g((P)N>!idjn^H]@=m>N.D0<5A9/,7FF_"FEGLJ$)+`2Nm'gueYm_t_.C'I6';a>*%)4MOAa9`;MNFWtBNm)/RJR-,o35Y9#>@e-3UZ2R3V?0V%3:K0S-"fDMP)lnm*4e+8I7UoEiiABN,sR(meL8"79.[D9Q9+Z4/B!U9%O-(Y>R8P!a6s14A.4K8V!;8OlKe+e#PG_NqO2W%u#%$Sd:381_U>XsE3tD%i;l"oMqAar^$J>]G=5A%1)gosGZEjH>p%^_,%-HSZ%&L:ZS\a_"h@RrXjnil@LFb-;KaUP$bG'lfF`+&^kT<$+Y8\fdEcYfI%]ladsW&BWc^h1+_XjE21Sb[!j-8QpJO]Z6/JRLjolT,\X%jCFbe39gRJ_c7'eN$fK.7FJ?,r'dAVWuMjg)NpV)4qi^``4'q59!.qLAg"VJ?oQAlE8F#F\1XjCHP,i[T?>=0Up$/#gYX.hZNOVV%=4(ttQ!rdQ3Gkq`1PG5f?S'aFqGj/`>iLsLhaHEVo?$Cj/1e3h$pX)]0C'j3i2_,MB*tXge:krPl[cHZf'MF9cdkgM,nnHmaO3<\%&43TP&TFmq[ur_6dru>sI-GiC&t^9plhNcg%biR[*HpS+g+K#;gJ?K,f(7Pt*e,/fGk#kP6pghA:(`dWP[q@:KH6i_;PL3d_9]Su%'U.R"SXWBG!7+E!k9G\Z>FKlW1I?!L:LDFrQGI)nEeO@727Y9jddo`e;8IE:WP4X1')>Ue!3;Dor-0>D1?in*)d>(9j%"0"cs9m>%ocmHD"8RO]3mpMuC75g^Yh4to`=,n>W2H!Aj5n+ldI?oYAi2HKC@5"M`[H7dU7r`P;sWMNkjGkiNGCQZm;m"O?VD&/.iDdoWqE%E%B^alS11'?LcK"("/7Q20M#C10SY?XmlO/h4h[YE''L][KQu+"s^RU#ORLY4bZ`^!O<-;L<-KQLZ_aRthf\t8s^g(U;H'ZZ.YijPC%Y^Z7=#)*6?crfsO<iSiS0e<E3B>;@LMegO'eRuY$7'nP)$G(V)aQ<r<U;tF<1!YC3PU**DN&=7K`8n?T^i>qI_s6nSrCM``6S60T%L]UGGq\u?5<1IjkHOGkb0K(m.ib$<.<d@WWgC=;E=C+jga0^GPNZkJ0j*d]2Zhh`S%8ulk:s\Z4a=\f"TTErFq"`51pus@DN>gD$%d*Xc42'k)ceGZ'/918A<>sPtk$pBomY$fZT(Q6tU60K(FmmOXHKjO)Z7Z=-tmTcFW(Pdq7oVcP?90KcCA;dn$s0:[9YRaTSl']Ht%-mQVi+81CCJY\ti8j_]G^sZkTk:%4QF9GTunhT2WSf!g4Ou>Q"h2XsRIbC-=[-S4&m%t*gVFMffE=I<0#)5[XkOWNq:Om'o1[u4m%;b4ZWq40):&J`8S+Hr<;=K[;OW4?elCb%r/SAoZh)20,hjl8mbT`o"3j;+%8>BIKG[kQ8_!?]UfTYT4]U>hJ-dmG;h56u()n>$V&%ZElm`+>KJ7_Rc)1Wgg8,Q>KbU,8[GZ;!CC;)ma@BSsf3BQrqY#*dr&>l3QI^cc,h?I:Hio..M0"A41(H8S'k%;R3`.'7,e:a-]R@%P0OQm83_,C(`HA(8D52]i*3RagkG!s#eWIj.e?kX7'fi`)]<Z3TVY*$3<H2$8;:6e5sVY2>A,m[V5O.?Em#lKIDj*!r_]MXp@+J!%EFkF[V'b8fMR;<[75B6u7PiJZ5dlK;5e'.PP`#QBPtk45E?m7.9GU/V>qV0T50*Nd(Fb]kaVUrSidSBkBFZSWB-GDZ`K>sS#<?"l%Mj^8(.PKdXh5/emRFFX2;^ID,8q@d$YR<UVKkEE*'<`Ek`#a[m:looJ`N)K9o\&OO%i5I`UKC^N&4`^g:Q@!ba0O(/Oe8KWfKsbK%iC?WpUM[BbU++*HFd6$B**$@so/=-Y/'JYB.Cps\)TQ,p[15XuTC^0B;oFCNJs[6$9;_Kc<R@hY"<phMX$lALYo)]+q=*PtnE&W.%e[i8nQc;VI.Cs2$_8V9P+;cD/OI!hB;NFZ!(]iA0LNkuh-&kR7iV[PRT;#-:0k'6[@U^i"W7sBC0,.'"l707$TgoYme.W]ks&U>r%V%cj9(kS9p'Ff8LG_6SS',O@nOTS]I0U.eu-C+dQ#DT6$acT0%j.@(q-m:fuHD3_./*nhrbD/M@hQ/od)87^7QfBEOZ4#LDL-]<G%6oC-:$DnL_`YfqSg1&_HG`q]\7,.t4_!,:I@atIN8^)p-(*bIuTiR@MK&Cm.YAlXIiII:3?8H!7#PKTa'$#5/l%-g]1H;GeYguo#%;FdH21/b'Ce>t2@D/F-OjgF:QHs-#6`KcmL9EIf)@_O[h"<D/uM=Z9=Q1CE+^;CsPU9f?i9J1L;E>Y$t$s>_kXlN@l!gSDsL'Bda%9ZoE(o*gDYW)C/UJp@K=KE0$2<aSV^^9C1.9.,j:^X"RZm<M4AIt:u,%QK;1L?lu=@ak:"O_D"U=O^-ubY,JPbc>i.W[>ef$s%ks%>L&<t]j]CQ7kb30bB>ij_,6g)mQ*&h7jHuSWT0^-5g>jS9:5p,Y!#qSlqc6)(9;^+f2>FpdQAG$/QW[[5>9k/;2?Jn'elo`0\N?7%om:c61-'1mS@5LYD(n_sWX5qB^q!b/aqoWd_5bDo-kPQt7=tI;`5;Ms+1c#/jR1.4.X5*$<m9ohCHXkhHT3IVFFcdX)QtZ"`tHgR%D;sfI`l;XZ#?$$/XE`*O,irjQYr0W2]L.l/QVj(0*$`MA71o#o_&@ZVdHL*bE6Y'O:bAb@/n(I.T^WADj/TQPK'%&8':4jDZH=b<%:2TD^_MlSh`%X/C5k'N5Pd?3/*hJno7J&]nb"HE_\3QDA_C$2`)4S$1D%56^)\NsF[+9:1]NEYST$f?bcpo^'0"\6,r./'bYED<D%V?bLmI4hrb:O"=M?^ZfB3jGNQX!9nD(rRXl)Smj\,Ba)e+cs_^21TConIF7dpKt8^WPI`bdMS&9N+ZrjCP9%Ni5kG37W4R&<0q":%--"9pK_%ct5_T5(dWLk]7Y$e0=X*oQIAYk%]oRkLO_=iZ218Jo.f9r"7PTc49a'o#[a7IE*\X_5FS(NBB'"CAjM=m2\i>*&D4%-B%3aJ<@)+I+*]//e\>c4LN1tYY2jJ)Gs&ZS/(l?W?KQg/ThB1JQ3?M+4n3DqZBpndZ`fqX6gq9e%^chn`JGJdE/VT>g-f"fV@?sN)R%=L[JJ:7_I3:1c2b<=@G#KIo=`6L$:HS?,4"<[VJg1=kAcp`-=loefi;cVVSRk2l"GeT$\4?*f-V3k\ChAha[8Yo^h3,#FhK8CD*&%-\/>pdB.#9HS$iD`Zu-P>&Y:Ren'cr>S:@\]2*178Z.Q.`_e[M<RQJo')&E2DN8:E<st\)[RY>p%W(;5[IkORQGHXfb;X<JCAGhQ%Cn0oVLt&Z9@BDrK?]eRC//_)Jp&nE.FHG$dE2+Zl"<_8]JN*"V!]@n89f4.*%Y8*)V(g4*5\f1bV$ot:E);\aQ(9'VO<Kq*PRD(h%`=TDtT>Lhi-G%_#_*NmBcE(8Z=fA2D"+ip:$=.oe`R[)sSrnq#/RDFl%ELF4(nN)/0WL(VQ)\a29Xc:_VL/P/"n[h\?%Li_)=%0g%qi+ul_/a6q;4uI(#f0ud!<bk5CaV#C&7AMR!H_>rb!!?54mtlE)h?Di*ua0qQVjR]E2a&smH',H>PuaE&a$dW:Ct:O\ZV1/b*>dJ%\6m-pYr/ejcY,p>/#j/\/Nj`8'+9Ak!W7ld<!in9G>s1UWCemHfk"VC=h:k2<D-YcO)>'L7Dn`MW,ro8L,858g5pcLYjoB'Q%LY(%<ung7cm##\7?AGt\0]9'bsUVA/L^[`\"c+,&tcZUXgm&8Xr5$@MqN>(%_&7qQo7Po!`N.%"Y*D.NHrpo(3&FOXj,fVGtL^UT[lLf%?ZdB9fATU14q2p?,#rX[\8K!]QP^*,'#u*DB;Yo1jdIc6&[Y_81?e6Ia[/?`m9&"#U=D(kj"M<$OV+C&4(2lVkQPZjj/@mbC)+T6%'hEO(3/0jkT@'lC#HX4Z/ga;-_gh'Q-,>2T/dsQr$P(bHau'8pc-V,NqXG6&]G5D;m]Ej_AkP^u?aKSO>0Snh'sH2>,VCl63#=)Z%V,?!JaSMF.5R9CND:hF3MC(>=cW16O&g"%"/&hQ/kp_d)3Y#Q+i&:j@;Uk#K$1s[JRsEa@JUr(HEi5n/_9d4\'Z&qKWm"9dYSHc=%mhY*FnsW]4Mml5]\R2OBeQSJZHZ`PNmt3l"%Y.8QK*;6JSHh3c7kg\PkZkKB8C1a-Pb9I*O8H8X165*?PiN9c:s/GfMoL7Ikg+9@%Su#1YS]H+ETtj(PZ)&.]>/5;J+nqNR/$La,Rh>h=,k!QbPfI126G\FS]\SR?G4S+98JT9M4>$P8&o5u*e?]^)a0C6^BGk;kC`B't%lTiVN&j4>ACB0ig.Fu0/ZP@kt]WcIr2/!o*Z)aY.B8lKMGR!gQ./36;Yi7u#!c;?IUCYVmW[BLi"-mkLWY@gPdcY7[5`)6U#mX](%)[-Hb=bp?Bg#1-Oa!T52Cahe\#@/PLa-eOp,?`E%%S3^'+n8!rd'?]D6?IW,D8gM^f[<+>j![=sU'\fi='7Go$W,l#B'Mig($u$`%d4F%0>3aA;UTHgU9QLiM`Q0mCS3Y3_^UgeZ%i6&;#XRqM'\#asRo-7c:Rfc\#Uq2fUD.dTdh`aR;%%@2oNMF4;6]2U_fr:(-"^)F%-0&QI)mO])3.;eVRpsblP22[._:GVqlSKQVH!(`9Q/Jb+X[oM:VIkD_kpjYV`0d+t+Rl3;-ghlINInQg<J'e)N#"#,XmcP?B5:R0%.,6KIGX>($9=E=uTPF_'$a1J\\6oi6f23>$XBoP;Qdsj\5uHNBU-IS(GS`Mqb[B8gB!+0hr!Ldt6C;<o]Rf0:/HR6.JAC(phcc5o%"3[t'o<"HgdB`A+46%oCb)[dC<X^DPQ/d/dDW#Y:O,2:lM!>SZMMpCh0r\AU(>\nh[NcCD7A_84%Z^`:6`#U>&;0*R9"+.b;5g@I%B]RGg1<`@N6'H)G8/AKHL!%Bc/<4akn75`%,cXF]c&T*Pbu/SX>*eXjgo.+n5rrgtfmA&2VM<P'X-9S%3`*X^'h>5Z@KDS<W>V0s%_N\tNL@u3iH^/gnC_^2+>4B;N'[Wd2fZ(fOdZto'Ga9EkX5GQ)Y:(1lE@sB.C5>\:MV2RG`$$oY_4qHOO[[_ZD3[fJV-I[a5fk:X%2:PQ#],JXph^hnSNb^)n^d=`L(;o?D<N+ZXnDf>K5l&9+7gckfB]YD41C'4AZQ'<LRA.8`<k4BRR8UO&SU:ViXHM?l2r3&A=fmn7%_/>*Q#,9C3>dg]`B$c+?^%.&9U[/Bea?G[S7/6YI;s<gqRMAK*(%JrC&td5FeH*arjOfCMZG[?%ZiW/.;ZiHa_r27#NC(%3O-kt"%S4-/[Tej`HB#dd,Xg%STFfVKR5pKA89J5YAKq3.R0?_8peM9Tua]ud%.Z7hKEG!S`U'9nZI#g:Z(HoC4QEFsG:.F7.50JC76fao^%NM9;qEE]Pu!/2U&`V-ffMR"Q?;s)3Ies`OqeLT#m:)*<mh?kAqE]6S%Yfd=1OENB`S,c64J^mS@>UK^Z((5UXSqWW18BW0fl7ta^%0%LuL1?.6!eVtPpk[BDq6RE?b=@Et,B:?oX\j/gC0oNYreVm4^7s*)LPQK.H1dW+_#\9_N1iGlpODP67=KO'1HKF':R0?^Z:b,Yj%%)H'U^G%urMDNd(5cn"DO@S;+b&COdQ=?8@ieXGC6nfKXI[b5*$>e"4XP@%NTEc92(6@1QqHMn-k-T0UO>&\)&Jkjb7Y=^pX`0S*%X\*3.`Z"45]hIsWirU:#=0:r/ohS&E,ZNW;X%rIfE$@)\>0[r>[)SGPpQ6Qs!5#F;?7oQZB8(p::2*5l\>bFYB9H/HNa/fn2@AWM%(P%&E(>F=i$3(>Z8`HsKWrPkSBm]Ls"#uH"Pi6))5A.6gQ@bWkW]G0(L<E.WT3PcuqoW'!'ri%cF7Z&XV2bbI19&JiSkYt4rMYV?%]S;;7mQVfFHHlSpD,a?'5VogDP!IAZqO+#fEa>]Z?S8G;""cSReXhQQ4iegLp-k.6AOhGB231i15=;)D[g)4]%=f7!Ggo1.8Mda@%a8ne:R`M4G0U0%XX'Ho8*QIZOd\W4XbbOM9JEgO-'^/p`bDb0):e$guQ=_EiWRg$-.<)<:i7tW(\8#aHn)UMIN[)1rb*8f,br(q!%b4q.Y"Ogj*6j;^M:tI=t=AA)iK+B206d*$VZ&4,YQF3R285]aGfm^;5T!l@\_fFWLB[0CrZYnM%2q"_tW7+Y.h1[1*X`^:Zl&7P4%-q@lcCS$G="j*0ne,?;ojL?j&Nt>=a\KQj[8ha<sWb]9X58ng>"CmKj1YTY`M!2[R[G^-.k(h-i]a4OkZ4B1"k%H-'[eiSlOV-TS%KEsAF'W+kM2L%WkIgK-`ea>;.FtP*BeR`"DjXpC'nj@9kX1FCj+2!PQ-/"91N8j50&b4*oh"mZWZb6+RYZLs,>%4q?Tq8$p(dPOY%:#r9>+gFZAe\Rg"d,=(!#r3!LrXf@Jl!UuOGVcp2iU)4MYM-:Yf+dMeb1$r+c@h(j0anqtpBoJkeq>QS<5I$cdg)F1k05+$07fu+%D1F\fbUoo#%GG!"1\&lr>pbr.9oj?MSf,VHoqRZ''Ls]cZoFaaL?t7KN7#HmmOiWY"XpAO4$^1q]6S176'V&BD:p\'>kE<J!Yg0"%Gd+3pBi_1s.+a%[k;[]']1U1PWqT[H/WrT%.72^m)U_!M8Yrf"h,S]KYd_/EXBPam;9*PX'^L.D93DLGgg!<s%D\-L)TT!]iErtM%jH.Jo!)W%\/6g>kI%9bA=j1pi4:H@$:BEJ%8e(s0d:jI)kNWie6#*D;8pU#M%3_7ZR>q?%oS;t2$#]KJGDAJl&'f4,eX9u!BmQT;%c-*5&IM<@_G/&sS\td[ph%D\.$EMs+$X(_!@Xg6=-$&"<98:$(Q)Q=7L`&'eYR>2H"7$q`qb&;cFHB1<5>+^6?BM/m-MS4U<YV!>%^<HG!hk#P8W+#e(X@kU=$akN0Cjt3cY>H6f">YfU3]8B@oA1(8=hmA1_Z82S(Ma:a.i5pui>e?,<@C[e'&G8hl=2?%5oj/KhFs&X%U7*[?J.$n/rOa]B>t:*?Mur3N26d/A@P92q%;=&q12R#^a34(G\b2JXQDn**#j]Ehi]56rL40QFmR;D'!pt9m3`_ri`=:ot%\Mi<%`'qlI$lKaj_Z@CY/Wc;@""W&/VhWaAXa@G<`SV31R7V'B5%5Yh8lVB\^]TLITb%Cr.TfNJ.2\DrG+e/a`IgOK@*N2Z26rSs??reI%#KK[d%X620?Z)2ZYC<qal-dS`@0?X4Km.u&gPaG`M^:cBo<Sej;Q)a+1iCAa>Y>uHJ;SYY"R+h&ql%tAO"eB7<B.n38$+ZTUPChM%//nQ0Hacj8R_:\o!8#YbFWq;U\&#4]e8nOn-Xg`L64po-#iJl<<a?*mU'%Wq03'%V#&tp:(,M7Q[\,)sbtj.1<XclO)Ikj#-305T%o`ih,C;[D*6Hd2YN><l"=Urb(L7m3o#i\Gi>Y+N>eWtG<mP946G0tsM?<?8!BQf^1OEs(YUsSF@/Mr609ljRQUT<4*OGc(:]O!Si%9PcW;pfsS>aL7Zk]n7i,ZM9WZbGGHOm/HIV2,jasSf,Xk9W*&Fpl0:m`4K\f@BB-gG.L(/aOLmN+S>uX&*XFr%.'9%WIZ?$*qn8)%7;42he-D)A!jGT0_]+rF8Jj?F\$m;GU0_:@>9!tkb%O?^@5ihN\m]V745R"ji/gI[A-aA`=r^U-61[l_dYX:TK46E'E\Bnd^5H*.%%V)ju>PnSI/R\0>"b;r@El+tS86(un^lcWg!/dknS>V2k;10olW^SNc*`#'CBH;N^PHZ1WU'B;,,2lfpMkd\YFMn!Y(H:d.cDE%@%bDI7WHjHn7fNl;$#(aUJ1+^Tl!RMcUf'n0@ZZ]/8c$_%iYiraT\.`gO"NnAs$SUO(Q\A"4QA_TEaP^a^O-6pCkq.lrr30Kp0TF7i%Oq5[i1$El0TWF3s[+*F4UiD*@gmCJA.*a+(F_RSb5_eQ@!%D#Z$Dd'*WTC^rA2A4]HqZpN_Xg"W2HussLTGbl()=6p_8fh0IrFBm%#,e%D2[[TOKNM9g4$2ZJFpGIp,$f"fHld8@R9N$l^_bj6,u.dI!9m"<Wru1[WVKE]?-_3Lo@q*<LdHLth6XWSR2;(.B`.psOfU?r%W/$(8,6G;h.KJP6Oqu#;+I.EN.(odZ"Ng%.hd`:?e!H>3eH]PhCgO-_6`?EqmYccAVKkYre%2>@a9K#I=$LX%o]pNIOq:"=_JA-V%YC?Tkm3L4a1a<1IV.KD/;R<MbDpK(LS8;VX7%i9?7Jb3%;\5Q.[un#'o'D,]MaP?>]^j-MA4;hm"sh!!jN,;NFjt;gWj!UFObI_-%?TL:#eg"uVT0X3&gLrIu;1N_Z?I"H-OtSuP1,fG^%Huo$-pg,E/+,d5/`XL_%jgri&#orH@SYRMd1NAbFh+]6&&6UR)24*d46^b2%TE\'!B%i6S;2T*I^9\iff?E@:(FtOj'u6j#eG&"gH2.EIncT^c>7jC^H@<(lCB9B;aiP;,"i.-W'joH82@^:;?T0Ra6oVS'$`IUS%eAIehEh0\/jK_fXAQr!>=1_K#Y9:'E8$O16&RXaJ/.<PPU82B^_E<`i0lh9/?"Od?VFY\Oe[CN?j*>Tg!sS'"jY+I)/WOu]"_OVa%P_I/+C^[JcOTB8ua1Q'U!'Acc8eUi7\"X8^OVMo3?4JH>C$6Om7rLQ[1]uDh=d`-,h@Md3oV?dE7M4uj#RSS"1pF;7-B%B_UD,U=%NR=em]OWa4=^Q0a4QqSAYIe#X)EL9'7qKh@"e*o=c-AK+34O'V__mj>*aH9c7%(EHX9*P!CGjY;G+d6Cac5W)U]\d\XpZI:2D)no%@O&sq?mq:?k\c10)m/CUR%D6I8H?I(n\Op!*Ml7_hVENW;j.u6-.$NXnN=((3#K0X-"VBG&:hDkbt9H7YdA/$;)8ugW4^H95R7C:%A`;^Jk<tsOgc8"T^^3#u8-_bnC^Yn4X#fM)f^4MVi^^s3FY(Xlf(tQ4n;^E*$rYZrg4j1/Aa"-99B-6E9(DjWakSY"TuYSBFjVrQ%i9GGg3m3LeYN33JRjX/0mr3Lf/ILWZND@pc5Nd<rGE.B<:F(H^RG):8GLOR2ZuJ$A*)UKqe'I&+gYY9d_b0+oK3F8+_/#Q7RXjQ'%:pXDTq0`(pAa"C6XngF,&'(o9+S[ngjP&-/L"bSI(-JVh_G/"$RqE:Zo_ISiT1d/Un`lcc?=/4h/K.lsqJ46<XV<UPMsI*h78I^j%\>*#3(<UJ_j[Vt093/mtQ>H;]VIGmb<Qha4K0DM94,>+LBtanf(QH.tK/2@E")%#s<Em\3;GB:,HLKW1.856hnT:1JZklf>7$qE;%,X/AZB7K!)QQZ.Oo6i9]6D&&>0!o7T>/FGq%PYarMTKlT7Vb/!i;Rm(`Yf8&^g1`Gq*J),^?sZI9CBSu1CPf^="i0fld`(TPUp;I%@a5CmH+leuKt21^3:=YiN(uJj-b*"e-Fg5+1$/r12KTZ.;KX=+NK2CIPr1Tlhe?5g@tO"b*H%MpY0[3^1I)H%2F/A@[B=N,X\J<\%'3AcF"NpbLKO9,hl16<:^4OG>Ofbb:q&Ei_@aiZ3aK<tA60SH45d;e<"kaQ29iUoF,8X\%XO^DEm#h6j?H(>][BQ#)?TJh=kt(]M%A$PmNfre`d:_Ru5m-Z.A&O=T9Xbm&7UNB>7!)s2=A[__>X'+1V7'"$U$"i/:."qr>'I&@6.B@q1#Ceq].>JLH-*CL@1'436^m1\(%aq7]*3`h'R:Ssgc^nD&\YLCS:l5-\]4V+2#l4%j$'>%G]#dH^^L0;GHZKN1.<2$f]M(`"V+L:i?QLYl(2<WfV*\X_2c1r@$(RO0]%V9;o>Y_p]N%[*4rV3pNF,gn:gpu52Acg8;8(;d;$V[;WC"@ENTjC"8&-1FKf!kYiX385/L7=8"mmOhZ]a1uEma@M:,_Sr^VeX=!5%_$,:C8/s0/b[Y%os0nX&O(@bp6rL8A"+X^]mZt;?o0k*Jk2lZB.?:q+Q7$D`k'+0^Lm>BV.a(s66HU]&JKRK.&qmbL=ec25[^:-V%VaT+8%SYdU;VEaH>(JY)AIr=(4,oE*b`W+Ub2"^%7fRE]YaG6/YmC5DgNB\>/2#5%0mhD1kRF?lhIRQU@'#In(aIf9e/YpFB&7\[%3d?X93QK63fk3SXd!4M'n8B3L1&n0jRQ16f'qCXm$o!mH!*%8kU.al'<+&aZ=>3k<rtpU^Ld5-6X_MueNNMjWHFQL+B2g3kJH&3q%Ah,csU"'cUV^r7n\hN75"p?jtC6S3q95`XprLTD?A[IsPdD5%&'e6/K$0DW_=9HQ?H_1H\"=nN2!+96sAdhdW5p9LgN["NV9!Fbt%-6O'4Y#=uaC>3R#W=[^H1,WKDhW'T#`JacWB#^ZRODuJqZ!31E(Q3)_)L+MrhlQfBa]:a,+MLW]gV(RdHt'7InK_tJWerJf`qNOp%^+`q4lp9*HKIlHM)L>pri'Lla>ZVZY<AQUP0ZteHOhX[G@[!Bt;"lskFSe[m^*$mj[p<k.*E092H]`lMZat4dB_,8+PG)LQdSg#R%EF\Zm@MQUQ/]U:8]gU4CEQ]^hlZ_i+jjuRS95V.VpRuYA,nVOhMu'pko%2lq[Zk=_5JQ"M8ar@mX84FcjLuAGO.W/2A4LjRC;^um%74T^@MaXY>::GMM/f?9C*t7;2iBB!,`QDda86_tRZ<3Z\&c2d"*>k`<Isal1=CK#r((dO`0f:uSH.:*8!jQ?,("eU)U!S`'.H\W2%8AbanAm-,b#mk!N?X/!/o,Z.i!SBhC^9dBHG_MI.^hpRemuS\b!h%l:UY4Q/eOR[p9!OgL-&h^gd6Z@16@ea':Ut%<1:[ReQ*%Au%Wkt&Gj,94dSK1Z3X,\bb,BH>fl-p,4CWCtl+>?]]MB/n<iOmA>1Fs@GqO>.iV:lWP'jN7mkZEDXpbcR("K#^nM9YR<[c]M%R*XLe%Gfk>@%3@,Tbo?0b(J,n5(_X#gI8mG)K;QIrOEni6&NH%X.g/,l=H%DZKP:EY6(4sYY00+RGqInT$c-^+:1U=7C1>h(:9n(@"j!WI%!*-`>d-:Et@e(;)R,c"h/PSl$h]+r-.j-p@(t3FZ9E@XeMrj4XL;2Y/MMG.Hs%*p_kW<ImHA="a`pPHSK;F?C"B%')qn^iKRCX/"%Z1V;k3A:o872lW%_4W)K$:ijJLlor&OU<-^'8KFZ(gFS5?:d$"dW3Ne0+p\D3qC_kk/\a7S]%:XBg&Bs@`_'(G-0"8^rSg#&uYk2%je;3tDfic%U`p&Sc(oul$CBTg-pS!/6\T>dc*\Mspn%!^2hIDI6ba<9Pa>4T/Pf`h4L+uIOm<C\dV-7O%N#0Ni9GU"'WOtBBN$8-%!_=."Kb\jB]J-d'Er)MSG=ainnRgV?<U6af(c<uPB)`JXkV5j:$KpLY]qsQf>a5WT]W8$h5jK*PJDd<"",;m;XRtjRcGK%coOn`M%[hY"N7gj4O%;8a'aLiaado+-i-u`K=@%46t%W>fafbF\QU3<5bC^[J7#aI/VUP"^<[4[H*;:G[bbNN?G#S39RAhKO<EN'jt3s9:l%H9%H9Xo]-&3`8HJ4_V;ZdGCbjT_l+%IWQT5Zi\bBOb$p@$;@5V;Z5s4OaWKL0@jja_.jgO!(jd,ZpbZ"Jm]7)UW+k3TU#p]5b;>j%#em!+CZF#D)de,[,lm)4&6`*7^o7sJ_*`W9#MpE6QdNWm&KWR.c'5/q,@*/3DCc\^F6&KBP8nlr"NZf6V*ulZ'r;,XXHSW<[_5/U%aG!&][8&g1:@R2(>d&FZ@0t>o)5Jt7<uKR8^hdN2$n8?)Ya/;u6GR$l^UcC<.I*e[@M%l`qpcC>!U0&88.9JED[ak-?iqp@Yrk@J%d3bqD5R+TE8#Kk*_/?BAg$2t-Z9@VFAEjts9.uLI?nm`J>t+F,c?g-2$RBHlXNDkDAKYuI=73ji3EogNb&lTYl@YaVcp8R&p,Fo@%ZuAVWRVRu[f4nA'b/F_jh/.\;g'^_n]WL1FU'K"eE>rEBKFlAG&mD;)N2SsPS\uM:brNhLP*<SI[qa(#WaVDiqJ$7*7ekZ,ogV>C%0+Sg?#!HUaauE&Ch)+As=CDgCX7_!6&gPb>"?OCm!)+Q[%OThO6Q&XYaE%4q\,O9VN\L:@*Y(Qai\l?XSZcXYj2cr9A-@h5b0uU)%$c<r4'<<H^6]W\?.M\Z4=Su+53g!t7#QttL;"[*S]a8**Un_:t8K6]+3?EBT`6tQmpFkCm0[e&s>ptS"+'JlDUIVWPL]^B"XQ)J[%3Oqs^NF$F9XB7>R!NSgs/b^31_(qgC.eNdne4'\gkcP\>*I%c]!bfKOG&a#Qa0&rJ)QjB(^(`+eZ]87;J-4%K"qCiEOiUG[+O*ha%!OLd]*5Irn!m;XeW&,@:fOn/)ESSITU4eiPnXUH\.l63-__#ln+]>,+?kt1'@("Nf".QRd[R+J9eOp=o%@"&HBc568$3/uTI^"fp%/4C1OVOMj]&07d>EEAj"-/(h^A;@nE+q*=2RR;uCi_"GE2\iQtes9H1;UW.1!Nb"+[n@YCX@GA&Z7c?Z*iO&n"FtYl=J^,FEFZZu%:i:h)qR?9?X4>i6'[/L14XO;sRZ'mR5FM79g2`sD;8Wgk6@>nX@#:WnVl=BP?o&('F.Fu$_r\;27E]9oMkeZ^<ZtYGc+<C9i^#)F%<+iJlif'R\"4r2%+bLR=ErgN%.q8V*C>t*)LW9OrUG@h9iN<:8N3qPiP+!nD$pZ[J"V-`m=keX!Qt9GP^/Q]K:,'JX"1V.[%=s]0%pdW&5ZrIkCVJb7Bkl@#[Mt-]JX-jtt\K##3%3`8dJqqN"1RH=M%aQWI[UcY2XrCI96B:@((B&gnb=n,8dMg#kilj;_bSr?Q'@r:O%]E<mBq4k'[Ah@5j8^F)7o6uXk\eT0f/6kfNR<p\@qH[m(<1\laid%67<;`aTYhE?->j(E%Y"Zg8lJYO&[u'6[i9'=g+R<FAEpU+i%GdtCC[UstnU9+%f+-jui1=])djFJ:&8-4plaorFO&PO"(\4uRkF;rntauoSS>-huje$_N"^a1rK\\;/[K\g`JisZU:#cpMq1pJ`<%BC]a"5q%Re<QWb5gO]O=i,FKh\OZc3B!<)X'"p;nV!W+r=Ju?bQeBUnWjSs%)>6PA9&lX6>[2u<bDTl2k0253!uF1Fg+l81/QMr`%GgN0ZEo]T!eVaHD7ul!MW`=,1)H_R,.Ue`5o6&Ta\Aq)E'<Fqr?d3Ro2874&;!JC$X(Jie0@Ta'$uLD1Y&61CKjK[T4&r-7]IdE>%j8"t5?3*]dcOZu%\9&VukgOd*]*8e4QU]R8L$V`:;7Y>=p;"Q[J7]JkC>qKflb)UA\abQmk2oF&;^2GV#Gi086E`6V?r!a7=9i$.%$t*-7@'<Yk#W2Dc+R8e-ZmF=][&$lJ*bWHeTjg#e`5$$mpP1?2$D^RSmg1Ol)*mkq!U)j4)aU7dnGfcfVJD/:];"M;!Pa7)b\TB(%!K,9`Kpdi:MDF)k$=b%0FK[kmcEgkL&Wms!c:k-k5&6efh/BL">pW"\TMR$^Ka+scDF26I>p4mJ@O(X*.=,d*)i[ke+sJml',o1+%L:=SM$>urNe0QN2LjR[1ftp6]e!HMJ,V;>775X,F\e)qTRh=!Z14Us6XV.#ST1KAF9s4YYG@5F:!ZK52,bVXXKIK;$Bq]3C/F8@0%hZLIFKSFf*/R:p&L8P/J&M3HJ#fras8`&r1&RKDdJmI3E]i[+SoX`hk#uArqj6OZHCUmr#cKca?Z4,uXj^5j8Vkr(ZYVn6UiRDAB%7o(<&nRiU<k!7B.5fN4R0L\X?#^IHc?t%,Q7-k*Z<EF;#E,h*E]k9abH`XWopA1g6-U!Ii0$K_7rpe+JMbjXaRgZ4Z->e'/Ih^4k%dd*/JQAH(sYi.%]R[C-"/<f$5G`(:C)Y6R32%cf5'T-M^3LD"5\apnsh0@\qiZ7Q+h6M^:/06u/im/CkCL.#ErRi2ebu?frambnq%W$27h&458ubNK0,06<#ljDK=$@Vt)A8Wo#L>W!h#s$G`OcN'9EMChE,oaH)TI+Jp^]DcSsVJ)7u%d\bk9>M"/E(fp\-8VlF64el)%8*$!`<*LCtM#XC:D.1&T;s@hP]EZb+-?df1;Hk%jqgqWN\3*Gm;nW"sP,=$TRpRFIC+`1T,I4*fR-0F8F]"HdJ4uk+T_CT.)r&#;%Q1quT?Qnbte>Xs]$aJd81]dSlXS_Z+fjl+Ae+aTciDo5&7*8;[!h6YE[nad>`**Jg6(THZ,$:(r[gI\`A=&Or66WRe/QuODEXSJ5%GD9r[X.G)Q[8\\_3fa2J+D1iIda+sM+?<Q`+saR^dD!+[$nof(+mY9q&+0,,H*1<'gj`IQU#K6$+l)Y'k9+3(6Fkr79rdW@c>6Db%eGMCe(YcpF`Ts9NE^g^l&58*3+;8YHrmRFj")mb5go8R@$!_)IjBTm7VRrQbX#pDQ@Si57EsV_?dC\D=FZaUQW>8-*MC3RR/VWb+%.>%APB5_)*/g\PY=!ZMj\L3!>7l@0-FG)Cm*!gYKQ]-IMI6_H(nm2PPUUI:_oUfqR6\I+3(96>GX!N;qH`83R:gBFXJP\L<:G3"R%(bD:%:;0eaL;:5'SraCPlq)eVYe50j*lO+)?1ZsT"V:@`o<ACY+-CD#EYG%=pEl;^]#&->SrQ?rioKV@I<:$\]QYT@[%OiiD%@8o%j#Qs4I0">0*7(V)P=H$)HJ"BC+p1Q[It`#-?R=1\G"+,`[I&\!ZO$n5,m&taVf=@3McDiHbAnS^q`p7VT;-q;3#6jD'uri)$5#K$%]#(R@A>lh&Bgr0p/(Pmt'(J+\9ScMoM6JPASn"a:B-[0/.=,bT^F7F89`F'=Gd3WDL?X<oG0kQrEm(JZ=rotVp0,r93#3k5Z#'MB%KlpR=4eV5B`tD4RII1"Dc8[AM2[?X'3jtA(RE\!>-(t!qbT<JjCth;JYe7EIUPLi]&S1*M!KddH[KI>@m+>bq8).[mVqI1p_ZEZZ%Haja*,Q%upEXSJ5G=F?@EA#?(LjLH`k1>-/pae):8)-NKcd>5098`4;oXtbiL;ao\J\3fR!DV)h>fZMf+qDE_U'cEr&e*?lk9n>F%;`"U&+jfgE,X[L4_1im%?Gub/MNCtdH:\O=#sA#5_S=;>>0Vu$#Qd#%`n)Y014r_9>Mo7l#P-;@&UX!]]eqYgX+Cc/@8X\APH;JH%\(HnV#nI_]C$<Y3BfI:G3g90WZpnu_/?VmYKP*=p6RD"_oDDU5_,V7?aBsuJ_p?G[n]eq`88_qeJHT!kdhS"$]\X]]H#tacJK8_5%3ZKP$Wl3ogE<V4R64d^WKZ6p:NC!b<HXQD]'2bcC%5pW-<S%q)K3SmoVD2C(V0fi_]!eCtcp\Li?k/X(s!c_2=:ZU%"2R+k$GM_&%/86ZL%!#9ulK()"d"#rCPR1jC<@g;fKi_US4LbW@&Aq_iVcjS6MGog8[/q(\1\!9T:p(Ui5P+C(%d4G*fO?O%,S#sPS302&@tAMn%A98Mke7>7cIm3o]'LUeI\sU?L8RA@WkS\Rr:A))T:JK3V7qfmT2:6Z=j16:"g^A/uGXWG1^bI;ENHF:GdE3[0bTbq`MT\E,_N.h+%H0]fPr6\@a_PJ<;.U(UL,pmji/kjD#l+O>Z.m,2u>0qQb6?70VU[t%Z/PBV8_EHl3*!%&lPeeFK@feV6@rDdZ0F$*pi9j(jBV5jp%6>'btrk%"[o2.^N!j"@*WIi!H+:,?.a"WoGnki6pV<AA"UkriaSQ2MZ)i:fH>4W?#5;$o>];\dDQ&L?nd>K=^*aHl!]F,3o*L#q:%2NGWC9QE0M!do*BL#p8bH.M1j;n-=WB*/Y8>Qns6g*kHSHn8\e!'X%r0/rMoB=3HWhK&S!>HZ414Ao;VM"&amCi+O5G%?kM;t-EX%/]SDuUWCJK@U2Yc-a4oH#bDciSl)%p,[O+@@Di[Mk;3#)-d63mdGj8`F]]jMg$o0<$)i%M6c8G>TQ:RCdc9hk\jC&lKs^>qE]q[-%AIio_Y@FrcWa[p.Cf(gW>=7=C;hS(.Y6F7]*:KVq`YV=?hVS"^)d+ZsRhFjM'tDX+<HQA>o2%e]q@XaKMNVVZ-N9g]lb)`[o/C9\%h??'&Gc-<E1rd!I5LrUmmoZ<I%*D^"YBrp3@#1BDdP.=rWX&``ST-ca!0rnhMqF8ld!6Tn,D.b/N7'U"Cu?t,S/-MYX7IY!puqj)%3Mtt-1'SQ6H'FBZ:DHT$aB"">McFk)Ocg,[j$[p7LUjJ=MP$L@ZZL42$8Z'l#"s]MLglKKX+2Qn_B`t\=,,]r-m=tE'FA;#_%0h8%Q]3,YK1Rf+T5K9-P/D+Gb[FMqMfjqq?gPL9M^V(J%AeG0]1H@;FYhuA7@k&AAZI?P;NhKB-1Y5t"-/NX98)>RO+O3pD:F?0XB.';%&?ih.-_M_@R.-PcH.`tVHg<Qf?85WHQ$r1,$Fc']Q]<5Kr8a%ES"Yqi<E:R(?OOFSEN]AebJ6Q42cb[RA9PAYi(hCYLY5l`<gup;%@U:rkjHQPp(g%BXcYtjM1nN\-%4a+c1>Op5#fdQW`j+rh/E%4.W(<gt"u(hoLq19RKO_)(`1h;MQC%]54deiH;C*4*$6r^U9A%5u%WK%n82Wj&i6>jd5nT.@a^7ek+d8YuK4Eo'\2\E@\<GjbCq,ue_AgB(AGd7MKg!:)I.m\m2oiPgD!Mfm-`^a=aTG;<$<VW"j4]'ZC%5Yd1@Y9;"LnA&/.`8GZ!p<+OMYaPtbl8Y0JC2*H.eb/4(E$4hS3\6V<YcT4uD^hCh-DndpncdQ40h!i`cV"ob&bG"N'"TccSlGn"%TU'UgQD-)dnJ-)l&VYYSGNL+U2Rn>Y"JY\5lSG8^'WYH=p^ru.(laKSa>B]>[AD8mk\%la<H_ZXlle"-P2PoBmOiin@_7;Z2GmIR%<?..<:Xi'[]k$Z%,&1*BNrKBDR-/U8F[%gfWXCIch%fo@Pkg>@%p)k@)g.fU*`8YHbH;@E'lWVA!gb4bomrLtck9nd,d>0a=!H"!%ft:H+;I1n[60"D)+6`Or3XTI*BDF)A28`92OgNOL+etF)&4<q5PRgD'cTXY!@0o,qGbM(':;URV0,:(^h4_\6>\\Ig;2Yb2C.#LN%@sVuEh/YFqfCUQ1)4jKVCIl2>rp.3"k$eJDNt;j@Q>nWfdD3u\Rc&CM#hF-s^k/L@kI!00':-U790V3mGYl??o4m-pKic\;)5k<.%]`IEnF.^AAYWdmgVOA\OPLG2"M7P#.be\A+,?6K/Bjk"+h=\8oIg-Tp#3:=i1=0Z4JIXdr<iC#N4KBN*\77:eE%s^<cBaB)eIeL6%dW+fn-7]lY\>&(R:'fooQr_MEIi)=_:"C+,<0<d*'aATk,mN/7=pX"`GTn6dj"=Zf,#,Ks\<\RqF2YqCXsKdW#?opKW"dJc_tTLW%;E48.[CEir7hCWb57d1JJ-PV08"_#?QAN/9Q6:bS8gu4j<<cfV?s'\]AnN$NN'<___R0rL0g1Yq"h0._?s'#a^q7NA,qR&C$r=3m%^jNFFDLTsB.utj@-ik@I3m@2J90e'2;C2B%GY'GuEme(BYn*_jW2Q,"8ml6OiaK9+&g@n$D6SV6.c]/-Y)Z?HCEHdhK!Fr&X+Vh!%/quiY@8NM7,mQ'P%1H:1dq)Z7Qmmr[F4It@7Q.MHH?9cbL'4kp)O:N/ED#/-ohlTd.l7HE0Gh,)[;058(i/Y^a(tmao^C4CI:*%`%Xr`ER.dCF4,*c-l&qR&Rs!$iiis6Am!)(-q'%l(/,?8?RDBrDg'i8r$4qkb1Zmj9opIt@@F,FUaR"($7.$"5o]#[6c"S6jE1`,:d%;oI3j,5io)_dcb2QY\'qK$[FE31?3Y(6!B(odc#gkeX%qm%K>0@^5"IjGI[BFQ&J:k)&D-oT[A\e/@,,&?g_E\gC)2i(sP+1R4sk%BT[(KJh==OT3TKJ9=-i(EZ\h<hq@qdd,FX1fL#Xg;<;5A3#CK6flI-_I?;W#A6?0,;-JU1*Xn6AUI:@p+7h$h$mtr.JUR>(PjepA%j(A<$Cp:`Vs1qRWoA<Kt2cF+L5<h1IX$.=[j\k57m[#!3]sfLr<3Gai:gq+D$p^F"<E#Z:JG7g3\#a3n#"&#1gflBij-'VH3f=Um%:H@f:N/%#&gI618??MhFfR(R_,.<.Q.c.LZI'ZYG*n,8"&0)hIBEIXkR-;'g6Qc=8N>fKD1pl4/*qa'V%<I1kcWpqR)!m?T%E5`m%q7HOIPKYi%3hjnTV6aR\*&"ci$s7Ih5Bgq7F)4f(.9@U@l&\*G_?+Cars40U<d2[S0ET*U/P#P;k!aR.+0]Q+Q5gAD"k7@%=s+Jr%2hZZaNpa/7>\\%Is1`?m9]i;h`hUA_ObB9eFt4=Z7^i6X!#]81dQjL\8RV(-f0.k@Ekhb,,4?4G$t\,7"h5NTHX_lT[QF\$AIWl5%hXCq_^tq>o&W\XdnR1.*)^6ELM'S`"0`Sd*mOoS(WQ^&f'U%S'C][iOK&r[WYB[3?21@RA?>Ld*%c,o,@gQPqCB:e?R(FCEQ\/[a%)H]QR8Br90\:kgF6mBG'5f8_>3Kt4Rja^Kn&sl&F$<_o:B`_NLJfXl&7O2.$K(ttXeoWUZ,iG&c)NDQsTaF>@9D]\oqD8ECIK,e5%R1*)<T_oo^J(PscE6f8Uh;"=9?7f;aQ,UdHQ<1$=;+.O4/AZ"WWkOci[?%-.Op^1f$l9q#DX_1qKr<eDR[P'$<m!g^"fi82P:En$%Z.$Tr0sU.&0-3n\fs5-,2,pd3YTmb17*VGJ;(,>0aG7cY?>lPW0-sp>".a<:[^:I3;[O+7[4hre!I(U9;!9=Eh,-K^Ah3I(aV#*2%UYem837M'MTJ3ZnQ:<hH*6+\o@f6Bg7#chEZj@ERpR2X#.;8u:pu/!piI1unGj3@'hHaY[nZoaK\?p\?ai>\BXV*Ae!gf4lbaTb\%;Vaai%,qnXE:Wqk4ta+9LhU(%>ai="GR0X\c97L8JP.g0Eh?GEQWTls&=-?=RoiUQf*_#PBmJ+.&iR?V'2+F9e%hCFOXQc7+,SF6%p5pbqBaKRoR?hgUTBQ=crA,J0Tmrpc*;X=%a.[UPI3]"l[?!`?<;T4N:3AL-8u(sCYjDD)U<rpI;<WL973Thp<,rH[OX(Za$Uc/[%7hB2I,XE42-4.gW(dSe!>:E5YNimSgKHodL"\=6S%$1T&WKK34$Ef.5Jq2Y[_7f\s"<je\#7/0ZM>`#/iDki'$,Ubb$);$%JoCqF%Ui\8ch-eRJbh(A8P&#&V3=&*OlNh+kG7k#O4/ka#SjEf#Ig=F1*j]lD070G4jUk"*KWPtrA2!^+$@DBbe5(Mo.'-NZnIQ>U`$)pN%WJD[%.4E$o:n9JhZNB9*<[^IP]XB*uM8ed-nT\1f*?5,Y;K,7fU5S#sgeH:A]qR(sH`Er0HlDjE45?=MYsmb@SehWm#i:nI8;Qhg%>!+iI`(m*!0.S,9C"YpLHRpE0ZE\Y_9^J#LHlrc4>P*eA$Uju/HGO5]M3)VE*E(J>94<UQ;28.7E,gmV:R.XCqQT`G,U0p<QG5_u%.iG?8]n*+p:eUR(@=0.4,H:2s$r1/i(I@KA9Io9&mT=j!6W@7-66A>0`c[YeVrK)d'(p<7A=;CnHP\DG`(06h\DHLe^--Vq)YH_g%TBmbPB$bhYFDZ.Y><M5YhWccIR>m4!Vl-_Zdmg6e9kUd?cu9<jP=gem42X7+V>f42."_@r62t';S*q$ei3J6R=N6=H_m=V0.U%\'%H<E]O&Y.rl]Tg^2;Q;[,+H]T-/LWY5l9Y`F'+.lgs2pjkB%:p!20?iLKW?dkB<T;p+'e?[bk)7ALkXj+b;Hb5=ILg$&/S'Qn97$a%ag5J+ikp$-$1UM%PnRROjJg<N35nZBXr=(S+etJg3Dr]M9m.GfCq20q^f.ap6?+[F9_'G@%SqU7U,e3$]QOLg*d\rh#*U_mU+"!G%^uZ]+fRYYm#9sl@Ip.oCV8UoZHQim`XWk/)O*5NAUl228`Ygd;f2b:[:bU]YBOb?mDg""j_JN++qZh=GeO2A(27'Ng@'CLiC^V,j%.^FK/JM#)[_rDrR)9So+r9+ioXmPZt4]7o./>gQ^isQ8Z"fFrVQZu@E45BP%i6)#,&sbpiib^kGrAdEIpEgj7TO`Vr7,YskUOEW)%h>pg+k8BX8<rO7`fT^(F\Fp)U*^0M%5'8V:ld(R2C6n_A*`VEiQYJ$te9\:+As7_fZ6)`)>4(^R<GB1]4n4h&)N@oTCLs!+luoMZ%aVH+ic=Z[pL"p!7n:RLN.^c5K_58,/V(T!#j8a`A[$\S,Ml?=r[QeVVeXq22:0eR?VBV<Vg7LOU:'LLMCqO;.Zmnl?D7LC(&T5/h%_e%$Ab3u/*b*D.>*ku$=$lAI$Nq'<nDtTp?W!hOOQ+nEAXk#^.9n3*><e%<hDk0MD_[eG2[Nfo;dFUY\K1bICg6*@D[/!R5<a4*e%7Mdb<`d9T=KCr9GnTRqGl9\[$"jXn.Ib8-3s"qD$W=+1',+<C-^)g_YjgTQdgW4@"cn*>)Y?&%Hf@Y"cg1XNn`S#(D48"0R3oX'[%8(3kDs"r_"YfNo8"VD[QV^qD3`ickJW=Chl-:Z;/cup18FO1>u"D7Ab)cd>!)#hYVV^b<i:pLQM>Q$KMQC&+K2N<Lpj+%*kU4'15%"2h&Q)pg;.J',M_XFE+3@C$HH)?/gIs&,qAP_UB=*T5b/qusP73*`[!FtkNHO2A/-LP7f?!2-m'=^MF[2P>Br*#tG&ZXg-p@[`<A%90P4uQ&>:t,0u.D3T@%6N&P3l&e``23+sB\Ws%q5VO.5tn]7mUIe,td;\.*>:G<9\ll,bFAd\93'LJ'-7PPaBW^s^cTSER]d8?Ni%,Vk%a%U4Gr9,IWK%Un.P#V20YgPCPf>3Ojikhh+[$=\XY8'`DhR,nje)C>_XXhtS;RIIfSU@\VkK3?S^4o4m;s7;-mW?l"J.RUlX%$L\HZ;9#?_U%t<HO547u;5+WZfieL4V$?aIiirZ:p3E#'#>i\g#2G*Wfm+K'pZ-FK0a3G(#*sf>.4U$#47%Pa`t>[Sq:r$d(gC>E%5ELEZ^EG!REnXcRl(58^6sQr;644&ui?&5_VT2FiScO!Grk/UGAL[c+(.U0WQ_;OG2FGqO'\0K@qBsN)B!,8"=,d1Z?_+[0gI9?A%%TBQl?s8`cO$)U"-JdEiDDnir'SICAW95/I1qTZf(&<5W4r=.sROP*_AscoIl'mC:lkd14cT;*UWpNK"^Y\at:B/BfAnGp>X1p/l%[Ee_%be3LDbq<OaB5\m:>#dEL9m#Tlk8W($gmlr_M!Ma#c4ik2at@8272Qg>5>;\ijA2uB)NQDV.Nk')EVu2$\U62SHO@NrJV;C)%$EJ_tgR0`PF8R;cAYui9A.RV5C\Vgt=cn/6]71#j7l2Wu_r<ONYmotb;C;W(3/ZBH%,^nh$b7)(]/3Y8r!f*_&^=R(T&k,JlcpTW%TQ1D#X\>1/f@11["cJ+i.=.1^@3^E-F5G-Z5n.Y-LYFi;,,gnC?3<7E;g'M&ToHt0[$,*78']CgSU%=WKm2Z<g3ChTfpRg<>aGiO%bLa3uFZ+?8Ma'.,@(S<T1;UtZ+/RRij.lA#]UAfU.@c,_d,B;!.,+2E"T`PS@OKdX>-7==Ft.jgWmkCUg!e+8>G]oWc^<$tLma7R%gXH%9[qq8APrcP'2FU:8W77dGL4f;fl8u1(I0qaG?e'<XcYSK<3XC.#h;EWP'1D=Hhi"r<iUMZCFTcdMLS^;f^W:f0MlBR+6$Tl=%Yb05?q06`*YabZJK;#%O0W&nTf?M=af137*frT9Fpb4#n9lEqKn/KpF61t'@lQ^a[D)Z3:S=^SClYfRYkGid7JpF:tYFi.9kGq0$%P>8LqQfN.eg9,V)Gb_M;//?HYn[)K!iKnHUTF,o,Br)9JjP0\Yjt)M3^<i.\(Iqi'k#\J$2t4d-bU.@NAYAXu$BY+(U\WGNm>G$N%j[3-L,T`8W1]R9Le`#[R/?AI;psh[q>$s"1XU8k:Dg*pfrhWXkYA^i3<gBFQj6.,jiZB1?hs&a\WI"I#Y=bk/,X#2N:&h6C^-l1Y%[q".B4Y#AGBa=Y1IjoO^hs/Ol<&Fi"!/WsnlnJ(OOPG.M6osNMl]$5GPi_Sg)Gfhs1t$_fU?.3>J&p0@M5sF[YA]]H=u?cJpY<mj%Rh#;S?`B)I2Z5:-0eVqZX5.K;r-(0S^IO';m0]k0GeF4F85#!CqRM-er"#7=rteFEqtK"JK5]fMnhFh0hOa^bkJ`1-EJTW-7,PM^%^/j,t?IPDsYN:8#$(JM4YSGXP[B@:%Sia,iQGjgBG?9Je+)S^SB)O+-;>b>c7anT[Q"'Jkbs,oCo?Vo528DmD)NBD]4>o5C&X9?2%4%HD3d#leYWr&:c!Ok:u]sG^[l`%IH:)a0*lQ7aYs7R-jWh%9g841;?_]<b='@5G>ObUHC`j.=oe7phl>LgkW*1jpF?$$fF<>8Gd%)$8JO5&S$`4#ki[e#ur_-.At5@.UMVXB#6c<t.@\oiC7\;/&1+[;NmCACD-\ictEd5qEcL9Did*X0j%/;`5uIiOI9a_o^?1R[Ais%C8jEq6cXPW/LJXmE/37r.p<M43!)HLe%M6M=a>JinAE9@W3kGL_mZ%o:8h0hp;TnA/QgJCo<#gs57VsRe6:^`YO?&S^H)hMW)X<"%87jD='\W4A.*mmV:A1O7&-f5'VJkikXjX1\61?0F79<tXgI-g[D#<V[X!YBJCRtROc$!9UHFm=2ZgdStN;</UXi1uKc-RH0D+,!E%XKU$oC,#3[20b@tS#,K:V,\8NZ"MgW0J6aM#W'2k.S[-[;eZ:rgNjN0/^2?d=peJEWD`bsdQ[9lW!;sVXJW,7WnAKEs)bPNcYoAs%j'1oQ_eF9`2$urAO]]a&qVLpIXX8A/W4(EaQ1/QJFXYr#Sokg)W:j8qAih\?\s@2R4)/su[\Up.HKQjfVkDHJ'%8R/X'$b:[0't3%nA?&&I&h4rd;B$r7&.IH8[!GVj&39cPE9N+[4B'6l*!.Zh0,pJBH@'Nh6-=7nae#7TNQR2G)<5^6n]P7SdGP8dW]Fm_[VYl2%*&3%`4+Na%S2X,aV32^bhsJs/[b;Lg9[V?=2Vu'hh7ltA=Z,iDZ-Knh1Z/0:Q[p'[S"d5E0#.[WDg^$A%;'^;l.L#jA6nB9P<2I)]$4V%%6-9*Vg\)9r>X$9gqB7NrQ2r`&jj#W:Y#.79<Di:6:n+u4Cq@T/eU'PYXklZb)!qm[IU:@M1DP(6ksGF.se5/21a#HSa/MUAmYPe%mGophJt4h!Wj\Ak/gg"!.Q!":g1*VblPGi_>Pf/D9%qnH,_6sUf.(p)bY`EeG@A+3FRc-RPeN3r]\!)@Xo67W&#@B`nlKoiqu9>&%.JN,Rec0I#[G!e+(]NKsqUDHbC'((Dd#)8>BlS_5>sA.GAZ+9cU:R&,Q?jBgDuDlJD6Db[Egn%9:PV0LT.g>3Cu/-UT&3UHB`+o'%A.sYco\&`*@c]E!,#L<!(N]lPdUT-91VY4Uor6>bY!.&fkh4s(UD*D_n=g>;#7/d?Xig5Sb.j5<1Oik/H;nJuU#.L!1=J`=G_J?h%Nhg9rNmIPCMLF$%/0Qg7!Dc%!g"YTY?hD7KoHI'=8pH%#8oCSVTZFR%,+GJVaP<$V.j<q)EQ3>Da*=TJ&Jl80il&f$Wumr.C&9YC%CVhp&iWUQj%@Ko>:t)0NF75)7[MPpjKT1?:M=m5G;64V19EgnSUPcHNLF_4g#[+1/'%S$$9ppF1dq+H;\$.mb30/HgU2L,arb4J1%W4P[(-<-gbfQP^9!JYTg;poK^IZn!Dhqsl`J<BRK@gtA4<FOkRC4ftc'3g'_=7[9s9Xf9mgg2O9>1&M2mNJ=>2]h_Y^Dg=oDCS&p%c0Xu&o2.fA-gVJ`R#p+9q==&^GcXoGc]-hs$d>Wm7DIL;+-kE(45;q*mD7)_g/UsF2t3Hr!L8%-'<m7ZXqDo[-E"$:g7;F+RIs*-%+a1*1k29mb]l/Tto1eiP"+IE';bsFhS@We89^R6?[FNN6M`4;]!bfJApC21@)[l&/LD8&EfA0&J77*XEkZ2UDE-;UHONu:^lnl3m%$^9s([VYcWgLfe'=^.:ZB7SQ`JNd]gs2f/e5\+RTDZ]W1QS3sYJY#21Mf0jc/YT5"A8"Nt/C^b:e#='"m?0K^F1(u?;NEO.7<7$N%rhPY*,;j<8I]HII[&^POUIrcs"5D5:l<:6=k:sLNkSUPs*OONIX9DgS2rGoAq^/[e4Vo"g'EK]bAfKFm2b4.VNRn+:g4I5ERbZ2Z%6jY^89-KGiGalGn;*;Ei)iYi3YFb.\8mZ$)WEFTE-_;]j2Ga"MJf&CS!Nehs=N@KRG,\MVp;R2QQS<WpY,ZVd&kV)ofW'r!]W(+\%RPQS`+,_u5!5Wm93o30>@$.r,)&PKYL-\S!E#\Obo@.M3HSe%1lj[Kj*mIkdbXJ^$d;8eaBseWJ0doimQV34U*GJ*Yg.F:t$6dK_%7Z,4B1fC]GV@ds.Ib-Z8k?9XY@r7[:hi2pp\&2hFY=ERRor(#g_a=C'ee3/2%<<ggWejI8eX)0nGT"s9eI@UHgW<EImGP:L-hgV>%Z+#VbE"K__m6^]X!YTu?!DD(Dg-Gg1*TlL$9Or(X<d#1Ls%fs40RDqTe=b0g'c,lP$5(hZ,sp[RC<,d.s3W3O^AN0@aX=VF>\f0`%2O[DJb^pb?'/l!l4F\[Boa)$A5#7Ib5V$XEB)U6EpK.;B@ImV@DG^rJd"C6)2jJ\p4=!F4`71fR]`7UIaZqZFKsO,>ZMKq?2*b)g%cJHg9>ok$Dc"@!5Gg6hBdqhTr>a/V%D,=m9/Uc#`K^Ja&j.@S?b&>qr]N4-\EDJf*(X468=Z2M3I\=aOgOH62j(dn(259&4jfdqM%-q&!u>'2uAMssnm^$**ern`'Mp.mtJZap]\Qb(^i5KY\tKnE$/d5bmq&\hn7#aZ]J!a%Z;mHlprAefM"H_"LuJ(aFo(QV"]3.I$^%?[_>*pc$ImG-\&n5FctJUE>foeK:?Ac/7s7qsMDeEb4jOEkUK2Wm*2h>-DGBqX3oV^,UP0ac4QK]RLli4hPdT(1,nVVdI1HA+O&c%B4D;S=.<]FjZlb%bL\O,]K'#]4YbYoqZ%tPq/38TrE@T-*8Rl;XH/ihq-VkcqbgLerEkiGLMA9%CUI3/+4h<tLYp_Wh=c`4qsC\n%h7,0l[T[l6b3$tBooJM%p#RQDDV_Je;=qtoq,2\0'ZMY-EQ_o$.d1Gf&hqneW8)9uQJ+Q2OG,ioBUl>=pbQ\IgRS`>BB+D4H(IoJ%j<MFof"KN2#(8R?o.)n4;m^MtQd,7kZ0glpcKEUtpubB]^:rG4%XQa<5I`e3*d#I%BeJiP/4:!EF7QQ*ab>KB#IWF^GB2)`IN+bj%[FJM4HI-0pc5>.KkPRV%3If]ToYNmXAl/)AVD<S5'g8L8IALa1EsIh[Nc.-dRG=Td3dV^O<b;0Kj^u`0ejSs$CjeHacsOr@`6GhW%.',iUFsk$_^%YX=MF?siT8LSm4eA5TTiYUde=LANTZ+sRi1=6W-/WLq%rp7TmThF")TrA^Go5%EFHP"tDqhOLR^Jp\N^'I<a_]U%%lfV78,%f3h-`]FJl&gV,fC/CB6$E?>NSEbgoNK"hca9V;WE.NAXfl)HDK]Xbp-*4fA_Z$EnHXbFK"F'hG0sKN*n7^6=17RA:Erq%%^>3,<]b`?IU'Am'Pb!N3_jIi8'@YKu[A0+SNYR,o+&CmhF'[umfq)EUf>\;.:qN.;L"BM:2m2tLfD1i]T[m9ArIPKiFn`Tj=R")!%;SLsBUB]!(g>ff;D>Sb@`1g\XK-&7EhI6^qH[dHG`sd8UX.1bBgGC>,=9ub?q7HUgl9Zk=d'JMXV:\'EmrlHa6k,$Dhmb6e(XlG\%,_F(['45B*O3^S^TGM1I&Nf4P:3!1$K4]-9CY`&EReg43TW>C85;.Mg7h0jUqD]9K..Caep>KGnEuBVg4%$PCqCrpPki'q4T<$4T%F-2+3G7#]S.,HW5C]-5aT=Tn!FBa#Mq>;!kkgA+#lZTsI$4R?;d'-`(nl?0NS_^Qo6`&!2Xc.IIJqmsGolYOqi1T[ILZW8ZC%g`A%`rhjSkGdQDGceaC:+,k1n*XHEVO:<l%S[j@RpMN9%1ZQT[9pXDi1P@F:`+mBLiQqjDSk+^6.agrXRNCOZ9_Q)[MD3n*F%DbRV%3/%G8@pucoZS<^U1WN*CbTgMqtK(>g;$bWBW*#p/cLcf%]I@+*@%K&7"Jfq*o8e)\&gNSsRVW.#u0q3cWn4+)d3[:o+Q9L[N[e<Tdm'%#1^;pF)1`ZIQjCQ^IA16i;cZf4tkfAO8SsW1A4Gq]:89-r&VNc<nbS-;89sXCbLb/2C:BQf-h-8qcL>om7A%Bmin7kh:JO6b+a?e%\*Tme>r2,R\,3e.Nh`c4f[4'p9oZ7q?#H4Or7Y<-htoUbNrF0.\^0?ZoCM*GbjX-#iS)H+FNgrc^Q02uMgXThcJaa4DGk<p!b5eQ%dbDrmpTN/tH0'3b-0Eft1Dcm+QYW:%4cGXbjt8#cD]:E<mk-_eX<2Z6^E0Ips&krDB;9r>4G=aM:]"R953DU?59G3`W5\]2n_)!u%=.SP^YO@OSdn63[)hG9k\Qb-+]>&gi]Faupin)><[QM93DoZ:fH?HaR)*b,jJ,NT^J"?SF2]hd1mdfH7@V4tG2<rdoC\cp7PLJ,Y%AnLQ,6MKs&`no+b`WuLs`IqF\%j12DqruAH?b_%AcHPCaNW#SY].aH(0@.qG?-ZIJY?.1!hjU.Vf-D]NipKS@+mu2nr]2ZWWgOm(%R`V#;f\HIh3ju8<H9&EQnItQ;LZ]ah1Uj\tppXb_5>,M^r<JF<Y24$hfue?q*G0B$7cX:h(D!&41oR0N?_m%MQLt'D2s`s&D>A/e%,eWY!:j7d_^=aFVVO*A8>hPN]aB.lRKT>F!qZg&C*[ab@ja1>UesO./+*;o-B0LK8AUD<UMAap4!%k1Q00T*J"pVd?R5!jMQl/-P%c;*]Z)cT>l65nG.SbTS+m_kb[[31(ij["m48K#2hCT#URcVmaUrh(sf;XOD/+#\d[Upan-TZ6YIr1N*)01t/%#)=M\+_FQt-:)j#%N#T,:4"*_]43D%!>"Kop*>IUto/Q@ppk(?d,.Q4;WR.fJ$Qs63nFSZR&Vj`>WS/@e<'t:_VWIU#nlUcmXfmNSSA[!uboX@lomJ]>%FQ)P>RJDh3qiFZ>r2kYCh]<q1@+IF04%H3!j+@O7a/U>ODob+qHDRlc.\EX!.:A4c[j=6,b39+(FKr+!S9b)G[Mm!O)o^FoAe+j.%n-56fRCTi8#Ng*>WQoAYfu?KBlb[:].k=gakmu^2^:_]"=]4;?WDCop0A!O9^m(,QAhHT'+>F!5%6h*CDZuX%/!'P0KKok446OZR%cRHN;^?0)k3\U#eC54,NRSrZm@W?tu@/+:+)X>9h'ke#ef\CfKX#JJkO&K1/O'(;>\mLJ$?R@/(OT)1`D+<oc^OQ+F`K,XXqmUO[%klp`'Up9>&_JGS$P*)#Ys)u]QYa3"bQ-e2Q4L&O>.EL=8QL]D!o-u>'q/k_,9W"nG>+(o;m0iN*GVAoX4>c1BgW=]d,U"\VHEJ(L%@Fhc-=),k[GcM@\SkQ<MDZ&9f\*i!4?5IoE!dF@9\53rd._"i+3f3GOhS+Migr`+<0&1<;#/)+t[c:0FD!]UBaeerV?V:d`@LUe2%'>77+`Qh<87$MHJiS7e*9OiWRbtcZdU=nc'68Nj\oN4ouLY98n/-IqkG74RqY#LGi;aFPlhPQR/]2(bOB29QW0u"N;DW5Qu'9?fB%,YFY(kc@an:!m*c=)dF+2V=9bXV!a@Q1=EXMK>,3lA1TRgKpYB]j02n@"7[Z;X;_@nYhL=D'qqJ_%"@J3#<hbFp)Y]`XgR$g*jZn%k*JI,,"c2>N1$+-WGUG#hkM!uYV?e7KnZu]n<UHPmPI:8!ahS/&p\=tf!C#"f^\TWbf/()Adm&Go1kCJ9%QrffB<.I4(%qZ:XNes%-N?&kN%A4@Z0.A,nV"O&T2,fV%`WjdLmug25Po/=0NP"09_RF\3`5#MlsMK/0)bdW]W4X@PWVWPcdS/]jEY<WBfkXWG9kE`n0Uo$%`R0)5MtEjW&R[02BnsW/OJDK.0lG\(KViTk?0?itlRj6DXo>/,J$*>Fa8'gXH>j?cTT/)D0>"LKFXG]d?q8BI]4"E]Lf=,TX5/8B%m.[2%Ze+"#Sa<H?I,&[8]RT:D=8MtV>dj"9cHbrM=u/Lh>#s?@;i!Lg.CLZs`=#Cn8P5+Dl,<hS9I)/n%YU$Pa'MG-kf=l<bsl#:%)cmP>Il]T:de$5g!?[J3MtBPh.\!kZ2EUjH&7a5B@kYJVIB\d"!s35iGjLYM\\9CJ+9V+H9KI3Dp-ut#@!tuPlMIjP>?s?O84IkO%-.4_6^9!F=Se7(FAQtdMhgSQq6WA"IY9e5l]3g_<ST-^dT0;;F3e!WO4u9lrE3kc%LrZMY>Y@CoR6r*t.C4t?bFQu\7m<f!s%8u-%pU2]&%j1:#$V?L5!T`=`jOqJomp-\AI<#o/"hg/['IMN%^AKT3\UQCAF>9!1]RcS;q@`Y]FY+,3hY?lK<86l.R9Y\F,40urJ#0Bs%AU7JCoL\f+8;ij;[*U33XaY(/EV:<d:7T!E8BDM%$s4F"U,9G..m[$Y5:fD3Oe9al&>o7E/=oNDLcZc@Z2)>Q8bJ7""1W.7#HpEV%W/L=k&MBZ6i4SE3n%\tfI.:a+IV%u5K3G&Ceao<&@R6Dm9&C.bH35mPk!"_:]'fhj9X:oWds]ccaKgUB]>&^6P@^.E(;/pEBBFjG%)mH?CZfH1oI-Q<J$qtp0pB`[jk<j%QH50.iYJSSBC!I*]Z"/23G,>\kP=rj7f"Qm7<SFj6.o1KOleP?5OmHR9rgPn?1\;!L?LGZg%H\j-EdncV1SttgFF;B6Im->8n]FWGMHr^cYPR&5Y$Nn'eLG#*J%50]m\4<1d2nh6pip'$+<(c._-5WMNHQ6lTJtnn2cdC`',]GY2%^sUm)iRdAe&q!)[nW,lnY"\YCKUlhp91gL,&^JCO4o=D>*,U54J)3C[Mm?Vb5JqQLo?k4a;Ek\s:M4H8[<#Y"o#\gR[Z1D.[\UiV%d"/+4BGndQ/brAC5lk;[$TW@+FaQa=F*2U;X%9.<P)&F`@^;R/^-=L`Sb9m2l0QHrg$<8Mh@JS_r-S:haQ/'k:se<34roFCfhY_3%lYAD_(=CIT/eHN*Ua4Uko%p^Fplc@AP"355:hP2[rK?Tc"`CpXhM.B7aS,]Z^&+V;E&`gf267i8R)d6nhhKK\)YGiY/duD/d+Qc(%QP/X]F`R7]m';,)<obiU3K/>-k_7oJ6eu4<;=]-70:?(kIT#!Va`jH:0U;/1D4''3F;LZEpk!u3nkluG?NtO@_UW!^h1bi6.6C?$%DA]Xa!6jbAX?%7b-(W1hMZkR<4XA/aP-3`bcrm@NR6o>UY0:3QKg]5d`)o0hFse0:N7E`e;P*KUf2FX9BHM$)?cI'\hX5LE.7G=V%7`d*>=6O*C6sNC:Z.DmT4ZW4FH>FrWBec2pnbW6-fU"c3Ppm1ZB]9t4n&`.<>*l]2FS-Nc>,6T2lh(HDl_GleSet+1:QBc>#jrs9%EkqW3Z*P8ZUJrWg38Xd+TSG"pM.2?6-(0H#%[VAaEuU2o0JKEoM"0Q]/2O2fp=R7JT/2Fb/!&e_r'OEd>p_M!(qSc6\upj_!Ft>V%,NtNg3d_?AEWfZGZsZ*QFNG,:_.^[$A*B(#kVB]r`6]f#d"S1t#EGKNNhFSV7MA.U*'m*O*@$B695[8I:Et[h99,[/X`21rcm;3/%EI"X0$sh4'3Bk<])'s,IqS:-A!j-nE25N9*n*sAXQfIf1j%P>T.7reDd^/XlWeX)XH:opLl*qgBo(Y/Xj6:eaZbGqY*G*^eBf;;5%(i2Bi&LI4lQdFF&d-Dn_[Wge;qXkSLSX7hs%mB(ISl0ss@h1@t_N_W!k0Q0CB@'mE??<e&*UA5o:O`CEICOm5ZQJ?=noJS'Dfa-H%1btGs^SN66m[i$)cX=5T-Y.^]6#jXJCG?U@DUHcg@4eHkYhMFG+@0lOLe2jCPuZ;)C']"E75M/p^X(2W/m+dQm`YoCCpl\lGsp_'%8tK$#^IiZhOHeTq+GXCWL2P$9RJ%A)b2`9FL+r>PmC/kIZ6acICc^m!31TFqP<A;%"V;.:@eK0-#PLYVJW[-&C`M)E-Wuu'-]Ti?%F[9b,]B>_e%qF;Uau<MCLSh1q<kl[K.7'2YZG=ARidKauX\6'OmURsmpcd^4lH-R@-MiPYlPU?L:CMdk?Ja@<I5I2M^O3siVY&>?%n5^D>@s:)CQG,$grtNoU+ur.4'OsGHYMJJaFR#s76h8l[$H1,*cN$F`e77m3$1W%ED@tKOcZ!><++L6UNuk42ZT=L@M92Pjp:<r0%$-HRJNX0L^H@0Ip/hd\a;JVE&=+@,XE$C([%Ced]0-g!J:OIt&n$Cmj*Uupa+gR.tL6Pc5(HR^)Qeg_e-XO6FFE41#hgR*ZjiG,A%;6_Z]-o':C7/GF10jAb!8jZEJ%$6D*3q3eZ;*-In49ea,V);J%nlRH73\tK2CN>fuFJd*Sdc)_RMA%69&Rh#`"F<MV`D.irO,W%6%I9C(nVPNs1M^:gEV6e88nkMsm'ULMME:/`dom8c2OjPQ4Ae1FbNC@GZh&d`q9C7'5Mi@DMf0aEMpcaX*-<P%Kh4Ga;Bb;*uhn(+]%(g?qTR>>NBpN'.9@<o&f,#SZ(cg/Uq'4^2q`:WW-:DoZ)\?Sq/E]Pk1[BH_uo>QouhL=L!K]V@q-t3fjcdcQeJM`5gZbl*j`i)6t%Mt3AIhT0EJd$A>AGEN?i0?sGpXp[D1a$Qp:ERBBOip-C3AW67Xh,!@?QQ0)ihf4L8_S$sX.(Cln8X2ukl!3mhjGE,_gH*,^P!-,'%7@38,hfBM%E6KE$LKT#gGdp'1O7aS*([VAhl?Kh44B,8"_tELq*Dnp=n`6B>@'=gbaGcdsrdf^A_hGdt`:Ml"j5D3QNacWGNe^8i%-"$lGE72JA/q"t)LPsNu@\._hOtu5'>ps#q4.1Usqa?0:%*-PWBm_,:]Hd\CqrbkPf-:r$km?%LT-Vb@e1\Je:Iod!B/Z>D7f<`7%A']JcesiF_i-TOPo0e45f\`*hrPW1_nW\ePCrq5fJOAX$s+ud.)G*?H;("045VG11Ld*mSHn=t.DV\S/&5F.,`W=sA3/6&0O^nQk%IZf_"3pi4/)<)LU]tbd21=m!$-iQ7l3h'0ORl,@)9JP!H)k,P^=11S'iI&_$Ks7/CFHSsB7AO7M+sQ^JF+b.)d+RV,;XZe>&<WuQ%S"kd1Xc+>Q,kmHS+r0qlMJl,W@]?YjoUJXOqUBFOCAKd6Z:Z,(f1-&k+_b]+:.CUJB5qOWlPM8"o[ntAFtFaB(X'ig)@D8j=AP!L%i$&C3Ko=]Pd>#LIA[b>R$J1nV3G9gG-jS-elX'sPMmOsm4;9En5*f)2KDRG6.gY64:'c4S3_8n0&O%b,?&pP1)?u]<o5Sg=_%[)a%ln"N[HjCVPYoQLngu%-Y0H.W(.&M=-8T7tN.).ARSNKN%i9&CN;Gr0Y*K@QM\-;)L<K2n^B-I+KJP>t8m;I@CB)CS(Xk;;TDmb$H%5:lieHri,7dRNd(jlSu(qq:,sr7R.m`ijXqrjHkV/Z27r=*NEFg@WP_-BebXgah'A0-Z#(%Thao/.C1)QUDGP2K<_b/=WgE+^cgY%V;(=G@(32hW&(O!V^=ga;-E:R6*1GEWdPs*m+*DuY,TGPMIj2*#K<Fk06+7!ZbZpZ:pA]ZWC_^H6boYMZo;YXfF84!f&@n?N7iji%]CG8\+a-[nHiMi?bb/(!04u8Bre_),HUnKeS$_/[h)Un5nH\H]a-Sl64/g(,HCBB@_u5MG6%P)6D4PSMGBK&p/.d<kea1$4QA_`r%kp7Y*Nh)MU9BFd\id-J'k8,)./cY*h2.%;26.FMLVB[_C;Nf@S:RBh?":Jm#B7k+jRjf>IdY7BGLU(Y';tMS#Q$AYA<W&Xb4o@m8%rB*40F_$cuU?]fgk#<4uP$FV[\?;W?"%P^:1-)1$*q>n1?XaVX*e&M^.O#\@^6lKM.=H>c:8qm.J^d4diCY!/V)ESs\Fes\d48RQ%Pe1_B!d)+,^&:IM%;L[_0:FLc&+H]?UPbq,MPZ6V%l6m9?'J&;ik,[;9c"O;2al_:+4&TET(W7VdtQ-]Nia@"1gO'^4Yqc`*DI?H%e>Kp@qh_2.HDcnnaq7(k7E*]/?:IBq9c%AR$0Hp\75S;7XkhT87hnabOQUA3d<&6jF@"g3;+/l%?.u[_,E8RYRSl,OnaOqJ;>Z^%%od-3,Lo-*a^IW:ATq^e_]BWNtG^sJ=GhI,%d<'eFCuB!<m]J71g8Le2#/s\od<&5(<bCF?FAX&TD"U>ol(U5[N'*O]lF!G2#CblM%\u8`BYkC,*1gO)U=R]m4'[_#"Z#nt%Ab]rM-tEI\AW7t(/k%&;#bpRX@d+NjnI;Z%Y0Ljl8-'.L(OPBi@\aDD)[kUfU,GNQ^o,];%Jk6cRY#cDsV*sQWTR(a;dR?2ZorMsK+Ar_CiAgA@'S8b7'%lRG!=H)/cd@sASl.%=OK,ls?h>$i-0F$gQQi"b/Y8[V.?ZYa!hQE+%:N%A=/#X%K]KLal%pfPSDUo,[3U%<;06Gf9bZ]+V]3q52F<Z#1Aa\P<bkDh?_eI<L,t)dM$`$F\'0Or4R2<FRE^ATt!+WnN\"kEn%Qc>cp^&N+;Ynk<36?d-QPtFVZmR6DG5CUDQ<ZunaI"!8Sc$e]aC@7-6c=1qd,ZX>LD\j^%g>^?'Yrp;0<5'27T:YLbF<FkMEWs/@%F.`@$O!'OeVseON<J4en'1^cT1dm9[&gt!`=OUWEP1*C_+s,DX:NZLHHdP:FL5L?H_/Qg!!!O+ShG@j[o7f:FV)Qn,8oLXLNm5Td%Bb+R3aN)u-T0fKCfQ?&>>^u\\G3&n7,jK$p'1ffiG^!DgE,X&TlE#2;D*eF"E+#f7U0'H:cVr$/[rhJJJCn#(e!G_(0Cr[d=t7j;%l0aEtje(gC#aHk(]d=!s.':aK4fAAs0%/6:'9Dg[54;-d:T0L:Z3l>2=,nh@o:cg9aO&8dDni2"1t4VXEG9;mEMCsRV0JZbC?h_3%Gg;[;<a@/3#@1?>:1BiLGX;W\3KTr\(LE?>k.1U3VE]DsVPH>/6WLYfj"$m?g^S?6].2SF?FRM<$?lg)37YMX7HELkr.liaof,.7%/*2a9/h*sC?/M]?9^UXNQ^"AoAD\-iHIR:IkdFpmY&K^cX#W5?N$PWc]5,?#YNZ.)/)q.'@UV(W")BFIO-(cA'M<$]no4e`[<J6?%dI$np\RPO0CX%aZ&HVih+KuW.&WTW.\leEMiq(%/Xu0*PaOi2DbJ)uj,>N>:paZ,U2BQoIYD0K$8TiqM'?^NsJ.t:C&$:qr'thM3%L,!g>KV_W%V1"2#golHU`fa*Y<@TeIRNSJ_<_.EV>d)(2ca5u3?;9Br`W[3mLhFq[$&0uT[?*;*.@":C.c`sK+c]GMoXIOl$AR0;%Jg'qqoGci%EV16>W?F$04j21n)\LXg/P>nL__;k/d5[d")7tb_:(AJcFSTkIHsB4D/NA-ga2^)DH)[O0HZQR[`!fS<W99rn=9%nB%`U/G.e9E1]XBKAH<n//tdJL1`?Y=DK2quqK2K-$-C[8U`O7/p)_GdG@;;=Z#cEjCXG]L4MoXK#m</9kR=hBZNLWea43:/Vtd+uh'%YtRc@Ge!RGVk^aE4S*\JpMHuToAj;p<da7@H[P_$(d"\%rF=k5C=#Y7eR=Z:`570+8h+nKGGRTX;.?[$id=t9?%`UA)-=$'V3ooM%nX8%V[+<h^2)5FJ0Lc?I[e(`nS-t&0KrXGB=*g>Mq=gQdCp;mN^W)<VZ%Gf:X09ihK3"`O'm8E(_iq-'"=m]3[lZ<s3kKt&L#G<n%BMdq_StMk#-U<1A6(!R9]-#jH.CL8k[2*90PuI?hbT=*6r0f0@&ONBT\D(AuY1c[.G2fp.gFgTbEh6j/$WSpNC8CME9=gU22hUQ+%=pbX/Hq;[ug*s94LkJ@mjU)Y;fS"Wg7'9P!S$@uR5oXVI9@E?PfEEkGejWSN\_ZVu[43="/=_!+n>N^#*h(jp2AJA46Gtm_DpN#[%/t9PO'I:qZo9($Vl+OIFSt$K%(iLeio=Q@DBs"Z9FSj&^fi=`noltnu+P"YoNoWgQY't8bID/CZ_,B."O^sI+_VH;21t'^P&\R\M%ddDk!O8[iP6/G)`o;F&&54_qgBNYiBNc'h##qa-sVMuDXWO6,HnQoC5lsh3:O[lMcNgd)/Q]p$kQGYh"?_c&3;j`29)M>M/IHK0t%6CRIf!G!4h-bG6kfb)5eb0!OmLk#TD:@G7l@<j,!'7\k1\/bAR,]c#[CSmm;,l8J)F5ZM)h_A0FKXZIh<_TJSragDd)Oon4KetDX%WQS(OLetl0^Q/fb%->$W%g<qfrrR0Ue&rR'OV,K"+a!/`eQFWG]RnP=$(^`?rn@t'HIhg^^IW4+(t2!30dF-5Y&N?;l-MXJK1#a;%N<'H7F:Sp*Q9t6Y=Z,3MkS\Q6.L$H.J++l%nG^DG!(n<4"%3/:a)H.6M[^L,(a>5I%C=e"2K";)WMmik2J<e4?qV,A!4u^A@aQo(%76O44*ZteDIS)n18a*jNc)5>W+mGupU3qAhA/i$,?a*_b^K$LOb,R/lU3sX)ZAkS,+4H@M7t[_lU3uTrfO"fp!K-G:=lDhWPV9:*%o#Q^ZV6+)b6rC[K<<4II2XY$$F`a3)1cVA4h^EM4@9pX16un8<2q2ehrIRZM#<!%LD&ZX00A.fh&S![p?,$qNL8t(ZRN!_]f.Yf,%'W[)b=k><=LNlh6\D0pZf(D[)a[=\Q9D/dV/6>3hoh,n=21iDg/<VO/SEnua6e:p'?<VROb/*B>-!0aYVufLX?,,G(7=2!,?e6rO%S!(+H%oCk2g#FV1(N^3MBu?!@K9%:WDlC6raVPu2nr06E?ZK/]4u6$Sf(D[:F^r(Wql]6$jYc.$oc(I`h[!]Je(=7cmY,h6"Ej[+%+&jMHm\/qB,mV^b7&1;lf.Ztd79&pf<G*/YY$\XWS6XT?paHXlT#0gi,r;l$kjB@rY$^6ON@.%H/SY!kI`W)O_2-UWlhUeE\%8U9%Flg.PYc_=g!_#Pd@I*b9T!`X8jAFG"97@oLUE8;(=Zh</pkFiVLp$$pIl'Z;?,,GJicoCrrp'>+9CaXrIJCC&a]8:/':%.l59l@2%9jPNppZA[r_4YrLP,nEg;3.mk-]OpJHp]:1nZ)GFU`Nl=>rkFJL@2X%rKQ:LEL>_MqK2sG"KM<D&OSq:p%-6TZDue);/,ue3O(El%B3i7t1$@s<o_jp%oc$?TC[\i`l/H$)Xm>0CP-R"B@!2GEo=9aWlSj&B]N<W::`ihh<U)[..B0=S6C+sllMAKh0eNZPh-pK;oh0IM%lEViJ=P#2Y4O3/EZ1KbHM_jTmjj8/KqU6r"Xm6d2>[:A.L@H=LlhVo+6meam[oZkMAAQW>8K>%=?ZJE5Ij5J*f.X\7?\CO":gLg]%+c+5oUT!LF<e_KpY$Z,q_c?XJUMKb*l^)uZoSDL#?.Ub*Eo<)n5#iB0Y(s<F0P,D\FF/Cgnk//1mX()PqiYZ[?85rNF0ahS0PiJ^%a,G`$i9SWei7QA'a<iQLb[*RH$53so:l]AY%XSaq7+g/9mHiG,^,UO;d*(jQBN/lY>$?9$D!n-B;U";>VtA.7F5=4cgTPtC``H_t%\*CJEX1+9Oj(!G,fs15;e)L/q:MXt@luHPkpKg'7:KLnmq+T'p.t9b8n'C*^[J+$`YPZj+f0-e$rOb*gS,9tH?;KEmk<$Y8YD\1,%fpRVNderI(C\,m"a79)Un)jPm>,RWIS!e0%oZ=B.7^Z+;.?gr.ZT%!DMg9OG?tSMAntV.V5?H`Y[8n*)a6)f6%`Yl8UY>XoPHh!$%/#t2Cp5dC6AS7`WW9bKE^:%3`X81>ulcO<rHK"?*(I#h`/QY-Fk*MXV>MPAr$@>^[0'n?oqrR\XT$!gC,X^Sg6Lgm&mEXk=p3M"2%H%#M10*02[#Yo;cSjjs*VAa*NkE@#9\(9iqiRm8Nrd<4!fh0#.'di+@E`^;Fc;JL(GC6jjIJVRKhQl*8*E_o>E%#POh,`Ab:]1="%R,;eBDsuf.>&X.#aV_g=$<PDJ.sRXXo'uO@Ws*=?-r+`.l\</2s7VTFY\HsHJ8cEqZ$!VIH*LE:b\bY;`aa!u9A<_SfYR<ihrd36%f6=?(L\%[Z]XmK*Sj&M/^JF4E9!sZEq(6ckkuD;+kAge,2D`+YOSdb'g"kC][sfrYbN)96Q(j/*;r;nIs)aOceU(VLfR7(&MNuLM%hXQfn&Wt,;iPJi;]^)W]is"^KnFh]Q;MLF1C!>!i!FomSpugX!rKFNFSULWJNV]&t*if\@2gt8O[pRl#Za]hSn"4AKCJ3co(<h,4%T'1c(s5j25-i[#c4aK>ckHOU-\bb[k<02TS=oRgeTL_<.-hgrd%u7Ku;K\m"?L_Fpe2WY%c$+UPT"L]d;Em7f70R*gIO1A:$3i&0%W4Q)5_gcF&n&M%\YO@[#f&X*8@[<%<]QCn^!jTsWI@-3"C\2/&Yb)S_d`/=`]1;KhhX/e:X\*>c;S:kX0-6XslgX5$"o;5g[2(p4%r$[@uPhAVud;!=)XT`qBkLu)>0e&<^#fgHoAk77XBq<Uf1"9oL1u0WZ[q]oWrGDO]WF`3%)i*bQrUUHH`AY*VS$OhEak+#UqF@=9%?JiN1r8eT\2Z*1F/s(%_i,>0p\\!eUi?b7?D=_@8AHuW7l,][8!@;[8c8?+1])>4@?JCpN4Rg+"0.(jNZ7[29f!*2a!_'/'%lI2C%l.^us;r78Pfdi-ODD[d$ZsQJPJ%VD4q5oRU?!PRJ[$G'c@jU1i9:30_FJDl]R9Mn)qH_t5h]"ZKNAcYbm9&q\F]3i27"R.3kddn1%WYkBBaA2YtG&GZCor4clPQ,L+o&d@/H+Suqp!@M1\b2`GO8J=hgA'.nl&WI@XiL@n-/Pi_OKT@dW`8=AXmI_-^^7\L7:#!@nm=+)%5399*OHk\q&?f3HdMH.:eZ6rOkHD#9rQaZXir)_aL,eD:CorC+LTTBl/Z%rHl)%]mfr87^h#URtH^sP"@5,q[2Q>!(47l]>.usCE%K.l9MI@fik`mrDD;LBQ>']6okVa/i/kU=SIU!60X/5/EplTEjKLi621;W=0j<s%PaiF5o?^3:C+NPC*a/s*X1P+UqV]"Jg!Y(c3J%9n0do(aJLP'"Rn;N7Y4S<^+E;QFI6?fI!6]ar59d):$B+p54b'\A-b:?^i?QoD?"O!_n\SfR7`@J$R=-6JKfVS6-m&<SUq*5$URK%0iZ/BRu9_\9C7Ynd]`E<.M0i\@!:^4om8$8R'A<@Ge>pNHr+R4<'6PcE@J\)]'Pp#S/<B_EZ6f3B^IYgH(6N7s%Smj\L]DM`_5XX%nDS'd)d``"n!RQC.sJ5e[MA'-?P=bfR0H8OXNe9,\h>ZJCj^VAFbe.WbDeMb^'4<57$[/0hgnZG2iF@>1:aHdj)qP`\!b%Rg8Qf0%JbEL;DCLXe?3PmmErgK@.2;tQJh/V.IJX%`R_(I>a"-:>#<dkgb_$nP;FY=Q-\;-?m^Smj"%A>lr8B](\7"#pd-KK@j]k5bVc_M@%IlXHS`MW*4U;fqfE<X*pBOAKnI(=CDB\uPkOd4(;]+]QM[I_:dh3+&f,`HTamX(,VmX8OAcT);g-sPhj+*<j`(A.kL$9$XO*X_=_%'Yl+i?aiNH&je$<js;;.[e*))&@mIGd`qAZJV$3PJ-$'G3UIA(a!+r0;F868l*DO[UJdd(-:QCV,*N@N8Iu&imA(*rU^XOpFo1Bn%,=23);pmtZ-g[n=7WF@LmXQn"^@dUBo/M#A(IJG61D1IEho:-@U_MQL31&?8s'8%g#)#$fIHdMbq:H@CHli3tP%SAH@N#!o%cgQV%fL95aAOnJe`F5+,KSV*G;Oim`]24^'kh3ehCaM+%l!B`Md6T+GfYt'7Aq?'Ya&o!m[(ET)O-r@c,&e#+>92Bc+iS?_CF:no]S"Al%;6U.ZUb]K3Lh]6?M^muXLV$C3?m=RP>L5bCec[!GOm-P,B>5-o=e,(f@P4G9:a.6i>oEddjH:'Q*1#n)o<C-<Q;!3N#__=O94PqL%\P?!.d+CV,k`>$td9'6bo#)@;1cP!.Z$]B:B3hlF9KgaV2?;>8h8n;:DbMG&+d2.&`mS<_.h"r\rf+"5`LD;oQPRniHJQYQM[+rX%%FcnLGp-RVS=eI/FZ=@H3q@p8rcHT4EBVTPbB#Q-8su&Z3UVJko8Ga1DIY0'l^pMS4K*V,gOlEYrgI1SY)uk,JK'9dlP;EiF_1uV%:N.U!P\8sU:c-]?Z>IB4D)=N3F3FVe);f5X175apj6@CJ?aE]CT5>BuR^+F_!>hV?+$:Qg2J>s04.a-'IpW,J4RZDSpLR"U_GApm%V!JnM3jN\g<!/o^Cj[ES5*X<^46JDkRIbA`ro(icXEfR)9$@KCoboV@WOqtC4IV$Tl#CYlG?7QPE$G&TpbIo?4^$^o_b#3;)lshc%)GDN.atMcU3%8n>j6@\[m6p&CS=ENUQk8`@"Nb-eo9^)Ofh/X)]R_HrLP-L]G'.XNL!bcO,+dK)[qG3sfccuo%;g94qqEg\L-"uY%MC7LsYM0MmF$*U]\\E,jf$D&WhmREoO7C<i:jksem_=4REP))?:L+Oc%mr64Y1ehJkYtmN\]+*7KFHeE.#u(ho_j#qg;]s=N(oZ2%6Irrel/(;+f"oqc#<lSOnGXK#L]hUQ?C\NNUNh8eV>:&;IX9SX)dWGOo6ld+JDU<n@P'N>PiXlglSe;@1C@?Jrs/:Go'A()OqC9X%RQX!5hSUGeQ`.(CX5;_jq7Poi#;69JNJRD#D#_)V/oAlqZeO5=#8[m5=e-(%WBMq<oV1<4;K'o-C&=bs;9O^aMrj7BG,Vk;f'+>h%:13UnadZ6no7CTm1Hs.UfZZ0Tfs&s7hKHN;FIFn9mdqk-i/d1.HWSUlf>d7SUI^6c/]S5a<8[D,Dc`J2,La,U`HgIqqW-)UpF*3Y%IJ)T=T/^M=3A,=?V4$LfD@0LNB0B";cT143o":@\5%b31kA#RQ0O]Z^ei%Ek=#l,@PSLJ,'#sXq+>^@^jLcHeN[E>4[a)L-@0nJ:%0Grj&4+"%8>"AU/eAgh/aN%9"a5lt2T:'uM2?/"L@lo^=F\Kj$(/M\[e^dU`mH(IA?-"R.MX,VhH<u)=Cq$Fp+4^C52B,G!+4YZb%]9k1QT9]-D*-8I_e9J-..1)"0bGU(WT.GHlf&L(k)2m/FmI%XU:7Nq<2Ld7//!:,nR6>0Th.:sk50`0.k#^ESNQiO$\75oMDt)5Z%hhA?2YJmiQKnHGNZ+P+M&adQOS*CrQmT;F!a3D*kYO.'mW@Q<d_:M(3p8ff0XtMUB^T[%:m1j:.gLXg*EFW6i[I.oH9&`JSY!`<H%*Wfn3p*#qXB^U<g[KT_$kA"hlio_(Nrpjf?-=7Y2omOkFQH&L]qD#'tlK?gd>A[q&?U)(?RsuotB_KP>(4J;de]sUNdY)Q!%;^K)%o&GbDInVM&S&41a5a7KL]^r:cs7DoAn,W$oc-TIIc:N94mP8!*3o$D?\P'P1J5QF4I^e6`=S,>XE4VJWiWL)Sr]*lJB4_pu%uYMW%!Q,.Dn\a(4A/`57VH:qkihu0qoRh7N^cD"9OGD^rUfZ/NH/tO(H"mb_+SOm$GII*,=oj3;^^52,iZVps8AP[SSip3jGKr'TGKOg"%j73\?6&:7B$_1]Hn)Z^+%m>!d;)p6FW"BGW"TmfUWIjpt<,TE7^1,p8H)VUiTJ0N9'b?XX[$*198R2rFku!"m68ZGVrAjbeoP/4b%D:G'^7j:OY>'u*<SV7rVml5?9>)_`"P8h0TF%&-TkKAd[p%,/Z?_phN^Ua>R]hZm[Y-r=3#?N4$MgW,,mbJtr013hXqcI1o2QQu.%D?6oia&=<8A%'0Up:&3>"hh&`b0NTe`^G+l2u5/tr+il/k\kia+(%]&03hJ+5;/[\>4l42o%mrELBCU]k-K?:pog]YF:WUk"Re!u%-Qnf)F62]_2EkOKJfh(`r+<5)D//U;5(10DD9M\fZLFV*fEq<&Aq0=./O'h9q3t';S_G@Ej=p&q3VKqa]C5@XDpl9[006q&CP4eh%lfM]d[eW#:rW+4e\()urkVMr[E0HJ'ro3a>Rj(_.\(?D.LruXUq(s,g*k^R07aFAkWNk,pLBcT?(W\!`a!Na9D][e@`?2gT/UTI;%n:t"SUX+0Fm#K>=::0N,dH3iS*:%mM35qM-Gg]_k[eR[&Wm7l%k"u?q2E?!>8QE9Aa5p?UM&t3i6\0;OOAq<G/d/^r;;9=PcI6jr%nq&7Pj@OJ:AIEoKY<8LSe6rL9.lsoigf(e-T7-e>MNiL2>mN/d=tB*Nk?FB1Wa^7NKe^F*A[s5G,%[p7D\+cQ>Qh`(\3gCKM_'o*%BSFB!EISKi7c_iH^da`f_VRYBKC\c`6\\3Tq!e1S]fq,6,0_VsUS9C0mkA77FnOkU+3?V\q>-F6%Q@2%gL"_[oR,;+I9Sl+bn/%S%h*N:;_<]8>_q^RXPghmXGitTYh`5V^n"Fr#AaA*uQM44%dbVa+e,`)V;nGu?o#WZ4=S?n:%_lt]_7lunna4W^h[1F+keUY6(=#*@%2K(=87[Y^\FG]pJ>P(J<_$0@AbqVFO^A#Kh%Jpe4`lJYD0JABha>ngVJY(KA4<aJX0J\]CXC0&GLP29T''R`0,N2*]6)[*P.S2o?%E(ZFY;#,:u,=0)HWD5F6<o5RTP06j?j)>DI;#6:;QY,<E4l;\s4_0;d]/W\\I]R.tg]Mc:!]q&W^pDpnMsFu4'9UcF#!WR-N/(Gk%%MDP`<c8jn):abf/I,S$CHPIJ3Y8,J]"4i"%H@Hih!)['WLjT/rLWH;lUG7J!?EB$?/.;mj"SLa@2:.*1J*@Ya&_gPj:6&o*<a6u%<fX6JT"C-GMQq4"g5."i=A/L%]RLB8\3uL1Q/fkdDbMFINT6>oQSP^.r!ntIKBoEX`iebmg:<M]X)-\^#1?UY5GTE`X!!CU-?]:^%3?6Y]Y(d8$UTq1:HMuQe5e?(h_Us2\M=e'3qH"@\OiC9PUGXIOnS%:cCOEW*Ikrh,qaT/jGCC?<dhf3#EYjdt6ZF+Rjf*_&_F0GF%]Z+n20aDm:,[o^&]fd?(4OuUNNBA?DHMgISFWtbb-<E`88Gp.\j2tCn[qLgS4?P]=Lb+VK2m*V<j3Wb*?ce\tY^C<_.PldmC%L,`%f/GX*5BuXI`sn`sSi&g1HpO[\Mbe5j64[EY%L<U&,5i1?k8F9.5?1<<8LAr8S:-#SrGus*ch1oHBA)3Kr'"KS#^>5jan-r"56;UJ%I!GBeYd-AEfcDG,a@[m7)&QpPra&IQOdBD*`=GH>B3T7-g0+-/Rm6"sG=i7k&(8O4gjbo!Qig@fDOr<'p[(1PjNU?to\Fa<lf\Fp%P!7_LX5Ftr!7_OAoJ$?jThm<J`doI,7:pYs\GD_KJ"E^bb/auta1&Vr%l#/NY%0Gul`uS=?Xf86N)lN56Pq]Yi7bIEF0(]tdj)1D%nfT.ADt\N)kFB'-cM#t6ouH4OoCA8&8m\LR$`#+6_U]bT7%creO:7'\Gs*3'M^#Y&5+WS0;c</U8l6\RHaE4N>Et\F*e.oTm[aW0%oiTV\hjt;BJoC&RBq?1_0cCZ'GpVh&n$e2LgJ?L>r)'n^^H_&4%mS,,#9F%gn<jrNPTNq0.kr\dk.coOp0HAJd^epC7o,XS3^4@%%7pX#V^5=E>p?W_fT=@n"o>cZk>+;(@mCCo8-2SlNI^&e:+Qp&WMlDK?XaK#o`s@iTM]5K\+nD9IMF@e>,5;\],E5+t73]Mqs$eP+%-kZQE"T/Y4#baeBN::6nD(J"t,XVBXY@NrLUA%X[@B9AY5<WV!3ImW"4't]u?p8C+?f()0b!4EW7a87=;rI]F:YX-oRZl8q'E2Da%[/?;ZTse*H2I!=sEY$.^<bM$kWUn]>='GW7(D1b3:d3dkbV!L1gBVE(Pb!BY-kFZCI[\7Mc3K`q6Uo2#_gba;_]MD<hb-Gt'*-rT%n;m&-QTkKH40'jaKC&!=P't=\:,AnZ'O9*AZb#Q?Cu*[K*s>LOf-$H\W]GO((K<o4!9+\4;`=`O'`c&(=LsrLarnn^F9XO;bG&%;%TsO2!&cTQ4Jn6>Gs,+]FprZuOnU?FKTrG1WRU/f!a._t73N32*eI7nCA%68SfA(u<fQJ$3U,a3fR"e>m)$SbkCk+ML9u5-"Jucf_%kaDeX70A?GE%O]fLfQd2i)b*<F\N]IFUKP3Tb/j(0HG[G"i]#_XK!a(,6LD6@0i5_IKqQ.Kt^R#TNa)`^aI?#JYg.h<#s"\@1Wl=%"TD6uX:\>1#4pF]VdLnkC]JjcC4JSjV?Y+`AV^Yf_@GR,*m?#\R_uiq1gC>pcui?J+LZ'r"E@\!I0U^/j.$+(gB@P"fSjbsD!VC'%@qu3DFdqk++BqjN,?U)*?mD^[Bt,Af0e<Pa@`)i]6P/'SLe7Z%fKt[3!Cianpku6e`):!0<D=oURVN+^df<Y`OpSoTdtO(&k.nE8%:O5;_D&?$#FXXUT=LN&Z-?2s);^7[k5c:UdFQT#A@0u(s'#\s0Mf<B6$n%KL:`R_*N12:01I-',^g.!#eH,^UW(V:.B-,:$*?<@U%"+jJQ&6lIQ!Xi$c#-g!'9nsGcfau6S9Y^Zo>SG3nW'[=`!lRr@M]b9B.fV+,;t2]CMW7)'Jl]+8J/Ggs)"J3E6?ME^WsW[/L94kJ%E$Paa+rLHtEZL-'diGkO!-8QDXHojFe8<!qD>8?QiV71@d=I?-?kS@P`_^&I'S]pRDU=H<!p0rO[`(*5>-O\89N/93o74.94.p^U%OgMr^%<R77a4>n(A!dGC-434'_Hej'E=TBS$C9cb^i<>E!3Th[nMP-&14WP6"3q*9>gm65WWSRg#k"G(aBl7`>+>UtCc`-mMg@<j%GoDbri1XO.3,oV#>;-`8Ke>5@9n57,@fQq_\Htr$21`:-rc!FRd<\N>Tgs0TV&5/h!=V`4%5?]dpq:DD;mJ!.!"oa23'^/3G6pV&%'u.):q\)LZE"bnfD*2D%),\*3d+0Fl:-!dbYl2Pg@/Bs.-La?e5*I*A*]!OQ9*(!`NmtV9Z9:^6@`'Wp/ZkZgFu1!`)u'ehV_OKq%0R!(?>p,?9=#aU'n,c5bLkU$h_H[HaM%J:E*L`ei,,&*CRiA*MeemShmqg5pKH%:>pmnPI;G<H'*WsT=Bfi1&_=%B_$DH'eA^TUj%!7PBVL7q>q>@<X)s%64(\NkP\f)_TqMFCKQ4*Xf2B8u'@']@ObIUV2l+G@Xd$p2a<ffGl]gK"42O9B!5<'D:l2+FU'Ti!$B(.Uk`%f5+HA!9)Uc_*?s6+@=VdWKj4kIH0Agis9WV\dj8R_p6YRE-gHH0s5-HblSH//h!*_@Aj=5/RnB<0PgiA+Wsi3VIL31@,6]oG:u](%D]0_Whm>QU7Q'ZD@,F4LE/go7Du<1A3a45o!kdjWU&[3.m5LLl0NZ4NCa)Kr`d:.pRtd-4TrUk#d9XBni8b^bM?CZ7*",?k`![1h%W#K\-gMFX`1qS"+l3<C_hT+WolbG9+PM89.d.&cL5tDUC6Uu=XRP&S#(V-(H"2fuF3+i:>TYoHhD25&&GT-,Vh*Sh`+kM?d($(!<%6-+/0>FI28Da9YcR'\sXK`l5QZFpA@qua-HABQ)TR(,Et$=9UTfs2&"&W@0#WMrc?SRaGg74=?"MM\,6X)\Z-IAOgCRg`oo\ji$:%%NpAU$Je[k:0JBS";@N1""kF$D?sb-<JSgT#\QC62Vk!ENa:`$0I,3`G3-NF5SPK6\Kk:o4_P]KU!03Ie29_g3pa)D/@\S`OP=Hb%VPCB];aHFsG_K@*,7(oJJ2Q#Mr)$S(9^E.*<gsO'%*'OX4*YME,F(.mKG((S2B7OHCdW^f\g/u^VIC1VG45KF-r8k<$P7;ZJ`u&0%3c5Y9CqQTAY-E)ED&ECqP8a?/E2VWfoQrNbaFOoT7>i:G@Bf89&8(/gjGT<rF15.3?2u]Wb,49g,fp@LbVIkep`0WL\9WT>Os(A:%gkOc_,tZsKJ=L(pT5g5@%>:sW'ZS]8@d(m-Ua#jn\85,r.E$l>U:?!p\B#(WAYLI.fC0qWi,hsC7B[FB*=r:!V37M:\2FB+,o6b/%^]LB,itJ]s7?)g%?!7V@;QNk0!Wj5F`[K[F%Uf:73]P3f/:s6_j+&]d=b@i9h.p90#*uGKC.01>@_'B'i"1rNkt("p8^5bAl;3B^%!f$;UTjEES4ph63LB-<bQQV0[Z;YA7NlH2He'\Li67jW'.V`n;W\!)#P,^jm9BH!Z*I'W],UNU]<Jb._9EZLEBaVfV\C(Due&(R(%>;EAEBhuPD$mQ%_fEBiN*!T*iekFN0C^lFh8rF*.,ka5$0nIAaoaMh="QR(e_tYR!FnuCfMLi\J/C"74ip*7qm`[`7YVtnNaKWIc%/@lq]'PZ6<eb^fe4+e^hHj!o2K0KH)5;Ks?jHs1b_Ylq:7L2RJ#bc*&Lp"'W8nZ5>cSUE88OsKqLnOm1jNe5]GY!6MCY3<PORS/>%+<HVf*)tX7Mp!B=Yi)%%7jod++ra>uS.hVfP%<M.[VZ?(!gP_f;"ccg.!SDtU,[l\O^Pphm3_kU0rS`CnQifo8J&]u.P<IYKXd=;%Qo'M]Ai#hV@>ZFpJD'u7NCg#RJHLfnWD))Th`3#Y6");b!BQ+R[_o6cR^NBT"<j5q#`RD\]RX<J5=C@WKGt%;N",kt)Qlim.?<Z`%*RIKE$3@$9GSX[;iMOT_>WdT@+>X'#5]V)EIQJr",)fJVKE2%]B\nbDhk;>"XqG!0%2TD=Y<f$>(^`f8TUVKKXs<%B9N&>s"p]sZ%YepJqbqL\8-EnNA$Kf4PCDe%Sn:Tdq7#o]HL.]!n1@=O_A.G0K$6*.eJ8CHD$j3\KgLS_96Jqp#ULqE/@k/nXlkBnG6\o7^"`K%W%((RY;E$UY@LK>]c82t,:3J^mm\R]mcIK:G0AZ_>7LXm5'g:5CP\sQ#'KTVF2i,sl\O#l!%).+55=cr4#%06rWi;V_Y$ntS\;/mi_%`>-5j[g?NkX^gD`(jc:DW0(TuQn_Dn7\N[6Oei0R9G5EDVEuL96AS_$GBch)'=*0JgSbee";$0kd[98$79!(on2n!&fGYQ1D.8,U%lH68&=su(=K1&*_,Pg?%J2$rMF<+A!Kj5O72<Y?-d0X9n1im'rN;`h\%$<Ck@1$"0?,nJ67^fGQ"9ImZk7_L@">2Z;4"_'32kAGp%G1G?g_DIU6,=<<BP;k@fVW4%kCCHXG1cNfi!Cr!JPIP"k0]t4"c`dI5Lc#6k0F=5e9G$1pP=K?=_C<;-"T?X*9"p/!UP$]>+VTlq%Ju%k.D!\IR!!)>-1q*9tdp3Uj&j2C(]`J>^Kg?7s&E$Op<)!ptR3Jn<X=KG=9N5d=i=64^[Ne.]G)*B,3"1e!81I/dB^+(;Wc3%a%!=ZkdJIAM`*^FLsNe\-QNeMf[KPut^"`FFg0F4DOKE2cs%9FN"",/bJ#W/"kA%78d-W'A.<#lP0l6o8u\\PJhGD_:+Z:fp*K3Eg[%!55-^6rB>.aIl6-LkW\\;fPJM8JA3,A-YTQP(Ei'lHIcAlRW+SF;@NgH2=YiG(DtC5hOIO'bDrQ#]Vjg!G:SP"kV[u@(c25e?W>H%0H0IXf7@-8k@?<:(=RD2PWfZ`o<jtu:.*^l[2Db0m0@M]QQY:b!uR4e>Vt[npmmGf0Dgco/_"AihR0+4Y)%fu#C.F1.3.UmPr.Q+%0MOoU1s*ZA9*&o`F<lK]Np">mp.Gj_\%i#25S"63"YKDMU.VNf67N4`7,-^(93pUp9`6;Z4pn>M"#>@V6:A7DR&'*lQ"t&m7+u_p%>td)!\0c`^1L4U^"nme*3I#FXJs\U$bs<t!naA"4/VPh$9dbQJkYhu9a^o9"PqP+JHIbpNgjjDp9ZRRr<X@/Np-\LG@K-O#b9=9N%<!rfQM[Hf<BIG&)1I2kGdh/=l3Ff0fX$MOG+&YmhcIdarN;.'o,QYuA32dkpT-6Hi['@rUF+f\RY2T6`;2#HA&<A?AK8sOI:hc(!%*7=/:HpB42?+(u&H9Ft9!'o2\L6"81V[5^F==]p`G$JQQB\,M*K,bgQoE`7Hj6)bN11mc"FEZl9)$P#>g^PEq_c8F\Z"7A\2HQ@_%Q1eG@XO#dBe04XOJ]f+&&4T_E.H"mqE*R"27Tq-s&jgDuflk_smlEMi@(OU!nP#,O4pRg:.I$^00pjE9ZO*:LbA7`'69mF/&5>H1%>;qp@MjPu!/G'rt.;/]J&_PYP)c0?GF)Z3AIZIAfnk7#24Yj_O!j"c%T&"P):WQ.gpAkhi5nK.T<P"65Pba\7+*`c>\!H0N[]eFP%#SE@QJ/GH*6n6A\Krr@</LE*4Y)-E/FA+$ckmAI>*UcrdE$YV-<Tn`fdAl.:RjH5o6K"TgZe\M)ad.t(T.u![#-t)#10ZB2@q<;M%nM3Ko1FcbC"cESQ%<#+4#JNs]Q07(.A6(m+FX*.W.9JiCWdoRf8(.!5U"tDRLra9j`26Ta>eJ7];-bmBh,[AT-)2:3/N>23>IMI<%]-74$e.oRUnTmN"`?jh@.B'-Go?mo=&A^n`.O*%m).H,]6O7eV+N1Xi1YYTe_7_`=MBr!`0Y!0KJrq'CAMuu:+GR#N^;bp>Tst,5%@3'o>meWekl39*KcUqsk$Bp#e;_l3`'i2J=h!dDU[3`f:`!(03%ThFZZtRm=7l.Dfhul_#$R!C--(/F"0\PCdH'Oss5SHRr'C'9a%ZacDKT``\oCoRRZ,f'H'f":9PXu4mX:QY$a3X-kG.$=*jdV_W*W3ohf"C!HF8AKt18dQ&."k;:rh`$.&XZW#2qC?b0P)GisQuNuu%_PMS9G0>gjbfORKn&9Xd\`sscj#aM1&_mcjQF,_6\Et=ih!0/hPkPmRiQ(=n/%HJCaR=1^+Aiq#jF,@in6))T<efNjYO\L?k1^:;%8NesF^?QT`MA(AUpffK0&q[sc,;Clj9A#>0DS,iXm^j;31#kCRL*642Q0l4k8S'a#)c\`jIWbBFZ?oTD)*?W)8P!UYHOWKj-V'Cu%RFkLQ+4:G>_=67GJli72GCOs+7!%lE1!jfL@.nX#=^UN<SAiGm&@K=,famZ%r`i%)%n6/2%B_nG*"kWUkR:64,kk(rj6$[T!83,,%^SA/S^JN$d;XGa-HQNZ[V1."8,='Aj+:pWeeg/6(@jf1%K<_pWdeY7kEl%KuQQ`a5*UXN/#=]qMdCN&NH'%,q<\AtcpS`,WGpS5h%bB.adbG?E#\6&p9XG*L+a`hmA%tc5a"`m[Fo0)P"\pXAQ()`I^6i;CcD7e)#`oV[DF#\FiB*mI>&*)bVh*0+I_Ap,Rbj9U=B3``A%29$Wns4,N/rQ6[DHT=bGH5eE$MeiLih=ao_i@ctNfLRBhgHA30)](KUc.@Pn0Iso[:s3_J>32:2.,gR&%bpc-H;sR@P(3;?C5\6B%EmMg)8)0D<PkT=tHFF"j1-1<AR4JK``o@hWIb[DU8uaNjNU0UnZ<BRG(j5/X/f>fX#GEMEU65-G3CX[ZLVSAgYMDAD[uI2Mpu6W1%o4pk:id6\4<2'V1NRXZ]]Ee0(Bq5LR1;:`_(UI`STC4X:SJf+e>E6ih_TR3h8<,KLAsB[Kp/=+4CE\e&k&<[Z9l)_RPi%"S\t,?^%mdjhdV!^6i2@.D*7)iFCX>QQopg"]0Zegtk1CaRXl>;n;4"`Ia&Zf9gG3cp-_S=on.(e5D*4;nj<`*_68N+d^rY<sA8<8.7/#,#1%X0g\f_8@E=Dg#Y3C>g>HNUF]TTR3('4DKrui'hgJF;tO0(#C+Jc*\`Tj$Jo#-5/M$.q4+d[XRJUfBso^Iq?AYa_>e=X7l$pD"`$(%7XkBOC,m_E!cdgg)ZTSUDjpQV3he#!::*qf`>E@*:6)@5g^I5I8Zq2m/U@rT\J%TkR!K7&KsaUME>pY.?4u[q3#M&S.OJ1rqNBY!%@?bMRh08njqXs*^ni>!oi/NCfgG]`c8!IQNr3l'NIA9DiW!fm=pe[nsO[r%2"0sGVpitP3eVu#/Cn:<XC>c76V!n9'BruoU/q:?7%K6S3qYBPQ:\kg)L(C18&L.g:iY9P$=jNLM9qjANqB"/G0VoX9M1Ts0f_NLLD>^$]oA=]sL4D';;n#)XDS-MWFUFFlN?Y:S6g"Xmg%lrRY0f>Z?eP2>YaomNt8=2*cq?tq9ckO-&C,!h(_2IKGX.e>Jsj3kTBNhN-(EL`sD07Jg+@F(LJ4B[FeYdu>3"WLn`qJPhOJ/2r@%`93GmepRC;F9-/^_>!0k9oY-ChZmja?LjLkdrbeSd7(N.$Udi7_sFr?BEoNgL$8bQn@[?f-3cMFDT:;S^BjC^.NJ6M?,]=,&q&QO%OX>C.H-0/,\1GF51jnb#*/97Yi@co%9@3a_Ljlime6dhqPM@]Ie?(CDXD%EXcc35>g`kO)qtM:@LncZl+jeLhJ_9pJCM!mp$\2g#%rPkKG5f2=Rq#6hAdBRo9]ib&<:T+(:d[9dF5=f<o[UIhE*g>33S3./B0I@s_`gC8i12DN+'CT[9CmSM_5fgVAS@2^Upa+psUMdYc%oIW%DT\bUD`'%2W&)eiDWV[VK)*5VMj]LNYqFU*`U+Nk4m+PCI-kjYkO'V47*VD<->&<GOli-P,<Vs_;08J#Hp//!H+Q&"B_LJ1>%Dqgk:k>CHB6.V.!"4pq^NF&9_@o&7$6,c6;httrC8&tSuN:-7oHUD,oncNfG?,:BPlktHY@*cO1muP4'"R!Lo4`2k@qYO<LS&!iM%!fWGoKr<ot$mI\,=Tc7]hllKurd.9lD2?R*Nn>V<3nh7rp#]+j`,Z(XH%6(bo#W+2o'RrQrnbu>K=iLnHO\k&j^1N=mkN0P[iL&#%N8?hM%WNE-Ln0<7g[F)\a>,IeH]&>`HG&q0/\hKHM+%u-jNk>3M#1Si<u.[i,*[9h!'S,ig]th!(25\f(pSo%=CTc%8XRanhjH/!%.Yf\?)2@YYSpSpnrltfmn?m!n@U,EBR$8buf8.@B8H:rqCa7UL>g9O+FW(SsPTtd$C?`'):oTE/3-WoslMf.q?f7aB$tZfL_\pF3%]G7CiU4.XE^ebJ_s8A"T3L.(eGBf%KRODUYB]G<]AE5Tfd^MDb^E$_F\^t:H#r+F+YOd#)O:B!#G6=:n1F0S+GBqJrot-e92\Ti8%<8)u>FUUM*!XGk[W@)L[1^/Z+kr8R&HU?!4'$r[bWkZH6GpEi>)`IFRQZas3\9>&':7IG,,`._]It[3Ljbd^O9'#cb-m_hO0UE*c%c1<`RKDmgTKUInGLNP6gpWQK)7'CMDU<>;T$dD5$m_UM#=Qg:QJk7;YU^TQ4G@'UJ$F"PMe.N&MAt87IF+1O8`Y#`/IXI%aQji<Z%%JM`d@^ank%/r\ULql2D6Qedo1dH+9aFH.Q6A9e,J5Gb.ZmCPcJ&DOS4nll&KmA=K^Gj8s*%=aG%3uR"'#KENZ@a)$1Jt[bTL'%W%^Ed'EX8]i:^XD02LUVbX<>Fk5;NCha$LT$5kd_8#nj[_b-n[8@r1G0VF,2E(:b9sZ>l!Tee-<L7?p3s8(+BQ0irC#ip1!$":/qE@%HarI#Q/Dn2K0iqLi><4#0Sl'\9A[e^HX#@5FCbZ078p.(<(bkY6F,1VInguhCMh\,<sd=JpO%N-\2tdQ3sN5)_lkBd*:WSP\UCW>%ah;3ebRp>b\=Hj.ikU!q;KHZ$6`'[4oK'bs&`2;59Tac<-LZ^I$KL]W6KJ5h\n<K#"2)gh7,_8<o)bUHKWF!;-d36\kZV'#Lr4X1%%tDU1moLW,ou7O/<TE$*_P@f.FGrb.><#Qq;S[m#;0_];jK:%@bfaUMl]H/D4iO9j*nc6E"(LTO;C+Zha!iCd]S*.h_G!oQPG%ks%AGh8_lQ>/V&ut^t4^[>WQ/&88?gMoTNFru4OD#AbpB^1k[Y3"7U@V&J*.b0Z(>R&\O2fpR^)5)RdYOCbdT0foc9`.Pmpk1'A=SKh%ln-q8OO,,/5Kq$8_2+6(`\K8s'3!,aR`QhEej+F#a\7!@n-5bg8a8e6&Eb-,<GId9jYqZN#kf;F`4D<b4cHggO0FSD&m`G3L,g]G%KD.^D?XJ'C9An"XS\2.?J]*u"h;2e^4,laDnidCDrB)^X7n;Ef78W:)j86RopJ"HRaQj`U(k!^X8C[)[\<!(Dl/&-HKKjHSk)/32%'92-bfbL"Y%m1uf:7*oJB7+%e7c7J(;cYmYe04@5&`]kV4mlD]28DGJ2+J(>Xl#TT^f9d-rq71%%$*jq8S!eLPpHBH`$P0USG63N%6A%,<4J)iB;TeWlJqd^4l;]toA#g`(QGq3>&;PTcd%a*h?lpK2Xo;.9F2J@B;dG]Y^i0g'_-#tm:I0SU3$E^2TbZ&4P9P/srsA;R%l4ikPUX642.o&4Nb^K_FV?o'JBb;6S2:$Fu"mWMIaH8bLFIe(Wq(>&A/gg*HE127q.XDKDW-HL@6nNZu;Mj#_p^WSoAij=Q8\cmL%h3[F^7*nWg[K.,9qjqs,iFusV0t?WM7^An(jc12WgFRHS$a0;m,2rU6Wbj']E=:'PTkmp3<cD\EGRM@8e_ku4Y"Yn4';DnQXbI,J%gUoPKKDY?/DO!WZOtZ;q68`a*i&g01SuZ06[.uROdqs0p=UU3t30N,aE4Zqpp"5^nhMBF*hh3n39oZrn*_VJag?qE-f2]r)6$@)_%G/B9Q/fa,D^c6mF5T;\[Q:,]rkm8>;IALWGF\YA,n,C`=Chnh_]?Q4;E0"f<7rV0J\_1Hq'XVJ^"uOdOA[O0u:ZTYkOC.iQFAd.p%@KfS%I,^b9XD@*;cT(!(J]0DA07k\X5];eYqSduRS/rfn#SdrQ-J`=a+kH[=-1XTgTj_`M#*d3Lr].jV-OaFs,npsIVi0IYQ7KdO%D!n2&Bo%!mj[XW-qElLq$W62L4+0=^-\t]56dNJrLi\>),")j"R\L0_g+X&SgKJ:='c`'Jn3^0o(neF3&#qs/QS8d'"NGk6!a_X@%R4[lbG"O)7p(Ej<QD=9l*03Jb.G?bfc"FGP8\,`1CD8,g#&5V$>^Ieupc9LicUgDA2RB;7VZ7>.B$(>DA+*-S0FJ5q#`S=AU4UIB%m3A[*VhPTl>&/q3kAA`F=WVFl0*[*[d#$Zm!sH/'`b?$U\$FP<!DpZnN-d?(\BU&25Wl>9NCBoWT!mNLYUH6aSU,2MR&/u^X,75f%J8oOZc+RE6a*IM`%4bQu((:ZmFrUjG^HMBG$MW39lJ7B"2;cRq,i,V9V-m>`#:QFd2-C6DR$aV+#8'Gb:H2]Tpn4F97$QQ\NrC90%I\juO7HUpJ,Qa@-r0S^oo^K!oe+9X#.8>Yo<C+gg?,*KL^f@L!2B=@Pi[SG%hi9]AECG#ie)C$-$L%=cAbIgL(2u1JIL]=fVYr7,%o-GN9c+lM,`Ae^Y,i*[]335=Q&p,>#^oi.,akk*A&nfmR4*!"qmAYFj]g3XiV"noTKGibT\ZDI<iq<jk$VpfpQJ.SXdADYEV%/1d%cp>(95T^?gRR,u*9L/"ZX#.n%/NbOU;_U(!P"&)9U5<!8X"'KTNI4bt3d&bQTJAp;9tn8t<@0/aUHPgVX6cg=R:^G<jLjZ(^_$Pg%3M1ber6%%!EO;n2-6B&RDAsI16:<.&)lY,==G5:dQ9qI6`B'Dj;J5"-`0Lt2>:]GRkIju(P(;4(`J>U;ogAeBXO@b.s*@(RDp6#F%bh-:FP3RC/I?8]8Hq<t@A2V5blnl>t>ii(KW9Eh_>js2O=%1R%/'PMK]Tg!S;S5A3e7,=ck*g&r1fK&LWKE`RaOLZA83VYmTYA`2%>&W]i#+oF+4K3S*N5X,P,H)A',&Z+sE!Lt"38C).dS>*t"a0"X,2'(0InT2IIR&?(1AqJTGK,)nUdc=[$qh%daQ()(P/6$-N[`U$%d:":9.#MFZf]sLC"d!S@!Ke7$ZP\e02m9eD/$,a7heBM(YNKFP1E,LKmbN:NHcc0"Ih*JS+J4ZDQrD]*S-2>TG`ZKuoQdW."3[UX%AWg8VXC-&3%igp)DT:W=a(6d.9)1Yi>W.NnU3KqKC)\lPYj-Y;jS=On$d45=Y9^;KcWS"b"_?>q^%1Es7.;`?/VkMr]213,ONSqn%-&R=cl_%)sWWFGuf[5au^WSf)AkO?4K>)kC`!6!2n1Q6X_uW>L3opB0ng-Sk4CC^o=.53]0]_W#h4Ekn6;mDM%-Dt#6uoNd4uEQ=%SSfQH.Rue/rK;S.2$m#SDng0Y;_gjd_KcCm`B-(m2AnO9(PqWgn0Wk"%J(Y1a";$1fAKRN*K=TG@P=cWp*C$$dWPJ-eJ3$VP*9Wa%E9Z@Y85e`2(KN[<5nC7/^-&Z\-Ft_X``31)3I?cO4arTW3SdhT[j;;,8N$n_IE\6c^WGF4-D<8n8/u4dZHUu4@=q]q:4i_]n0u$/%^2%7NNH40CajMohPQc=EAh@R%:gWX],BsVh,k1G=X5pB?)BsCPJq0i!m0I#*+7gp@_;GOeLr5U3'.apG6QPd`Y`^9Q[_BfKqdFm\%54GrUfX_[Q6$sT/FL-4/M^:JOfj8+"Z/1?QL$sL_.F;Ot!Wfl&0QgeR(XYD3I*0P^OT=9[S)F6>Bct&cm+4U=n;0ea-k27EJ:AsV%&7eNWOo^)"kGSH2P"^ff"WYCW<u&=L6b6X4Wnt\BJ.#*(i]i01J=6X*H;['(1K['nJq3n<+BXc;8L1b_'U1$ITa;IU.KCjY4HLb7%Ab,DXot./t6,OnOL`SNW<O(0/@$_P,PJRlTQf1Q!S@*@4;ctVTcb_&l]j4cNd?;"@i7V9.@UNN]8SjClN6T"N=u?B#b_*,kTI]cf%'AI,IPTUgkDCt(`=\#MrK3dIl>:ZVE_%J$='m[V?#0R\b^-$BfZNT2.qA#4YC+`odjf)WPUCP)&MD3hc>_9Y.n!P.KZ!8Xn%u^\U%+-)TMRkAV/f4uDQ`q.9>=Y3Y^@:-!u[iiFfPB@'Mj%T.&m30ET]PX?](5V4l,-BA3&DfH132VOc@Ebohakf7('tXGpB:1T>!?hS8%XX$AUngu!8EQJI$/XAXTfHupVD;"R0jR+J!C\%Cn!:"04E&1iM_:d",^WK^\7#%08EsX)kQ4T+=&F+B[!UOY$f>Bn@P12uWM!-(O%_EKuEE;[4?'-[)V2rs-'5W#i-OR*he^39[+JqSYI5l4-lj0Y#Hi-6-gmkk]>UEjhd3G7=SoIC2`A7DSjKgN0l1$?MIP4=R*NXa;!%pGFL)s%IFYrHH(g0TTi`G"BI^:2m_hP`$Gc"$'kch9o+^D`scG;q-O7cpDn+Vs^g!M'17f%.dT;@j%1P:2YkEN!/.c@usj*\`l2@%L1Y_g2XjP;nWQ,/8n5t;!b\JE]Ws)bMR)4S2ZUt;MFP-b]AeQNegfMQH%-V.Yso!gRNQUu73h9CY2A8#R4(oe*1CY2BiQQ3KpkO@%6KLTROE,#%$?h0b#;hO2_=T&$+B6&:C44nQF:h-bnf.4m^G#4eO!5PD8l/2b\NaV#YuEC=\<R0*D$@jo0Bgf]i*,;2*u*,u5k=Y1%[6p1ohcF_N>Fl2gp(&Vm%%0a@R3"MH+VRY0P&(Oi,aH$JZiR6jZCo$bDI^b'g/+5N7=lra%t-'$>193G.A5>1X3?]DNAOM`d:1*8%$"3gP+EELd1,MnRi2\OimT#!p!tDZj??&"LlYIDu1lGe)`(_QO/?mt_0KnHfr&I<bPM=/b#es_J+`]qWQFGWt&q!7PT@:=M\E`b#%W2942W#TKWVo6?imYI:kJPAn.;q9*UV'B@NOn>s)(Y1V01W<oWX90_E3-c<"Es/6+ONaVIT)/JfCq6T_Rp-Ke3JN*4OKS!6>L$b6%(mXKQ<!jBSc-%n&R^[#&8Fgm:rUJ'2BCcS8B;I6Y_<!3fCO6>^`+n1NGD]O*<adb-KRWZNdm2Zm!(^7%!`F"tJ7CYG`X\roZG[V%%(MC'a+5b6/q]AM4YAaFo1%IV4%1nNPWh1B-gCc9G?@RtL"9.o4'f/6&Ub7IM"4sf.[NHmoI5S(GLqSG`_AaL1j>S-i&Q^43ECiRl%#"r6%`C8'k%gF?-A5GVn%US+)!\u47I"ddY?02E--%KUtpXK_6T+hJ?;%Ld'K=9G7oeM[r(q9f3AO,UN'r]0U$4-4&W&!9[6ViAA%.9.KH.0c4rgoCR\lD36UQ:Y+\LsC9Rg1WDS+ne>4#]Q9`i!+$%CQcD"AT0ge>%B9L*FA4P,Zb$>iNiX:$]]*/T!ClZ/&>sdEh9C_%k!=2?^s%QK]9*esp^k)9Ll\d^#[-cM"n*^-X335N*:F3gb/_Eo4,P[`d1PU36f;\@LiGNcme.o6)/IpMGboOl^(>d.WDLS?,l,Cn%H/A-IRSmW+ZOiI>e;/OKPEk*H3;L@&I?:L<Im+\$-$C(p?@?%9HSVCF\ajPW4P''884O&jg=9J?e8Q"+9_X::J*,c"Rik;mnS9]5%0K7!cK7O+Bmdct-baF@teIa25,NX*L,&qYn40dXZ`UkBO5.>[K2rQAf><TR+,r2/,+'5/i=1pS?('uUrO7(tZ_arGNC^`ccOX4O#%^VPQ)VGToi#tY(C,6Ue&0=MhDqr_lNYgN?-IZs]Qk>`7Q"HTq75RcF1@W;Yk,8jM&9fW/nVCiuk]2r:&=J8/QOWNoG<O&Br/h!GX%>rkC(Ag76K9$^M2)aiV;5(?=5&q&k#UgkDOOQ;=\j;`id1FR*I&%Lo5YKg%W=$Fr4&m@:(GRu:.[maoqiupq8-Bm.`P1[Hg5U"Lf%b_5V:7-.d&^(7TMZ^:5DVDm6N!?SDEK'\PB'bdLXW,;`JS=qoG\ZZ`jiAM?Q<)UF6*t#Q<ZE`LT8PI'C?GcGKbTD?`Ori]YKR!r#%RI^:tc[O]MY&HI4/KqZ1Yd;&]ce5V#e6>hK?,1/ScgM)2SZ-fr]eS0JIpTO\iY/uK,ng?Cckfq?dR+gB90rM[>HZBu!PWWHg\(QZ%:Vm;G[\J@<[h]t"q6^`DO@VXfoESF<ahf.q\;G+aO`Gk%"3HJkKY+-bAbOb:.jb*f>$=eE/+D3@YJ5R*]SsYn$<*iF>'Xg@.q>an%rekEOafTOt'TZY;<0TaZYA",kASh<4nufr]aj.aO]cI;A6:TPXYIsqHmoKR:+Z%Mh(13%LYq$HF'tJ1.OJU!M,s-uo%Q,XbdAOq:%NF2*XYsCRF%MF'j\L*R0N=gT6J9NkZ;6%^X\OleYhhg@*!3&*VHHt8aT^f_kZ(;kZ`oJC(.=b7!/R/E7"g4@\gQpf8=4)##ic*>T%O7W&k.C7sFg94S3Z'u!cq^8R+3Qh"UVb;all,_i[cb+M4-S\:iObL`bMeO+3]V:<U4G6\LP1TcYPCEs1r)b;2PnqZCqoVjQ;tMR>%gP*"O=kuS7`JDfK2G)DY>kT_+Phl3'a-8i`f3KVA>hS(EgO5.;_nGTG>Wt!e>P@Q2?u]kj@)?<6^..K9aa;U<n[b`D`Q+1NMP5Fs%?L^"ihWh]3lH8c#]R]:\If9C4o\'@$$DY#kY6]'J"-Wm79H3/Bm*r+-U.jn0S/A_dBq?bn@.a:4Dh2LWL]@77=]>OB_16u6:"fik%"tJf#lY"BLTO3_i^DT4k:2pnod"(%7D!aq3_Q&GNDCH(,A/kOPkt+nO'f$`YLS6^d(b:='o?sH45+$Xk$f6O.KI,`5NF55r0>`bQ%lD>eQ536^\[2)N+k_uuh<I?K`0>*;;Po>XSfj.*JgT7Ge&)Q%l(cYBYn+HAY\7rYq=/'MDQ'$!\*/n*O9[suW0Uh>],@?T;:i>$X%L!>udOF*=oC'HLEmVOVHDh\6ckZ]-?L(`>HkbbtC,Sb72-fnD:<HkX-^u8/8n1Rt`jJd2G<J99[NY5%9/f8W*/l@9b3Y.2/dOsT'%!+RRaZ%i@&X4)FJhVcQ(CZRYa8[/P>#g"$!\XW?.'J6RDfE7.F05MLaRB^fS/RU2Sg(DQ(CtlR'?.tM;nF@dl/P-Etcd@Xi96/0N%%aLk$$RBf$:J9i4Hrq0QX"_2A-rT?%qu!Z+5:01q"9'.B,8m71GDTgcHYk"'R>D<8p()DpU!iCaOnRKM'7oBNN%(+YG(mk&OR3fI%2,%XkSljUH.Nb;lLaQCQ'O,=j>#8TkhLu_iWC+fj9Z9Y[n4\E/bP-9DjDSgV59</:qogDbMI]%c,`S]:>#`H^o-r#tgklKpg/F';%c+H;Us4>li#rgHe>if9^B/@7Roks=Xlq`V-hqQam!,[KKDa!/h0/F;6BPJSE'ZiQ%;ei!D3^g,eE<\60Gc@&U&&YF;Kpf.ZNWgof%dG3&IKZN5j#N+8d[2o<R5D&r\A>gZFf=O5i81MjaLKop#ls#rt8R+%"efRu<Vksl?/L"FqW<KK4lKe_u@SR+=%Rk_PY,%ZPK26I.%D\Nsi\b<8_)YaF$D>8ei>mB[&%]5>@coFi(_82k&!.f0m/Ft1p"mD$3P:e(LDblAnm<CS@f[\bY\CYh%bs)aGm%8drEAB>90A0nr%pbe?J>kgIJ^#sM5*(qElp)9@(cc1TPGe:HRC/M_THl+=_"?\s;7EO#B@4O8o5e&bW3*emrqIi;t8PtL#dhmp]n)@[SftlIsP#gEi%mP<o\j#^d16V0%^:T;bZD^%:nKau:i=1+rN/a.0W-2Lrpf)$5fn["n/PpN36oou"ooS\m5#J+`=-aRbr6piNj<kVI+ed>e2B`.k@%2pbOcm[/WZ75q9i%F+s>Pu@)DR^4EW9">$a#>-I]S@a(R/j3)Cq:6)JGVR\8<>[:Z=U5)O#EDR91IY**Ue\\cFhh<tDZ]A'N&+:A%ArK"V6I12((al@3UA\mV@r_/=FL`[u_>ARPTQr)Pq'DNP/F%\hbJeph[u\[HHFQ(NZuQAq^7A-J\dP[jIU&L'8,6BZF09"GS]0,[%N,!E1CoAZti+5f7RQ.pkL:t1%E\gf**b0u?[\q$aOBM!k4RgbG*b)De81K503niK92e^A5l.`uKVf+SW,tAn/7Xffm!8t5GD?O0#%loK*V<Mk"@;9;s/Vo$l3I*5Nh:p[1_/!&DFe?N/_Wb0mqCAD[tP>[U9dRe;-qbcj#J`a;+OL>2aZ`&nN^\TY/Z&f!LZ(2$:Cak)t%#gM7Ip1-Br>b>5/D-UE"a7AmE5't#$gQ"Ph,"l5,WiYW9W:Q#a2LUma_%Wk54Y9f!+ff]mmQJ^^*s'O#JhQq<A8,S\c8$Vq["Q'j%9HeuqHIOf-61OlZqDU[o";;.&@]f)[dtW^g8q:Fe20@Zo%d_V%?OkrFW]/JUF7=SU@6OPK]i>!UJ'(qT6MAs5Jrfn12DVp7*V\dj%X$Qj8?o,XX3BgLW\ZD&r7/[\P&WtN2"=57W/1FMh,i$X:_>&aF=Mb_%!WJFHnr2h]j6ViNg-Sq*%5!a"\uo(/j;+6<*!qeZ`F?ol%E"ufVqjV`T"8h=a"_<akM$HctAf?!?2'P9GR5I*bVqM[nG$^ad5hKJiF_6'!Z'_%Z=#_798C+f$hu>D&+4EQ*]iU&\Tnf8_jC&rr%4E*3W<A5Zgo$aRWO@PmMic\mKN8Rt2&8+b:(-oCgLI8M.4_6_['C3(YBiX!cD%#0Rgau(@ocp`QZX7:$B2s](!;FsD(Rr2rO3dnY%6u3PTmJ%C?hB-VV6[7QNjf:kIIhQP#!,2UPDF*9ZnV-BqpToZk4`8<`ThdFCk)8(0]0,sAARsC3@hdK/i_$>JL1si3G/V"7GiK4D%j?a^a9)^5n%+B7,]LQsRaDjcCrCHU.WnCKeHB[0=_d9QJ!)j&q$"R]<_rLgK9')T)\-U;sE,J64N9";MUXYns3Q7*-e'eGBne+N!%Z%?5R7'H:Tk:55DB>k-Oq9t`?P!I)AAK1#Abf,qM68Hi*-O=ThZ;lLm4NdC_XCKiVrmuYpVK]'FQ:0u/M4_r/r0W0&=579Zl*+;l%.uBS=p4D1t\o8tF^J3;0fLep?*@;7ZV"LgfaOUg#@jMtTG.7)U'2tnbQ`<,^<(R'_eR@FN.MGS@b[kL$65(6"dQmYB%35ns:(o)!%o#4U<KZ)ZWUO'F)8H,1uBBe]rs'_]?6T3K.8TO9JZ6,%_.,kC$HktN\dFdCo6Gp_:@sVWK>Qi,_9REUj+gMt#<)!"M'"r,?.n.O^%3RM?kQILFGo[t0Q2;g2-<Rr\h>1A\r?c^Nn%*5l:9&W';Oo(/LZp_'Gs2,)Ve`Ff&6=$(ehEu<$N@CJ"1/ENe8W"0Ja`o^o*?drs%>@*j0i/t>^J\FqN+#J^5H^1'4k#\k4:\[h:m!aUo(5^C`-!CG1RX%Z6fPsQ=<2UQtG[G*D^FNH?PV1;#RKR%B))DJ5L)X4j1d5gi%kLL<S32$V;P-G$511:\\f\N,SBNaiW6*cn,R:W8rmZ5<_Sl%b"-,uN%I'%GS,$FU9^ockcO%8eqTt8K.E-\F^635E-Y3AsEh25=h%htOdY6<=dO*aZh1,Q;:k+O;JF+4I-!(\qO]NYP!'j;Pr7M9/cR['c&7]Q!+S<skbLS1R:m>tYUqMA=pqLrSn)9)XFo?A%*]Q.;IO%!u^Pj#R9_t%rNr`MX(0h;e<qF2?Nd;Z:YQWJ5LT<r[@=+M<)b#Su#h7D#>uH$4f5Gc;EWQH[+'%8EZ4n*S<]9=!rUS&XfY:5">\f%lLV*Yh(+k.'</:6M*[2Xg\^=2Xnuh)T&m-7HW*f;1U>%gc[Rdk^l^LSEK$qIRVZRVB/Ti)jW3.S]lMW.'!IfEB+""/a+n8;Z9QBq%9#?tF=hrrJcT9?Q--C@<MCV?K"Gub.WNU5s&Su_Trl1qtd=[F=Rj)akjmE)f]Z'g@&AtC2]aVX2eG4@#9BZhol`gK%jlrOb'pK\.%pq\Kue;Da6VkLs&Z6pOjSm`_b]pG9o8'%diiN-Y%g0f6;]_IR=m>r=%NX:UoThc?WN;:"+ThD^!@T5EJa5T+KO0V(XY`,NrnLu[/%^cC8W=b31KH@/8dHmt.V"i2Jc)PNiV:EO;6@0DGFd$KJt[Lb=`a"rgX(=Cg=r+!Z2X*WhDTU$JeVXo3/qQHsn@n#uPekXOA)#g/1%JInZ/7NL5\a6f:PE*Kht%3]S'D:K_241%#R[at"mb#21flNm*qHUR',[C.Zbd\tHhgm=C9!6hFs<Ti)Nmn@G7eYp"ofE]bRD]7@.%EQCG6*F\G1d$bg$IQ]c!(?JV_[,F2YI'5o%OJ"jPU0qWjdQZ&1DN9E51!"]NA]L`/K5]qZ[l)=!Pd;kP0)&d-dt)6?!6%Diai]Tb%#*#oY1H?r`M/0I@TG\L1N'^d9iO,I5l9QfIZK.:T#$?6!Zj^omQAR3M9'NnJi/rl3=#d[f)QL[H+KplGo#]Q&TP'.H+cp]:e;j][%eY,\F3>"r[p]=B15BD!?OQ5\enQ6YAlWV<##j;1dAeR.13RM]?2XCN'8'U7jeZ%kP=.edH%Ul.JIQO/_m%3EkE-mB7$F[m4j(Q<%%Lc8rX(9f9OQL(^N&R&]6:8]Xl0=+#Ln1>.Eb(kKcXM*#u9uctfd]1(-OB:9D?/4?FNe5KeVrIRqG3A&6>q%6FP(=u]!eT<:3L46`%l7FU%UY>NXjbmZ'5cs]Z^-J2XplQ%dg8MDRW+8-!QRpi.P-s[ic.K:K<l7eUd1u[LrjJ6*2l=S68DRS>0%'&0gXd>7:*L>W_6aC5%(WR@Z134G1(09#MdF+trUA<:7FpkT5'/ZACrIID+)3D%cc;+!_coA='S67t[[qaiE!!(]'R,FL7<7lC*p8t(LclCcSKZ$EI8F`n@%pSDfiQ/['b3=;nB;`rr1@[nOWQ=N1=GFHN7Ms$Y%90k)\7EJn?\9Fb3jACrdSl:euIMlLe3c7k[UM97b=_B<<3IJsb28!r$N:Wf*%#^[ZD2'WlhMu<[gMRGtV*:la9C)uSR+#D.FeVpd?3@Z6XONNNkShFk;&7_)Fc5>2cr`r7]N(GKm`Z[osC\3Am#"J-QMd*.u@7Y_X%3#6*7W2]LV3A*Y)@!e#!#I26E5&&PmAK.=OIuP;E:WlpKI2fF2@KI4uolu["VIpWGXmu?#g[eq@;I7#6mR?L>]lVp60e5+<ke8]=%qf*T%dQct>i>Ql-m`G<.i.T&I`qh3;ABSu$,66pB15.N$:a@!6mFoFKJGK=t5#[&VHZWFoX[_l\6KZ:P3PP(fF?R$PXqLDq>Pme;%,KL[^;85/tX6?(hG:H`!19aOh'!$=CP_Fg1<!2?/XXj(u9@)J7;q*12`UfR/+dAID1^+TH:XOb*k<GS`L-\amMJZV;p=`dg=\i!i%XI45+R."mh0,0[b&sr,:@OaMrm4kjGl8.@+LY;5CI[Pn.nJWjbeO]i1VhkD@-&VB&"euu(Ri@U;R3Vl_G'#XG$7:3"^9Tp)>kZh>%^OUb/WQ)3s<uEAedOERH"L4#n+9-fYhdRUQ(%02*JCF?nffJ1%=G9W/X+cKp".l%4(0LI>=5h-s;&"?eaW4Ol?Y*]S\/;I8==G:^%*W07Boseq:&I#"9k3ML1"rRiQR!#8h^<D3O7b5kIWeduaGV07QFV14`ZPCh4e#cJTS^**S@q!WRMP:Y,[j-&<P1V_\Te11qn?f$a%ji3B-,Ds2RV5.Y&`GIJYL;_;p(*Ud6?IW`g+3sV+8@*k9Q;8d^`sH[l]6qYgV':1CL2M@H@]KSnVj;Rhq,CKBXC8qG:E'd.YPBn?%90^S=9H9*s(nOT0a-B8GC]4mAqVR-/A'f)Ib$K64?l2`/#Z<[IRZ12+F0cq9PBE$k?kggQ@"TtJ)c:_^oq_c#ErNs&F)2_4.JUXV%Y\$,L1RMs)P!G!-!9[\7>P/)oPURall4NC@K2NTY#ltQ0U22&ps"p`tZS\e>E;TY!XT0onlk"ffEu'V$D/<dh=;A4MCQmT-1-5s,%`6KE!&rP]_@B`q(JhGbcXB+jGWm7Oi9cCDS6hiKKQ<Y\nK??hdWSs"@h"&C`@"NOU!B6O^17oH<9i[.4OBSY1_`[T#AoK[5I?>?q%bj671Z?f0T[oQ("CVD>6jVXHsb"*;M<^d;XH]#.T3Zb"!n+b`0s&@+n<XD^GSPtf&--%<%1q=+YY&D:pBZc/lIoJOe&0Kc/[bihY%;Ent1H')W]FJ@,:>MZcb47:<p<'ckiLjOA:/^>IR3IUoPCSe[T)'\.$g<MN0@)""?CJb>T)5s'k2'tGfm8]%a+YAX`bK!/ODs:>h%oLoT:lcE=3Cu;?sZ+"L4Kp>%f/B=*NTg&]oY)>Xo!jWKk?4-j!OhS]R_MHr9P<#ga3J+-hW5-^-4lY_7nK?\(7Lb@9mYq`kdcS$p%pthtqa3635)\%N9WRe"ho?esfZ`h:/=!o0K!;&W11,RA\PSMl&Unqoa16K:)86@$QmaXX6co@Q!>ba`!A$*,a'VQ"IL:>S[i#T6/%g6(2M#2+E1eOM,Qo`4/a8BnUe--FOT$o@6O?ck!?#'P[Q9mNPf-%Z8G!0mOs6ScPiBc3%?3+qgRQL(,G)T(,:aD77#IFcl,ampN_%ZI@%g'c#:$P@pK*r?0i.Y[C8M^4t]t@WPiI8m9?ubgJL=)+MVE^02UIP2XSu[?EC%@P0!0[3o6/BBWUL:<]rMaTX,"V&[#qo7%Jk%W6;/A'ohS]k'.W?>,0P_f/Af7q>,MJ^$I.:eilEZ#'_<:L96]uXR:.,o#J1?GG-N1^#/8VeW'\K@]Z'u3/*SoB&be<>c]-Sp'eB@%:6ADOA_F'bW-]r.O/2FW(qLqSih6[2(WH*Ye5=tIB1:"JElEhl)k:$mG7VZ0"fI@t#%e\R,r9]F6Md9OP*%ejWBY`?(E?$#9u&fZ%0GS,,rW$?4NKd"jGX3OEPRn=;f&"k:Dog?i8s`^rkEX[N&ee=Ze([4tJ5+K+Q>@J(Y/<LNI!27N`3ctXBI^:q+R(^LYgRXblt<`<%g%X4bVlaP(Vqa[8rF8fJRl"nt_4s_=q0IAU)U5#0apa,gh/Ju]A`m)emcgfq'JZS#';3SC6+chIUD:.H>Fslr#,4$pjrJHBCSYBT%o\I(kg?tpI5&:=#%2<-f5.6*\5ko@U`crU5GTG1:(\-\\A+F/RTAa@WVqEJ["FMJ<BM,._l84K=!lS[bW*gRpU<^K$,>;9TW`Fh"%iYKsA%376127$="aX=1TP"GU=2BmQBB9:BFX%AH,q2F2N0fOQkRR8,]$?[?Q)lhAA7(aCG"FCXk7m8]Se6i)NBDPSUrF*0aS4dW]%c&-+,kBeS[_TL8^#XSXO<@#rRnR-bXT$0gS\mYb\`GH_J]U\f:'KhE`%bV.ND323uVTaI3)rQ]O0Xpcq05?HMc&Sen5h;+m6FInJ%elDMW,U5:Q&Ze'@Xf%?eDilAH[K=s3[!.%Z#I;Y/!5/UjKd9A(*r<E_HQ&i\D$'kH'<snTJMQ?iF49i%]=[6f9Y7`bPd72"&OS9>%61'Y7>%m#gcC2t`Wg2u!8u-$i7=^2/'QQ6'MHq+7lEP/\-5tIfP*H,uSjDAh]R]N<:kpU>Z9*<XQOhnKHda&pH`G5^a?2CYWlJ*k%mC`djKi[JZG5%/QJ(F.S.-`4<S?L")*`Q&fa4PEVQ/u-h"UlXIW#!r(]@B",>9Z1:Ios*#.sb6O3A`lPF"_4tUp.*ZO<#gn::eA,%IoZS\-P<'`8Ncdt*U=@)VEr`6\'e^HF\r^5VU84IeP8HQqmLUoP1b2\1ER$m$\c[i/Y`KAH@VhY8chR$`,&,g>IE0aS2GYP2BHdD%Z:fq!B9#Nqe/sk#KBe&oCbQ@;jFDIMnpo4kRUS?QW&t&I4R9SQhUfXaG@fNQcYrS6Y2ZJ?iT?aZja1)OhgZaBO""N2/7WOAW#_4\%UW^9ud21q':*([h(%+l(3=_Nj<#o,ePcIuBFJ/eL?=*lim?iPeFB&^.q`^co['lZCWLK-[__+I$!n,%5+A!4uWf>)-V!%//Nshb-%1Xo2"?Eb8O,]=6T.aX09Z84H%fm`s\FcB73p@DT]b9hEf'LqdC,!3Xc0_2ocW^H'Kl1_>kUdWHbK>Lphh.3Ir]km/P7m[qA);Ot?%Q.nc/9TT30D+R$Ii@I<C#&]"sj"Y03R0$OHlc2,>YW>mHUU#Sea]J5rgh*[&c6.[]bT5fJUh%%P1Y\A`5!8F3d?Hd"W=]8"nGUsM%nsH\hEAm1PIj(Z)!]lKkRJ*W#j:M^8M1%N0lN``3Ui5:lKclR2mZJq'O]T!]KPYG-rlc`",n_/Jf2UG^Pl'[,`6<lGaG2he7E>$W%g3KQQA+VhAAKrpIb<0mX+s@O@b\Z[a3'NBY9<^[H&a&D*H8K^V+m98;JM=YD6?UO&1J"hTIpm7#Wc0CY0C;X(5*5!FJ,dCls392o%Z31HaU8II(I$fJHhO_m>91l?l'I58M<Bpe:7LR3NR1@$\l+k%K.Q4S]/Q+kY(FGb4:5]-6OVs247A8,MH.c@@cF$`t)[SqE#g?Xs%Rp0:ff@)jY';0;<p+qCk?cl%a,EmSZ6YO^CnDR1]osTHQ=CS^JZo<7t($T=P_N&,a6j'D%RNt&,!5Q_Rf6]r\pm<$O1n@-"d..TC%X_>:m'eKJKVcgLcX$B2*KBoT!>a`fg1csF;\0Ib_Ynd!F=kTSDL!B<l+N8&'nAsd]G#8nC`EmuM&7NM"C]&u:(k_!3Nn/V?:R6_%%q]?TsCEr;5]u[MQ>db<@;r,;jKLGUtZMc1Ubt+f1_fY_c-f34i&lXX8e#EYb04NZjl544\_gP`Kf9qMYB@C%Hr@#L"X&TS"_n!>U%V"lk7lLkYN;9\%+(t(5tPS8XhAs8]oGZ7p(>*f@?Ts0gUUSe34@#9^Ul-+b,7p^Of$!C8o,.Ki/LdCp7D<),ngb5NsJRrEHlML#P%r:b'`?-VOUZW)_2KVG;3baHt6P!0V6S3`_[#+o:8*@4,B$$7^hZ8_AQm+;]K/nEt)OI0]M@THiQ5d6EB;>o2F?L8FI=;#[^b'8+G%E4n[4,56W2He+cbZ%N1gZNIZ"%!dQp-UGC2nAqT9aV8;^]/u^b;#=9=O.O5db4f8`l,/8G31UJ4.!Z7>Q7WB,Kt:Z$s"';3?qHiR%Qj80&IcadNaY1COZcCQjgr+u:aBq&%db9PRa"tf'CZd:Y"\K'A1(EZ5BG2QICg!meC"tUEXhtd;2X="=bJ50%Db(!H4%%h*R'CXs%^hCV`boVB,7b(6gK%*XUXC4:mqgu3Ag3O2cAL2.[@(Yj$AE^XbM"`;X/(9`QI?dsd'aR30ZMg/an!j9r1'Z2i<O6tiH2)`Lef\a2%B5=\3Zc4GD4'"O\qPUuB93NhDg4g3W$,?[Y7c"Y"%tE")'agWeeA(8:H&.CZRuhae?.L(G\/B[/&WEl^O3G\`P!`pF[RTL'&j$u<%ZZqUu`Pu'fNM^0RX1Tp-:gO/&-"FU2h0%WMqHuG[qrO:6%bLl^P14##R7g$D$VfT-.C2c`5q3E$l^oK/5q^U4[RZW/KLV0$WpdXa%,p)hYIA[_$0c%p@S)n'bdKgMjafR%b\am6tD%lGsKJ044*@RfZOW*8FNfdBcUkHAD-Tg_1Dr(/rDA6MW;oa,R7/$5<c!V;dY+,\g%Yh,0TRJ4:1Q>tD3*j><6MZB>'&[X3RaO['4!0[BqUOedXeH>e/Ulp:@8>Lk5;C;0cO\<Y$CNe!3nap.[5HA5Qin,?QQDTF`G`aS@%mROCTF;.T^d%p)?JQ],!PCRh-^HaP-_d[Ht_mV>c/)0>4c:'K8XgUOn;1n9u>oHg^(".Rp=MY2gV$`'<'c(dN[VCLg<bn$mV]@@.%0..`]EO-l?=,C=P$3W%9/*dXoE8),.n&h5:a7c%B.uM*Dl;=u`,k\gIS\3d\PJBsM+S\LcfjZLLh1\7sL[T^p09:P!eQ.AWS)"tr%GN^-DEPi\]@STOBn9!`6+Sbh-_a?p/)Dbq!T>'W-FV3O]#2*;r0!&$r2C#*AcB(mYnF(uI\t(1UW=h=2lO8lCBin0o%IT/9o'i4H%C^d_;s3Ikh@6_u1m?_b%SG*_Nn/2k',,h03M[D?BA:t`oI\?fM<c`fB_Ns5bGrb#:+5(!QRms]"Ahd$(kF[WP8-kQo#7SD4L)+R]%2+V1Mf8DE,Oj2A7Pe*R6Q&TI$o]uY=jp2`elol>iXCNiH-H4RIDj,i%qqOdJA@F:8AR9AOgFO-:[6O'7_8SA#V"lhIBQj<nR^,)g%n/8r10XEeIjoZl7-_gH=+qQ';/*O`ss*^h01a0b%`,41qIU\s/d>':aS[`kqWRP`1fgH`HfAKX!`l;7&CLYj6muUc/Dp5Msnu3u!%>H^L84PY\Z9!Ab1_6DVjn2=5);&(Q;Y_Jp<DBosW6u'*<DM7_7,!I:((0.&'4O6N)HBRmGNUr6]!-(I@ZcgK.ede5.W,j6(9R0[$%[j\"b$&N=0,m:OmKdUuU<cVq>2bT-4"0T5S7pdEYp.`TI`,4buMPTW/N#V;eh06p,]l+QWgp<2(ZOuEOX>f/CZ:/T#N@Z!^R8'2_%T\a<VZ`8bT9p`_#'-B*sN+,>6B6j.%TUJGb8Q*\B1SS1fPP<;LQlJUeXL:s2\IGUOM<a[FL"bllZ,PUOC4L69es2"php!!DER-.*%cYL]sJ83P!B=.Q8mEsqG1R"5F+Am9]dAWU+,*U$_na@CH8'2g5R%02adPKe"'>6fa2!4023tX8X-V7@SWIM`(Ka8c'!]A'=Q5uc^%MF@:Cf&]P-ai<uO&%h@AVeZ2!YnpZ=pJ/\A,8TYCh9*CHT7*6+I=\7SMq2&GoH%L64*6]NB\8+2pMpkS+P?)d2@]4<h2-)T+u9nO%gW>E):^:uWBC^%:ZL/s$Dl)A&hpT`\g4Ra#hf:g$3=jBR\&[5h;@V<h9)'[</X-."1/YS#rHP&2e<OgDK#dd1)2cu@dtk6ME-/YG%D$Tj4-imS%R_iV^UdTXZjg/$O8,V(D-?qW/2P=VD?clp7cIuPdlNjRGMN=m_WTonG%?^6K1@?`;K`f1FWXb9O-6jD1B8doq":rlp%USS"?BrqQ5WVoHr";;rPMf-UIN1g8Z>7N`M1kpjUg0mdT(=pL6T6[fdQ.mc#XW7iF]PZ2+b+K^O9+>FO8edumNqKl[%srEb\a*pK%'/mEC2-Vl/APESS'>=I/ERq2$?Ja'b4>r(tNAW;eX/[qRib"Z"&,%(1Rh<_<+ou#l.)fcb'cm;QLMc_@Er.:'>1`/LO5S>g2GtoV%Nsis(JHm(pHrVJ7&(73_RN1"Vh(+MbpfalL9A%PN(Qi)IkbjI1oUJ;Y.pTFQ3-URIS0]b+*!?a!$X&kf:878\On@X740*<CC9a<n%lA91_"-VY0@QMqi!X&L5OSB^@_EF^apo6gmF;pjB<RYNd")i@lRpJ[(SLM%+5\+4AhBOEf+cgS=C^1=m%?YcJ>,tQrq`^DkFV/:r%%M'S=X^m"l;;(XD4:D3.6Vh.M-0p[InB/kg74-l2Si)gYZtTf#>kfT=of@k9m"#Rm(IQ0^5fNm^1nPt3T<Sq'R"#(Q@X3?SrHr_'%<e0b5%YeOg7UiTLOc6%J8mu,5%;X:ZaJQl0mGT!gHSoZrmDjc"&).rPjA%<4a,:46C+&dQ4(%46?qfud97#+GDJYGKd_C`BmMk\(%=b*6Aq)M;iNkMROA:\qbl4n?kQ;c+#(T"]jS>\k%l6fWRH];'aGp4;2b=kQDi?k8%-r7>JQ0Y]AOuBc<r=9#.X/fX/K68KLK!Y8O%$@bX]#n%,95[r>$"3eB*SBeKV1;M\SViOdQ5>fdXX'i+5b7`5L,cqQF;d09CDNamfLpL$E:)_kLU5Nm'o49G5(c+KmkHk>I*Q^EG%Ci;;VVUNk^YGP9AS/r2?#+9*c1=9]+NZP[Zp+uDBEh7+1*K"LpFS_7bAe2onbpk9"NOkaC9VdN#1IZZf+YQ>YOI4`Z>&*9([Q":M%S[!H&dF%N\Om^e*-E^WGbe-*m"3D9BJt-;='oEF`8KtR\;g/3E]:n&CU'gd=BZ4jm\iabri$KMX`g'[Yb#0SHh"8"'>;RGbJlT0^%&gtu@]qEHtJ\Ij2@I!_<,-HXD\OJ?CWRVd1C6tjWXGghT@#a/;-6"Bk/7!*$Pp)9?NLi&n%jf1LBj'^,RRQ]+bFU_:k8%PIM=L(L%[pV2N7V*6,UE1XCH:I*jN<*P3IXOl0Vk3DG6$$3T1LYTGFBd2L9:]S?Uj'=gC_K2i%8T%/0U`:[Y?s&Xc*XEBI_1uLIlPN<rTH*X%%b1aamc`6%03ij;gs&Y-e(M\KNQQ%Y"\D)E&Y+N=VYB*u75RaLp:HtLG?ZSV`I0;=m(Z1U`C_9UP(5FHPtC]6U!FnF&g2B$A'[#9%bVg$-F+nnIU[B&Zd53XJ.eDs:/*h>6ck&e+MkM3@-$KL,b%U./G^Mgc_ZQo.8*0(2>Q:Q@M;$Z5Ks)gIGs>Jb<j2dV_q<f0b'+"N%i1S*F(lk8nRNJtt22Y+/=k7m1jZ!IGmh#1qg/[H7U/l0tC#?iYh8'l\0U:9@P3P,T`dL@_Y4_G0>Unbsj?9rSSGq<8<&K(RFa^sc%f[Bm7r!RI()mdktN[0;'ZdZ+4g1$Q:_<Q/sD84h_lFr7X-SU'o,nkuX>2I`Wg<45odr$$nh081r4[:8jVn@Q)!N&n#cYK+oobLDh%hQO4^D?3km%a`e"Y]p7)&lZ>6L&$7Zc>%2h"s'B!\L##eja:7JO%c\DZg\2'=@kMh"/@I3W;W`.U^<sjk4;]#F%c0$^2+D@/(Qfg%PoZoCo3akm1,8.s@kirprE5tRRMM?g5I:$Y?o]sG\rGXVPUUnn`Bem/eK$d,HrWA@$Qp,MLTT/X+b1i,M%doQ5GCMofZ_r2Ti2Hb%SlWZClhba;3aCH2/;1GH:ZRpU+]6TaMLp+NF4<LpcY[G$#NDHVj',iin6/l6B<J]$[03)Jn[B&iV<bkq@>B<%7<Gg]JiqL6b2'](%n:seURa!bB,6;F&l4jV2KaZAAW.hP7Js%@GfR:jL-r[&Z*R"4Q(cQRL!G8fD]`q6Yf`'`M]t1Dk1LSM_]CD[EM22*QT]T)cn`&)L%=5THR2Y9A4o9n1>iQIO;J__NaiQK9N8@Cl`ih!*`')R(/mUg$YpQ2tpZ5A7U2hCHAc)#t1#3h(<7rlk[/_19P6(1_5e[_?pKZj0_%,h04X6Hm!$=O<uY;s/G?;0AR12KKK!dBfVP"j.GC\mVdLeOY$j0E`;<"U4>b)/f.W6cB0Ml@Y34]Y74Ye%=DrGi4q/gn$P)Fj7SN%PM1Eq@be'V:HK[&^tgb\baMi=TO2.&%)7Q!:Ga+qbb<\*X;pD(M:H4d"\@A)$b/;,$Q\eb6JI__kjD:hF&jI,KU()M"JH,:<_QoZ%etWH`D5BG]\(=M)fjtZu^i1.`KZ_"r8oNQiO?:jKCP5cJ&)F2eq/%g7e7hU#a*e,4Y2f@W&X_[j$7#si^3H,M!!J<-9eh1RQff[N%'l>lFWZbSR8N\LKS2Ge]qEe"!*bhI=iYgbJ2@S=#<d#$k5u(S?&o5506*Spk;e31Q94+H0UO!9QMR9[h,"ZQ&N[W"d.oQFa3M80m%QZl`OQ.r#HA\X,8hBi9SPHF+WJ$hfFTZO&?!)g1V52n^#%cRF1>/tZG#Dhb5WTahX`q@r%U]09i6g!0ee!jlH5c=SY-G#Z7JQ7UV%#03Ms"X>->PS9O9_G9J$F$S/+CQaV3omb7=K[!OAi/W&d3oDM81qXOj4#"_>A]JVFEZR`6UgN#^C+O:%?90!6DfaWll3DctA-4:'%$-c'\-61T9<fm`%Nh\:SoSC1bX;NK+C.?X/7OWZ2n_\g<S+hrP>p2gc'Q3L`[M?M&6m<jpRHu=-P5nHOr&BU(-p9Y?eRJ`NMTC>#%T*1YWds1EI+$IZ9D3=@In'N1f*tmpY&Zr@jHEk7_DprMe]Mc0je*9WCAp(TtXg(t+@'dS=pqj,\^lA<or)UF-`bM3kf`M&<dX[bD%7i@u+7SdU8f/F`+.jDZ$;"`Y5^(q'+@gb0GZtHl5E)l?H._BNCZE?UZ.K3KPqV2'"7()sg^?Gos+3tPCo7]`%$^%Ea'j1DS`@0%j%V2G=,j'Xl)14i^!G8a#mTsgPYPU5f@AsB?oH-L[J3lNmT@oZ83WJ3hHE68_EK0'->$%`OCW$4oDRFrSAqsV_o^%0M[:o.'lC&u@N%#!39XFjtZ^Q3`YEfKoBs[3sO76]4?TagBe$GS8;$XR,XUV[^[pnPS+U'`b('9?p0rLcg`-DPE,jYlK:.#SZn2f'-=+j^VnqaFFc?%<PKP00H$O"<fI?^;b"0FPr7XM'9fWfYH9:((IukD\&o%kYIt:NKmH(fg*;.DS)BF21TuI\o<VIeon)=TU&61_RHEe\1RcNg+BBE@%JDbp1&-*!u]m?W]ZSsD;e^BnaY0M&b,J_08&V61QG:7/L"T&W+J/KfgW7sk8;R9Rk-T]0--nL\U)4)QZ)@0!S;j4^R%@eL^c+lJ2%^OBNJO,pp\?T!2\O8o,I]2VBLD>b@g$ju-m.?LmQJtCk;r7+/`f\e%aTRc7h2aBTSQ07$TN>3Om/!`XSR7E)2=ZfRcrqJC(baZJp%eGHa`eXTijo*FFoSV*b0?l=Lekk5ff0R-RtdWcN^PG:Te1Bu-.?IH%P6UJoROL"-V1DVl!lkI#I9J;a&aR-9g"!WAn3DD+-Sc_To%k^I8BEe<7h:@1rQ*!&8n>D\CWH=\)j+!a"ZXrnhRH@-a]TEp(_a(-i)`?neITM@W)?ad8Ifmqg?2r,BkjB6E1q`O!m`Nip?5T*Ta%KhtX:"GqVt`",1g1G.o9S$>ffk;Q!SG$eMVETjT`qi/+hV7JJUq_jmLSi@oPQsb8eM*`.W*5s7NPTl"]$9sNigAn@ng7rB3:_gf"%Al\bG=mb0-Z#gaV)M7V"'N^G^riJed?jlrLC1=VA-);9VQ/#gPM0$i*BsFVYa:t'f&D.*JgG[JGh$W`A^CSY;jHrdA*-n8Vi'+1s%(RCkub<pgM&E&?k5HA&i-Mh/!$W4?4Zo8'(AlYd&?=V16Ze1/6b8YcVPVl(IG?-ZS07Neiog@l:rRso/SrgIP2F(UA20bXeb3)=f%%0EAo@Z8^`?;<\T1E;^fGCdR%loF<\<64?Q(;DmMR%l(O*Yu6%\qW2b\GURUS7p$-YI.Q$bE4Ds-6+8ZnZdoKqsVH#0`udF_B^Zp%XlQ;#7foYi2&-t?p4WOC[k(-'Nf\B_Glgs51/G,f%bJki$!BT+(\/b(G7\31^\b=-H1epWj6=tJ.m2.AqiU`ioU+R7kaMb]"3A1R%2X(%+l3USpHYRJ"FfNf%g/A8\I(n)K;m,]'i(3kfkg5?[>Z-K`d#*Y^o5the9$glJ?N!\q;09BJ?r7*,16rZYa-MYoCBj\T`jgC8%U`3(@]gPM7_3rU%"C5*6XP!b1$%e8()(i,?9*R!]GH!2YM?1bTC)Ii:>YU)?'(%e^JmqKk+AcXn4,RQDZK.:<l\IF;CfGTrD5AFS%Xfe>8(Z[(cl)#dLfT:@pI5DY>*bM'.nFg:s#>"cr(a_A!;MQdAo),`!'biJ@#O@QolG4*nKFX%?c2)W*6,EK-UjpeA`W"Rh?urOF%l4kGf@=t[tce4^u("/Vj3g\8Kee4?4=X\h'');Fb3Ee,"XB@^#'mg*QS8sK.nPuA`97oYK+j+@s:D<!p;qcdn8iT\S,M0FJ#Y6nr%E4:<f`8dhLj99*lr'Jp-Q*q#Hrr45t&c<iLpGqA,e!_V[b"m#hM%"hRZpJbEqY.)Q:N:%Db5bq6\8E&6%'\B`!8%eC)3SGu'?!b!%,BsncB3I&j_5keA900[egp3:_&\YG\RD;UF+8l9p1+V8d.qSueY[23<$Z2=-F,(?mE0);XnQdD>*OF=u;/Je\h@u(4:rF3rb#JCH%@:YMdF$ESN*@$57nXSr7U$FZN.me$*TmS057-PfHT7!@%+fV_n"J,n9#E*HQ$2XYuMZ0F1HP<HOFQ1Xu8Y[i:N2e>NOcI"na#W/B%e*V$'>4"*\kR*UVo;@;",'V?Jd%X>+bHF;A-"/l&p2U>+C6u(JPZMM_hk^o0aZM*g$4D.U@"B"SdXA0@Gf?;a1s@aOkAjA!DE8//%`7WKX=s?M:D-Dl%"mO-#!o^0B(blS-]WHJeNAc_3rtURK\j`@_,5^ss??'Q;lQ'"L:t<,;0-1k)g@Cls3n>jbi?&SWaq+.V%[:4J%]4?'>[T15J0Mp3HEe_tC')_(OUuL%EX*[jUkckBS3fI-p\l?Zb#b-mC.jXq4A#*m&N?%X0Y.q_'Sp+m#^2+<[-71>J0h)_SNS0,Q%P5ZDjk:LiBJ%tGjKkC;JH[VaP-H0RmDu"-FngB!QXnjKG"M0k%08_j^<Rcbs`P[5VdI3n+AD/,*Qe.)qem<#Q`H9Z$jXJ@2m8/*A%q,'`8X1b#4j20MV'\?B*kiAK,f1:[K0soW6iPL&.%o@Op]*/VdTS[\#LpF"qOp-B:..,13%%i`tn9/n`NbN(4f/L\p`g>?OF=ZQW%'Z8MjGtK!DbZ)j^fYi'&,>%5fC(AKACp\9i?Z@QCT<O#He^`]3`&u\JpZ?T,(;b37-)r+3;RMK=_GuJ+mC%j3[e("g6ZHTdR3Q'R%Xbm2Ds$lNBVV+Z<5QU;tT''4A9t4Zn[l3jCgXH#^#RsN=E+tUt(41J.R:gkUg\LE?QEip,V*b\g=[JPhFYEpd[/]h*&_75$=:-$K%fAHT4+L7h$Y>hM^^1@u*(Sc#_4jCK,ft8nSNUO;B:r9Io6QKb3PCd<GKh>1Xga-e@8@Hc0j5^XpQ[8K<OZ?&*S;RaHYMXQ`7lfTA%*0XVac'%K4J.4%c]&os6?6i,`rm3j#k2/=09g?/6FT47$>%RtW7XE:5dj%m6!aU;_#,HkESK8sHV;c-`@C=YP0uC$1^++t+f/p@>%$o]NXp/GbZANI9?XSr>V/BQ32ohATladS+3P`gsuo]tqV;K9;pGbUr&qer8$Mj&9m_q6:E0[+BWNgLlDNf^`hWeVC%hdlC/i[:It%;i:lb@DI(4Ksr9c$^c^j!'ee<"HJ9.W<KAW?u.JPS4k4;4\+-Qc?T+Td[BAo5S7$=Ru?7fi)N+<U:6eXZS-0b/*X]+CKi&#C$Ar-%a<.nfI+@^R?X4pX<1_`]XpTUhOQD\WKd\ZV1.)KAbF\@1*Apqdj90.;+@]gp`Wgds>6Hf0^R:if_r:`oBcT@EcW&0ADJt^@.tP)\%$nMgK]E@KQG'I:W8'XJ>18&=8Jt?>8[F;I0:E/Y+H3<?&P'q_+%V$hSNWti?-kH2<fRA:FlAB`q<(0DL-Kp?s`2A2$4mF)p7IZb&%J]%T9r..XJ@*'H2A3Y'g^Dk'2^KD%hS@TpE,K_Z"kDV"<E6Gusfe?QkiA[Y.P,,Br)Ymg_C_*QWT&!8()\$as)R?R!&_:fsbeZh\%KqGVdb'WIYk#+0=)PK`E2.%C?YVIj8434Ah^Mg8N%XGR6G):QN>!MruI1h9lFS_ra,T0JQ7-\q>Cgl!&&c>8I7L1hE@<,IXQ%lUK%^5rr0@OX4PX?Gr&(>=f`C0$g8IOV)A(MlTe4Ys+p,TD+IVC>_Qd4+((Qn"I`Sn,Hj[kW#V%n0-/$9Spe!8)Y"8ERD;OL#cPf,f^C%bDqks;ie)F:C,Qnm:d%\7nD(PM<$o-d_`'N@8!FTkp1Jn.7k0Y4Vf.Jjcn$PH=4=Z,o#M1fU8P3%i-EIAd:%j0Aj2V=ag<u.R1:U%Y9EK'g$j&*.KkFY2+che>E(+FOKb"PaM3$UfQa"/"gl_<-&*3R/4<NJ@;7JVGdu4.]Nrt6'G[8qdnhj[2XX'6ed-O.Zn\6]R`Q^q%4k*+j\nSGcV](4>SL[GrG]O9Dn5JOaFJIcY_jg$h'1rTsGE(-'Oj3@0&'[W8m&7dNMKh[NrVX[,;WIC)s'Y,ePe?a2/u9(H)qt'm%DbLKp69,T.2c5C0ktMqRb!rY,]*''Sc8JT#*3XU4f($$\8>nl(EL[fsfF&L\de8nh&ZCd9L11?CMpt>)5+<QEEg04/05F)U%b3oW%VohS4+IS:`.5:SZd4QPFSrL,4&1b#@lGJ;'f/LO3?=Rr>.#R-m:F25kB:u"`W<L;eDV9pq`K$6P/hi(BM)hC_$oUpkNq:BE`%J8I%f;d)33CpVU<71qb>GY;a/O\f9g-S>!@Lh?JX4VU+c_Dl<)U,(L(<nD-kG-:8/L3qT(.$)iG:SCB+X'=T$%(e'l*d\kqL'rD/2Q(K%).F[d.mNu0MC)^<&XT=@$Zh-;%G+X-*UME,?"st$00U@G5X+\O([hY[:Wn@$cmBO?fNCc;VGfJZ"mR%m)NW]-;nY)FD:OU"%NSb#%af[D[IZ<!e'p.>aEmcj5FD24>*liRrV'T`4*MVNB$4M%KC672M52c>,KC^g81T3*s9[mH7^Y(/oFT=6:S3)[ff^)FWaH#gVn_i.=%LW+R-^r$Q.ibM^=It])aeq?:jM!.-[i;k?]7GCr0OF(;*)\=IVAZWb&ZHoA\(Ot'JZGe")q%d3o`lJTt&&096_l,>$0NG2saM=sS%PiZmb2e'nYmfa#fAk;E5KUDqcL0="i_Z+V91jS6V3nood."@,M+NhgUYlh>q\.[7E0S:;2'3K?h\9j^T8P7s/5cI+?+CRK2jV-W_%``MiBlBIKf"lp,'#>N%&>-m\4cfBG9:JA%J."ah(#%p.d5'c/(;BZ)%(F%Q2,q$7<%^IcZ*r+JX%JXYCTa4o@5Ch]a\C9M"CP&Xp%QXIBYSU;/!VEpI`Zu3U*q)WlT"sHZOa2i6%qqb<Y6Ndnd<V3!p8Ch4WV"BoLpfS&_^CWEg9eOQ-Zt`Y5\%>YG7(r\jgR?\KZJ&H`%.)8^=*$VVIMT%k0"0*$t_6#01*)[Ag'OP>H\th#3,l.Ro"q/][67@OHV8OK<kPbpnG^+4-;YTZsko[fam+CjI"?)-3jm+'V"N)67%>QneA&s,WN^FJ'5:s/rRCV^kZW^[b7e%]N6A27i:DA*Z++\sH`?K7$<7R-1YIpG35M!grgFpqIqU'mg%@$Zb*#\LY"bjGQ%h#$sH%`kN\qV:T/hHW')m`R-;C*Q`0&J^V..FHS2?h.:GEg+&^3Co;BJ0[%P,#pa^`rUY7?5Ca`ra=R?"])p'I-$YO&m%GZ%]T86_Sr]2s%-/aF6(`Q_cA0.n/`'dAR,>_*>8kCPE$K3.cBsNR6H"2iWhLHu,3UrTs][FBgl.#JJd%t]C+hFdh=.jBapTNO";?]Bd"$fl(#:!UW%mMqTdKB0CrCcKUjD0VY"i)pL^q0$H[R3hEH%*t3am*m*g0k0c0M%""HoS>R5Oubr"P?M?PoGe`G=2#9XPn@p5.BfPs5tC1*'`UcF%FH6V6B]a4fGZPbQc2(6]MZ?aIMl75A-N!q%-T;2k>PTKH'cCC)a`946L&5>0M/#A#\`hU-"ssF&D4l\TBke2r;!LZfQl333]\N:H%N!IkO3W.XKY''c:^0Q6eX+1*"s8@Fqq^8Z>M&@mJFTcIZr02&4lq"[b+d;Wlh59$cea9fc$pOQeW96g>dTl*fg=(tLWa#?B27jlh%&&CAlrCq!DA5I"Mc'juXK?/-$ol.Ih8?KO26-?XEV^QF/"87oJXK0ju,Q!+H;j;AJP!*Bj%1<7<a\2>=<O[sK?Etn>'g;u'E\\(<%ChnIc"Zd(r5iPWTbd*hp9E\Zc0\A*eOs[;Uk^$Pj@jp.,0]oW&NXe"iecMIk8Q,GdX8\8:KiduK!&'79Bo0`*gsZV8fcbl'D<!0>%a>]0OdhQ[]OrALr/FJKR<V9?E_k-PbCO7p;5nC#uh\*`kg1W,O,G5LcZRpjk&5*$M/AC>mQ\99-*r1kt7T"kXo-oHt74iKu6-/ME%=Ss8r&nrh8]iX=A%p:L?Q8HF)EPktTO7KP-@'pP!p9?3<4l7t\??^QSPP+[V?\8$\Gg"sui[&qgMq>jRgZ%l5+5>fJ0d#/ER?tHJ%2?>9m?LA=q&VPXO$R2sQY%k?0JWe4;r.bD+.Zpr*!XmFIDn5UBP[CqqpL65c\oLA==Q.G8gH:I]Q"X4)B0_M0/->2bC"e5cad5\A%2U2Q+c+uef&D554>,Eil6D:+Cnm;g+:rJJ`?PGE9--]<!MCRe1g+?r=o8U7$0YVBl/t7)4rmNlZ+*pNLR^0H;YG+T1;1`E,N`D8u%C^,%#N<u@Z?@<PUW2+4Q(kLp#HWs3V;fV6OD*%#X!q;e:Dnsh4W5IJ>92H5"/pYPUF1E36P.g1L(ScVe`K`nC#tq*"Dte8%9+e<0%"5ZZaCPfRTpHS#bNuSX92NW-!+iB%!6S58B!L@3IrC`K3!c>8;r#5(?2@E(TQB:?\#Sg^P3r+$)OA9E*:).TO)"A]SO1t]]qWF`2%?U0T6cA-Q4#Rm,hd9DnhZ?mE$8Ib;"?ZPDV-8kZH@B>;OhTs3g]iC,P0#P^..Cbt0MJnoIOXiQ#3bNJpd_Q3me1TMu\q8R:@]aQS%6.?Mhq":@g'!g8SLX-8,E#CfYo^nNm[E+3u*i`$kcX6;h0kURqngfjg+QP'i*hd3kH8!,-%r%L3Oq>Eo<-B5fo"M#(lifKE=VZ>>%PlfXjlM::oML&\7+MZEsYK7%TZp]CW-C;`=bhS[U:EQmWhtjgRI#UEUqtp#\-f8'+`>a=;;qoe*B,-m,VhW:r_]q`3UP-o6R5p3Q%;rfL(n<X9\PTC1^QOGi`2_S*k3`UrP>D\t_JX.Qe[j66J?Y,K'`ke`s:jZ"NQ',?h$Pr@\>O*a4I`hlM$&nraN/"'Eij)XNh6`sP%O3kbr<E3u.OaS\5aL%\Z%3>fg)LJQWfa?P6Ore)h+5bp1!H_LjD]&Nsqhe=?gK")_2+Mr*_kX1%/.3_bNO>UJT+IG%aUoFtG/0@c%(GjAjEsd07MOldj.mRh`IR37t7o3K+5]XVMG2;]D*jU\L&P2RRPBBQ/Oet59-YHZc!c''3&&"Z4HqUC\>J[+!,1oUL,L,3d1Ye/&%U$5&LJ+:_Q4AttP16973kdM+NZXS^0984p'OrlT6[-$Ft'gsY+McQ8Fp"hu]Mp(qp&%h*_LY\O8p2t7H.E#*GmrO-8"7qA>)uL:G%[n!F1-1>p86WWBiP^4C/juGB!)mCCO6Q$B?r1Bu#3."EhkL9LXDV!`gC/@VIZba\]@<E+j\DF+f,5^T<:(:EBC)GO$nKE.J)K4;M%C=oN5L/cKu@F%HU0YL8ABn?.=5#2Uq1k#&KWA0+*CZs?K@6*JT?ghKWP1:CXn"HJCb7O3a?s+dXkDdN:4l1L1Y+?RSP3:bJMk6-M%(18mP^*]7a*GL@kPJd*MPi7(]*5A\VkN&jJL_SA9jIh#Jb2Ib@:hI10D"o1NqlRUno,]#bhWnSSP4%qZ,2a5R\o6T9?_0ckJcZq/%.4=)?#S9f_q4m\/%R`>WnXFs82`\dYUl^<VWZr3p4m:MO!HD&e[*T^nfUJQu')5!P%`p+E[ukb]YnqGEj<BZqR^9=%Oh#Opf]Wj&%(6S"C-(VD=5u&XU;meg^i\n&GeQA%pQ]Jruo'j(E'1_`?e_J/aQre^AA=oW1:`5U*>@G1ULprT^2`oNbD]b`%dide`II.@%kpan%%P!WU`*cq9<*WpBIjd;k?Gd"1C54Tgs&b%%Y(sTAW["1+GK*cG9WN2JB)k?%i'4AqG#h9S5g/HmaXNj<CT<>ui`MU7RTZ+=&\pNrq%p:YjG_(0$u5K%OBJo->//24];o/p4miZB6mL`0?Wp/S%6<A?9d<g>ejT"OW_CS_o&4O:pDnA(&HosbYu(oq?J<Oa#@8<PZGlcMO#%(>G#Bp?FTNMES&o-cIH5a%uWsSo-L.maJ=3Y%a0nOCRG^9r_LgOGFcB,(Q3\X:]LmV&R%#9PAZ)RU?;OV_6D!:Dk9k(Qc4,=h<IR%*X/=g`.JD;5@[2,)*s<N]&P<'Ae=Z69a[!K6F2_PEd10E7Dcr`8Ut"?:a@X2Zs02=8;&2/3.#5abp0V!^8"%eHCMiCZScb6&3n[&%W0(lV-.enqi'7>n3ifTrS>>KjdJD0Gc0+,IZ?E84*eGmXjVB`Y58T]PjM?2tCJ=)#`*Q,imTF6<4A#.G??7,1"E-(Zbf.0We/F^!%%jg.hbAr/4Wb6tQH,%9gBbL0Qi/t.!-JMFPY_km'/lae,`=6^#,Y.lt2Ymc3K]>EF(eKjJ$h&:dJNFDF9e,#[E7IfJV!,fs"i;Fa%-A;P``0,\LqZ#DE"EZP=obh4clUL`0M'JT1alp=G=&<!]Ml??;*LHch,#DlpS-(h7b;HFX"FsQR.Y40C*;<HA;YnVC9ZNEM"BL0f%?>_hlg;t,;oe[;4Ec+1k'%F(OTQr73F5I>"9sY]rW+^M^&SGLB;@A.Z\5lmu<=1pG`(mWOAIHl@\e1<G45Aj_hhao^CEq-VI=</0%^"*j)e#s/d[_f6UC*]MrP6uLSd4-\Y%:LN6gK:nmS`=JhRi5J2ncN:KQ]B[#D.L[#)+(OCGg'8:Q:cSd't#lifWG,4fPuYO(gYEh%:1>IM!SUJ;TDLb,O(/-1/r_8""j?G!^!;Q0bdW@*ZNK&joBjCWWt4duKgHaK]VKB"[Z:EY`5d`/2_rqKEucp&;qMpGK:/DX0aOZY%'&f1SQ`\gW[Hk!4p?":!eR'r7&l.S$00+q2NYI!UJ+]8A:UijIGT:%$Y.6cf>+"m`l7Kp$M1$T67sss->ui*__DYm9Y&/$0nZsb%%Fh%sFip)e$TRoL8>%(&lOs@6pTS@[#j$nnU$f?L)2G05J^(?3[A@F`1!6S>[obI0t]2=\6VV"1qT!4G2&u[BR9S$T7eHV8),`pg0%Eri1?)\.7PCi#?[W9:`cB;q9`e\&%"?ad]K.F*:jU_j]K*2^OF5JEtFqK5f%W>3J#F&$u2^86=h3Z(G.A0KF5lLkoNf!*#R#$>QJ%*hhjm"d"EQS=e7gZMbBq9[FtC6_I"e*go5!R'l3lba?TWRDn8qqYfH`']&+-K:m8jSbY*k[oX$6ZT/+#HZ\_T\eL8cY"UCV1BVMZ%4r;PQ![XmV#^)7E!)NcuZI+\2jO+d0d&h:mOZ8`U1I<[0X`R\a<7]*jfok*4egf<mg-#6P;$rMhTupTjNk,;SnDchol_38eBN9'T%W\P[JX.Yhh#@0uMK.sC'RW-I8fsQ)+?QR`V.]"[!TA#khAsNStnGF60gPU`k$BFV-ppq1S!b\P^'JJ.#;(&U/oKJ.GS#<k!@2t?9%a4)O,hY`.8AjR*lo&^RsC"b^c^d4^Q4;6#n'9,_'ioYu1i<dD>'XGQrV,dcS14[&Ac7qR9l*ePJ%oi])h@<R9EUMTK9m(h%Y4>Am%mkt'.@'4WVrC##-M8lU$4eQ&X;tB9<<cK<U"FG+HLYNsd4;b&'_(M(;<3;J<*9kC2>"ePpgjk'0BkXn#\u&\2\H?^<1Se)#g,;R_%C>Mu2TlN\(R#jQ/P".A;js;Ts*2<=WU>W@MSr^bNTJ91%$n3;%jIK;b[ORoqG\[]K-%dMN$(+erJ4=D7eoZF4*+5)O=Y%_1+\*;`%lJ*6#'s/\6dUcj%T[u;=KaCThii;6pah;MT2]dmd,$MA!'0I>j0\,?P02Ue(2NnCZ>,mNHiU(-)i+)1^,Q4CcK'E[EQ8\W!"`sk]%9N5Ajm[SaC7?#Wh,BE_XUbaD2D(06/`q?S9BSBSu2(E-njtl19;or&U=4Su)V6j>DQ8F[oSd"C3)c5TV7k54mBXZOO2p*j@VA[Os%"mA?kWb`MS2f?4)i&M-\M6`^Q,GL07X2%TXLW6luH%,M86r/NWW(+WbLOlAlAJhR*V!74@Quc%OJ5r8kr/^^<(7oRoaoagK;W2`F%@h=YJ9AU#Ybp"6pkMcn.<e;K-)&\\&luOEU>Fse+j1^rJZV$E(pa`MsD4X,.1Qq]qj@E3Zn+5L,c!qpq=U2@kcEPuC@@+V!AONe^%5R?Z*6QsC_=&201_%I97AF.;&a*h%%6(:/T/"-D#JIl&XJg@*X5DukG/uqmKH.F%nM0'kNQXNdD5LShl#WM+9aASJSX.:2'(`cu-%WRCDBg"Ak5+]U6'nn\\_4#MXHq#j/Y-kI"9gd7=ESkJu7lb8YC3eSi?bR*^,!jETgge=.!=cL%`?U!^A1=A>Vj1_+t8_jUc$7.#Y%;Mh.OMs+.L*jbMZn!63#5-sAmq.o'*e.]2@I5&]e4EZ;2_]jg$d@q]2jJKq'NA5G#Y:&YWKBrGfArkj=Q#nqCDo]o];d`cUS=Wmt%\mF`['1$>RPU2b&mf46-'<jdA(&FWZG!6?8M>H[FR@R)&<'[^ua@1)\&G=WTG+fC+j^B$!_djC^K_ab:BmIlAlj>C6U8RKhZsjC-%<IeTn*I*c-MoUr8&Q?AJ@h(YPGaC4l8_dIQIIl\T6*Jco(usMS.4[l13,+3KmoiLWnS$$Fm2hlg>t\8:kT/lZWckK?@]&>T9$3sk%\Eg+LK'[/87\S)EBs\Tu\m95o]3koeptFG29BIIRn6WBp9V/q"KZU!Eae;fsN\r%$A>JQK0_L;r>^P"G0[dHJj/S\UIF!@!4(GrB%#VRT"^],?ts!$;1T7"Mgf0`MfbQC0XK]f[o,F:TKPT$FO5C_E^Bh=J.jNub3B<-0UIR9c4X-A\<idDRG[YM1Xc@*D8l9dE[9dY&J%U+DY7e7rk_./ucFD8=#)(+26OF_0=$,c!>ONf+'D#eUQg[$?5_P>CmJl.#FI-W@=?$%O:'\<!F9hXff+.2`:iL]EsALK.4Imq70p%a:9VNTGC9cmpYf:"Y50>0Q!1opIAgU*"n[m4?^:"_HUF11=DsQ's](An+e[`m,!K#IAP'hM*60H<0pg']d`a<r%MEb>=pVkU=c9Z%Fc9g+28X(!(R[BVaKAg?muX2ejoB"VDjcEDOtE?Hr?8#s2RKI$"9G;/+#TDl*YW-g+eGS;6-B>j\ICdsihQ3O#T`m,Du]@^s763f%gOJr^ro\e+Y<W$LJ,Sj9mD&R[J,/D[]1)`,>jHOXornDl\,YXkr#bt3^\rY3rMtGJn,M4)+92!)s7l'_o=o8/^]*PK]eB<@n,N:Y%:U\nh9djuhm,I3+XPA=ZAOb16&SeU3LTs;6>?LJr">n!8YiZq2E7qGt@R'H*LTNO:"g+B=>>U?^Xo/^!"tt38:5+@SFMmTm;:=k#%Og,K=8SJP#DI2M<pIX"hbfJZo*SJiskiq!>q)eG'H?DP]jMgNGqbu0&77(i_>*:ZX578^MTj2Zi>C]%9,:s18K6prcja_^3IYha(%)tcSH;n^+t03O]#+-JcUOT.=k:H8"QSf."rqN+R>:8,W[P)2C$k?kF`E:E[9+J/_jT6^OCpfC:-E:VcNl7>#oD:O_FCcrJG81HT$%L+E!509?`+d""Xgfn!/J@H;r&`.@ZUjM#uu'f:3(?#?p:5I^G8'Mo(2(Lar/Gu7o+((bdG^=:?-X3cC6qjqEB[ZT[]j1`:O6jpUn%T)iQfc7k232$XoPmum^@mSQ<R"jE,DgfCAB/;Xu&#pf(\qPjlJmi^l%-t3ioISEV/7(V>pj68."Q0LU3Al!GEC<qQ.>4`I,1oeQk%gMbn#a6=Vd$K$l^6hMC[bbGEq]J=`%UF!1@s*M2lBt[,35/L$h4c9G[!;KXOXG!Z*pAo"gngqIbmOJjk*cpB9m0??@DfJ$TjVkuO%s7n6b[Si239ZHgA![N=0qmT*I-Jju52-.lRY::N#b$m1k,uT3lEo.a>h<Wa,,$.hFGXBiOWV\lS1tR#1i$:%i<)XtCX?sGpegC\H%*'=*00!"2^l5;]9Xs:b%.kcE:X!kG,?]Z$LF0aQ(GqXgi6RJCT3'CK526lTc[.Fp=IZLM6('L'$:F&G9AW6GeHm$fBL.`7Jm?&?2%ebXS.HXI6\5&!^P)[HI8.+!KgpWapFs,f:C4_D]?X^27H$iCZ7K,CC$GQHIu_o?4H2YtHMYU'04U=TYKGU/EfLS6lPZ5@?/Apb*k%<(LL)c?dm+hG$@KKp.ChE5_@VG)A*]?CrY`i63Ci/2`(.A.*\,OPqS_>=^M&H(fNsSDC>@fQlPsXqc*oihnF18?jZN]oS)sWa5'h%=MP\]fIOY64h0rO&%Z0k%&-%RK&GMW!q>^[kJ@`sE"6AjrH]Zl2YSa8RXE86r^7k2.ZtD!l.(]!$SMcmlRLu3Va.B_H.*hdpuBJC%]al23kmU8H1,g(#hWqUDX`=2S&*&PS;LPB)@5!sgaKue])sS:dB'b4?K?ZiB="#!o;98L;pWA]`\07%^?)"K&9J,O!,_FGjdcana%Xgl30l$O\=KBJb=aY[D$;ou%#Y]>*()7PU"60q$%$fQgI)i<E-P)uO59-PNslVMm&Ua<k6=a>.Q5^'l'%O=]#)!.&jgQKQr,^DC(%LWS^5D8a?Rm`=D":LW_/g^\O2FXufKOm0+(EtH.EN05-cQ5+*+8Gl8:-?OrIi7&+Be%cX4ehE>?Q.Rhq\-73i-I``]4=aX06j$7B%ACee*_L4S,%mI.BYU#hRGrpJcDl\]Cl`0WR>R4dVkbMZ(-LW*@dLg<X;1XZ)OJPKUF(V7`O!<iAPjbHS.`14N0oTC9"ul<WPXMQm%6m`#FH.IBbgLR&>!i1)\0hg9YE2$]kR4*5rMJ*ap'6V90-&F)T?l,JW<e,E5PslH,`F8)B^)k-(PL!c0a]:)`@Q_N+1+smKU('M6%cD#"aOWZRnd#_R)"p&>kG!%ID4l&Ka#rt?l<mA]r%\Z%YdFlrQ"D(Tiqu]P)Y6phtKTS&do'cW3EZ3Ekia_\VK#K5.OsR>6W,b+\%$m\f-O+dCfoB##4LDt0b.57IXE>I/:<XE/?B@7IpZ'JOG8jfN^)HW4\!C$()q.o']AA=Q'Xp8Vn\Cs&s\^9m5*ZBGANNE&WKt3UM%4FX!*GZ*)mOGBSd>h::MJM]Zc].bEc62I]?#l"N?H,a1imZSt(8Df0j_kM<AAS5^2S2g9EOkB,*]%b\iS5F;5-](b50C<Ch\t^+n%h\$q'jKUmZ]nV`+PD^[BZQI.X@Qk-U(2mO.%*+J&M_I:n-CYM>)8^eINlkME!2HiT=TR4B/#*_0lq`J&!5I=@"7H/5pa@9@Gn`X$%W(s/.<6rocdTo5u0Tjs5j2rjC4AVO41,)>t#dRL*).(p&NZ3j=1=Q1fB`.FaG+;@@p2[!7WDjeI5U:nOh7?[t-9W^2#Mgi=MAf>K%A]r[0a#o8MCn/HLpVXS,<!f)FJ?"O=8i6Ia@RPinN1\ZF7I*N)C_0#+'%LOlcD]JW,4Wn:GZc1+[$/d-7*0#",eJiLMlo9MZCJVF%I`EFN?Vm.1Q(`(:Pq8,+Mj'F[\;YTXRXlX:>g8R)@pH6P1^J&-_jFEJ:WHUtF1AD"OGQX6j]g3>:l26c2!sI&QDToPJOfrKS#M(_%@;!d.qPFi8[+/GJ/Eq(j;<#Ej@4GGB#ZfBkQhH&3LBB3Q/m&#f:P.3,P[&6V_osW5&OXH!Pc&I'fo:mqo')Q>3bDQrie^ZF69+s.%-_E-@hN>P0C)L?nTA0*"c`RUgH?P2=M[=W$M2%.9$=WlK>9XY>Pt);MeL=pV@>",lqNKBqB<A*$n6Hd%Y6?hRS0-'<+YGlo?+jlN%Uh^ufV'hXspGFQ$q5Q-$<B.skS/JgJF9+Jm1goD^H#N7[5@^+J">FiGC3!t8J&:9&CQL=[an:$dX_6C68?N&mSk+1=BO"!<Vr);0%NVtiZ[V9p0&iVV`he1J$=4Nc^.JpR&`t;Mr?M*(J4EJ4]n^R1oahg=HQsL(2E7YuNm<q\`aOsg.\Dj[D:IpMV@\d6temte?AF*gK%fe5_2e78"$IcS(Ln3*:T@%XA$K,1W=+[]Sq4m[YV\**YO&UQl75TXKoEXulW<qktZc&A#+^r'?dDcLbF`]\Zjd@!ZZ&juL(9!U;+%h.8h*rf2.GH>>\;SIQ?8W?fu.\B>O%jsg;gVlRR/1Lp>bF4<Y2^\>G1H?l!f`mUgL8i_FVg_g<H"uVd;AZsBE8tmA#0Rm?8"aWBb%>Ta.pDVF5<gXG='flk^K6aK,Vm>T>\s*n0aZR`M)K[D0o4(tCc"-Ups-C9SJ!!*KRMeo[+"@oZu"Ekmm%eB=]F2$qM,A:;*G\9S@%?WDM=B:6j[iN9pF;?$1mac$;YM:l$X/p<U%H+5.E"cS7D`*"52YWL1<Sb_B]s*ba-Sk,+7PXe@j#rJ2O4Yb\JDF&V%;^D+J-%,6*%4lRph/>lZYT<;T&"8eAU5VY4t;i.W:Yo_a>5HSR%JajH._p1#p]*)<:J<-*e<eE#Y)OY8U`3LnI3'fM\,?H.3:PlBD:YfH6q/pdh%hBq.Gm8]/lgIJn%j8<e7HV1abC!PK5[&$H]Cb'+ak>Lo@>ModG]Bm)tU33(OG96^c8K4k-jf>5D,?n/,TAQC2BL;`X,V)i>mHm9C%Su1ocE\Pi1Jr(YN=.O-(N>V,_\-\.Gmk<YF&Wp"A2__@PhgHNof5KLEDr*s"qG?CNM5B"')[GCk!9FV:J,sVu70?M*8fEsb2&6U+%7*,d4e7"T+doW@N)1sY."I*EZFd-ST@%-<g>B:$3EsX8h&l$D&cKt^5:"C!g)H!TSjGc7?hl4a24erEOOi]^YPReQm]qCjZ9YO7^%X.qG9m-^Vee"2L=hi)rO5+J3-?g6:tZ`]mr7"\?DE!mr2jC?pD*IB!=G4k8BQ!(BEa#?h9(Cp6b-2XWUU,]0Or`+Wp$H;Z2WE*30%r$QoBbq`$Y,7@mj*eK-Yo5P.'BYXIB=3rjeP+0I.d%@Hmf8[k-o["&!37%hqnZ`HS3._2T@[=iA>OBRL7I;Lj!#8ZW0SQe>6W(VM%SM3(B;3ij08*V`XZBr&B(:jfQ\]Q67Rb5&=^&5%,17#WseK0nJDGj_#JL.<u:[Tr7^5?nd%U6rqi:6^l^"q+)#$Hj$jHl"Dq5Kn^%oVABi6Tl%.H.Q7dUg1A[YK>j*R;9!kY8;bI7in]p"^;l+cPI7-Vd)0uhWQG=<ha=9WWs]t_e0<KA3[C5XV@!+)FZ`BL(jLm8+)f$%&r@,8h^8!>C$gjr73h&slX&FPFrJL6/Sa6,'9=!DlqIOBj@=AhZ["2Y[!eA=n<%lAHEWJ@`H#TBO00RYR3bSWG4Go](moCdk++hs%!$QjuXp.LYm<&Qt@h2NS$&)N_(2&$FB]Y=sN#dUY'%cF6a1e%b\<f$<pWtF%H&n1>"#4^-%6RsOlU.>di:W@HF*?mp:fD-h>tM63%A/Vtbl:eCnY4LJ#PY:>C/<oc8(,`_[_,b\!S[&6r5iLM9gM)T<MoFTKqAt@!FWHqt6c*t9:%_@@B*\UB=o^"SdVjt`-8:VP#$&35%o,26"Gm5Cd@l?7Zh.\PmHb&efiOTWVaigSojKJATI1r;1;q9nE#`P^kV]b+AQ1b8hE!7Lo#K7Dqc"6(/'n7mG-pf*s\DNhJaGoXO%:XeT8Vk%p89ClY2$s6-df,b)[)lC2NZ[*TP^E2o<YJdp6hj;@NT"q$,!>b#W=B_(a/S<]O6.G''U[R;CHOarK?/uf23aS]1a-#]a%EYDYO_,a9BSs-k[2Tqujm9r>R;UaATL2/9$QjV%`7g$^:jRLFGP[oJ#ITOdbIPQhWR]j%d@TAjA77:2N.gS6D<&1CDG-4^fWlQ4s%^rpk)Gu)0Po>_2Se%+!peX[$hD'F7#/!?g)jkn7ZH:g4ld';3il+a@JGOOk&BM%1$7^`4l!dW+C5mTRE[!$1.If:rU&"8i?oq!q"%Upb`5"C.s_8C`&KMa2':A@"f(:uT^p%au0s@cDj>eaF1)*N>qe4&A<cfPd_FYXX@\Gm*3K1A[C"\SR2qO&ip!n]4r-4`86F'B;#V%`_Ac2)RHbta6Ze#Kmo4A4-Gk4psc((+mOL%;;W.SI^Xp)BQfH/Pl35=!M*/L6p0kdpqjjD?Xd06,E?n04p!OW<c5B+i-<E8Oa%Ap%IURa$i9kmm;$k&?L.6ESB^/&2pCO=FXt$t5`c<cNS6?++SAhp3UIU?U`+H[tbq5X:B<%'fh05YR4E;)a`0'E$S61D@0u`^j[cNHi%LmDuB>D0&'-MGW\7[]I#nfh)uT\!oQ:3kp)G0@%I0!PH]3999@8nP3HRuSgI]:Jb;?.[le=t85o9Kf#GXI&C&T!J,k<j8qg^P[]H%^iO,:hGg[lM!#H9qfBT4+nR0!9SpA<reXb,LQqX;P-28'(Cd>o('%Y=i&bJi1Z':M$E@,8U-?^\&B1Xb8>15dAuN?Lk4;QR<Y:1n%.iJ1<U3$Q_B?PS;q?@A_=K!t^'[P8K>Vg)+KJYD4q`U.n)O3-eGFp5b3Rl4>.%J>:9NcK]Li&lsVI7m;Li,ZQ="!HZP*;-YSa4kA%cNr77V)!Ob1-.cIG(ui#+n>TD1[Cc%3m0CW9DKSXjgaTMNH#,RVVB$)1[H-[]Yf299:e+48UO.X,dKiF63XeJU)[WOi.$XWU'>!i%=\2@a]egN-H6FVcWN2h<#ESGs85^lBHQO(t)_VLNf7>3-:Nujo+K1>HaqqN2c=@uq(R63s\.Z>;jOTCR3oCuhV5Y,!\Pg.C4'CB*%KF]0*>u-GR_a@3/aE:Ea'DDe?/:R?g5)lY1^]X:p7DgcJ]nlrW79IdU!ha%g5E7*PM__sl1:VJ)\/ia8Z!tGbADMpl&h%`.3O.0E%:cqYdE!/TGM,#:H>Nb+WW])Ug(D:1=.m=QE*u)mcqCX@4!_$$5UpW6<.o8Vd1c`@7>6>&.p3;0Z=n>*fm]O8c[<]5=-(/E(jl'8c%+WZX$B1ZHU3mWYuFBI"C8.OK&G]Pn_!\&&MlRdkZ>]t+'3eHmG32<B-mf:XCF0ZO(pt9q;,aVlWKX4MgVhJRZplSg!`Su3P3`IDt%$Me)fI?^f@:RVKEHOm%$e%Ae/_NM]Vqk^KjF-KRg6PG523]UHrUU;>`?!1&gXgA[XAIH*BJg#]K#r>%_1<!s:&`V]>=F"EicU;;L%&rBec+a$->4V(Da*>!rEdcQKB=Y,W%A&1KJX1<In_6X[ZXl`rqK!QBE)TAS!%(@@FH8B":7+0SOqZ;\16u03FAsIDGWq/I:E15f:%?*fd'[_'W)/!=_mZc1[s0OSdmY(7AUd:]WmCl<[MZ8$->FQn[+YV6"#?5N`sPJgpdhbN$Z2h9$`/;!4Tl<%n-)=bR1Pac&Bq5'S%%bY=.&=c(5l.03#Y>Zd#`?0@RBjaMs",E9Kf"<MVS3M-(,UcME5O<60KGuZnho3AZE?<m-%9Qa!SD+Ar=P[)X$dir8?@36Yq7Fe8(%>(;3UGm$m7lV,i)pUs03@oc4(.FM1\2P(\,a"uthlT(*($Wf@B#3Zk.`S:#1q2G6EgnL$r00U+&#Lds*HdrtM#uttJP4KPhW&Q[a%\*'#Ilf$dI;;YE%IUW>3d,gBeI?]JTU,oUteWR&LGURcL]ScL:?'9UXAYI.X0+S+!D<;_)6Z12dYT,j_^<d1MO?Z7#<%O?Bq#?@k%hs4EK"unaUPY4I07j4X:iFUZFO=&B8R)E#^bGI;5@.p<gWZs2r#G%E/d@qq4\V;H01n'+do#/L]cY1<&M'u,'&@&V&b^NH\/Ln.[%^=bZ_W4+2YX"Gc,lQ1KElCs/$SM1i/2Uh@LqQol0Hrip]!"&#N,NYW"go[EWYG02j*b+"ObXO--Ss#Z]7)ClZph16P^%R(?aE>,b%(UK,ZMd5cd^H\J,@0bn:J\L/bFpe,]>00EBq+s'4Pb#gVrP6-^XqM<'Y.dE;]%[!NdHlr2DRuehnN>+A"ZC?BX$3s^p!b"VMD33P%E$%+3)A5bd'iN,>,fU02bIL(606bSiMKk/^9NKOsO<H!K^7q,^^$]"T'#gkK^cKcr-^-08:]jcnIn+["WW'QQOaT3sC\;D\?.o6>%MMVh3$$e2kJZ_/Y91kJGek&Y(=(2fdegfnfGG_^2Nip7LC;WS.[OnH\ko)m]gfF9;1qMB0d9ng:lZ=-u(9=BCce!VAMcP]rdH?,/%;!Mo^r/bX(NsaJ&L&Z/;Z'?LA/;f\?\a.U]hY#BK%k5$rp"B#-I!1f5Qo5oA#CBlBiDU-WV3?33,WXK.;1W+Op15Ufhdfq3UM'[u%FiLe0X#eOlna_E*6+LN,drMKT!?+Y+1l:`<d&n!9c]5)Wh"%,H6SO-VQ>'i!epUOCb*F)cI:eO/ANJV#f\DdVh\kf*!8oTJ)EjoX%?%J&b[:CNF(rCBAs26nt2jYre6phMW$02D\d"Jo:%2Nr6Xdb9sfZTS$PUMTMT.lX_]>r)@Rq+Gj;l/#44S<aK")8*pJ^B@GBFFBP%<U0r*[!dTmT'g7p0oi/eiE98e-C+LS2C\Lirp#d_b3XhX5>s5`Gu#^5Ofqcjp+.?d[^RPm)cYq8/I_`s5oXeD#[V!Vn5QTfS1`tU%i"Th#^l9-qP_FRu@PDJ")9H);D#'1oGc>>l?D6!qO4&1KL]_6)$8atG^X\k$KaAWSr2R)2d\Z<qF7[&dl28-EZSWVT<H,:@n4p8F%^n2/]N+egm,"O*%q0[7bPsFj]9A]62e0B"/jS"0qC"KcRf%1jZ="-Sjrq6m+)I,qQkLW!?=jE68l2V87fH3&IQ8.32X8)"[p`2.U%<\5\94^V'[o=`)?ZUM*OLfuomZ&XEW=8S*p@E&uP.]jN`bfVoL-`@@TDK*d5%t^sq8:<4jq8$qD.12cUIpa))pahJi#2UQ"2>4,f%XZ+E4F>RLbfSip`A6$:Nq8CcuBLTBQcT3KO5\b"e$19kWq-<.RlcA4"1J^FFC+"@B%L'O.JIFqQW*a?>"P:"fV1^W4MkZ])q]d43%_u`V3.6N"t'LYV17\l#4_RD=A/8<ErU@%%t0OoR^Y3_Dl=UF9.V.PQQWA)/eeXkE'p)PAG1=RPHC0_8gmWZ4(j]k9HWH.fS4A?X6%,,a-,1OqbJP&hC62*[DZTl-BC$phY-f.3aKRapKhb(FSrYH(dA%.sK:B=+\";NtYchtjmEZE<159BF)Lg%!:#DaqlhBaD-.;T7oB%coo@%I=D]jF9\)6(oKf&`Q7<!1%r-1I*Hbb$2+6=hL51tTDIH[qtV>kJ,J3%cej-Am_agpI/NN`?U'&<kJ'3/IeVm+++O1[ro;<h%_q=q[n&Jels7lE=YQ+F[o;D>trq+B`M**Cn+91ih]0H>ch>[M4`-;g~>%AI9_PrivateDataEnd